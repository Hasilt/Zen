var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.673,1,1.646]],["body/modules/AppModule.html",[0,1.136,1,3.281,2,1.182,3,1.516,4,1.973,5,1.973,6,1.338,7,1.723,8,1.723,9,2.704,10,2.704,11,2.703,12,0.049,13,2.703,14,2.703,15,2.703,16,2.521,17,1.723,18,1.973,19,0.435,20,0.518,21,0.435,22,3.339,23,2.521,24,0.668,25,1.044,26,2.704,27,0.92,28,2.704,29,0.92,30,0.518,31,0.15,32,0.029,33,0.037,34,0.029]],["title/classes/CommentResolver.html",[31,0.125,35,1.646]],["body/classes/CommentResolver.html",[12,0.049,19,0.72,20,0.252,21,0.211,24,0.464,27,0.447,29,0.447,30,0.488,31,0.073,32,0.014,33,0.022,34,0.014,35,1.504,36,0.736,37,1.11,38,0.341,39,1.155,40,2.778,41,2.545,42,2.545,43,2.545,44,2.545,45,2.545,46,2.545,47,2.545,48,2.545,49,2.545,50,1.622,51,2.54,52,1.747,53,2.699,54,2.937,55,1.617,56,1.622,57,1.83,58,1.83,59,1.617,60,3.065,61,1.83,62,1.622,63,1.622,64,1.622,65,1.622,66,1.622,67,2.624,68,1.622,69,1.622,70,1.622,71,1.622,72,1.622,73,1.622,74,1.622,75,1.622,76,1.622,77,1.622,78,1.622,79,0.958,80,0.65,81,1.314,82,0.958,83,0.736,84,0.736,85,0.65,86,1.622,87,1.155,88,1.742,89,0.837,90,1.856,91,0.661,92,1.622,93,2.545,94,1.622,95,0.958,96,0.736,97,1.622,98,0.736,99,1.622,100,1.622,101,2.073,102,1.622,103,2.357,104,1.622,105,1.622,106,1.622,107,1.622,108,1.622,109,1.622,110,1.622,111,1.622,112,1.622,113,1.622,114,1.622,115,1.622,116,1.622,117,1.622,118,1.622,119,1.622]],["title/modules/ConfigModule.html",[0,0.673,11,1.437]],["body/modules/ConfigModule.html",[0,1.176,2,1.274,3,1.634,4,2.126,5,2.126,6,1.442,7,2.309,8,2.512,11,2.703,12,0.048,16,2.643,17,1.857,18,2.126,19,0.469,20,0.559,21,0.469,24,0.635,25,1.125,30,0.559,31,0.162,32,0.031,33,0.038,34,0.031,120,2.914,121,2.914,122,2.483,123,3.598,124,2.643,125,2.643,126,2.914,127,2.914,128,2.914,129,3.598]],["title/injectables/ConfigService.html",[122,1.264,130,1.116]],["body/injectables/ConfigService.html",[12,0.048,19,0.426,20,0.507,21,0.426,24,0.548,25,1.02,27,1.158,30,0.507,31,0.147,32,0.028,33,0.036,34,0.028,38,0.687,55,1.875,91,1.129,96,1.482,98,1.909,122,1.909,130,1.685,131,1.928,132,2.643,133,3.405,134,2.821,135,2.878,136,2.878,137,2.878,138,2.878,139,2.878,140,2.484,141,2.878,142,5.295,143,3.263,144,3.405,145,3.263,146,2.643,147,3.263,148,2.643,149,3.263,150,2.643,151,3.263,152,3.263,153,3.263,154,3.263]],["title/interfaces/Context.html",[52,0.871,155,1.437]],["body/interfaces/Context.html",[12,0.048,19,0.469,20,0.559,21,0.469,24,0.469,29,1.491,30,0.694,32,0.031,33,0.038,34,0.031,38,0.757,52,1.522,59,1.89,87,1.634,91,1.024,101,1.634,135,3.061,155,1.857,156,2.914,157,2.126,158,4.123,159,5.091,160,1.854,161,1.634,162,2.914,163,2.463]],["title/classes/EnvironmentBase.html",[31,0.125,134,1.437]],["body/classes/EnvironmentBase.html",[12,0.048,19,0.423,20,0.504,21,0.423,24,0.546,27,1.278,30,0.504,31,0.146,32,0.028,33,0.036,34,0.028,36,1.473,38,0.683,55,1.873,91,1.128,96,2.106,98,2.226,134,2.162,135,2.867,136,3.175,137,3.175,138,3.175,139,3.175,140,2.741,141,3.175,144,3.97,146,2.628,148,3.757,150,3.757,164,2.628,165,3.245,166,3.245,167,3.245,168,3.245,169,3.245,170,3.245,171,3.245,172,2.221,173,3.245,174,3.245,175,2.221]],["title/injectables/GqlConfigService.html",[130,1.116,176,1.646]],["body/injectables/GqlConfigService.html",[12,0.049,19,0.382,20,0.455,21,0.382,24,0.64,25,0.917,26,3.575,29,1.216,30,0.455,31,0.132,32,0.025,33,0.034,34,0.025,38,0.617,39,1.779,52,0.917,55,1.388,57,1.175,58,1.175,59,1.038,61,1.175,80,1.175,85,1.175,91,0.617,101,1.779,122,2.14,130,1.571,131,1.733,158,2.375,160,1.563,161,1.779,175,2.007,176,2.316,177,3.575,178,2.375,179,4.713,180,2.375,181,2.933,182,2.933,183,2.933,184,4.415,185,3.92,186,2.683,187,2.375,188,2.933,189,2.933,190,2.375,191,2.933,192,3.575,193,2.933,194,3.92,195,4.415,196,2.933,197,2.933,198,2.933,199,2.375,200,2.933,201,2.933,202,4.415,203,2.933,204,2.933,205,2.933,206,2.933,207,2.933,208,2.933,209,2.933,210,2.933,211,2.375]],["title/classes/GroupResolver.html",[31,0.125,212,1.646]],["body/classes/GroupResolver.html",[12,0.049,19,0.72,20,0.252,21,0.211,24,0.464,27,0.447,29,0.447,30,0.488,31,0.073,32,0.014,33,0.022,34,0.014,36,0.736,38,0.341,39,1.155,40,2.778,51,2.54,52,1.747,53,2.699,54,2.937,55,1.617,57,1.83,58,1.83,59,1.617,60,3.065,61,1.83,67,2.624,79,0.958,80,0.65,81,1.314,82,0.958,83,0.736,84,0.736,85,0.65,87,1.155,89,0.837,90,1.856,91,0.661,95,0.958,96,0.736,98,0.736,101,2.073,103,2.357,212,1.504,213,1.11,214,2.545,215,2.545,216,2.545,217,2.545,218,2.545,219,2.545,220,2.545,221,2.545,222,2.545,223,1.622,224,1.622,225,1.622,226,1.622,227,1.622,228,1.622,229,1.622,230,1.622,231,1.622,232,1.622,233,1.622,234,1.622,235,1.622,236,1.622,237,1.622,238,1.622,239,1.622,240,1.622,241,1.622,242,1.742,243,1.622,244,2.545,245,1.622,246,1.622,247,1.622,248,1.622,249,1.622,250,1.622,251,1.622,252,1.622,253,1.622,254,1.622,255,1.622,256,1.622,257,1.622,258,1.622,259,1.622,260,1.622,261,1.622,262,1.622,263,1.622,264,1.622,265,1.622]],["title/modules/JwtModule.html",[0,0.673,13,1.437]],["body/modules/JwtModule.html",[0,1.14,2,1.391,8,2.028,12,0.048,13,2.611,19,0.512,20,0.61,21,0.512,23,2.321,24,0.66,25,1.228,30,0.61,31,0.176,32,0.034,33,0.04,34,0.034,124,2.788,125,2.321,126,3.181,172,2.689,266,3.928,267,4.719,268,3.928]],["title/classes/PostResolver.html",[31,0.125,269,1.646]],["body/classes/PostResolver.html",[12,0.049,19,0.72,20,0.252,21,0.211,24,0.464,27,0.447,29,0.447,30,0.488,31,0.073,32,0.014,33,0.022,34,0.014,36,0.736,38,0.341,39,1.155,40,2.778,51,2.54,52,1.747,53,2.699,54,2.937,55,1.617,57,1.83,58,1.83,59,1.617,60,3.065,61,1.83,67,2.624,79,0.958,80,0.65,81,1.314,82,0.958,83,0.736,84,0.736,85,0.65,87,1.155,89,0.837,90,1.856,91,0.661,95,0.958,96,0.736,98,0.736,101,2.073,103,2.357,269,1.504,270,1.11,271,2.545,272,2.545,273,2.545,274,2.545,275,2.545,276,2.545,277,2.545,278,2.545,279,2.545,280,1.622,281,1.622,282,1.622,283,1.622,284,1.622,285,1.622,286,1.622,287,1.622,288,1.622,289,1.622,290,1.622,291,1.622,292,1.622,293,1.622,294,1.622,295,1.622,296,1.622,297,1.622,298,1.622,299,1.742,300,1.622,301,2.545,302,1.622,303,1.622,304,1.622,305,1.622,306,1.622,307,1.622,308,1.622,309,1.622,310,1.622,311,1.622,312,1.622,313,1.622,314,1.622,315,1.622,316,1.622,317,1.622,318,1.622,319,1.622,320,1.622,321,1.622,322,1.622]],["title/modules/PrismaModule.html",[0,0.673,14,1.437]],["body/modules/PrismaModule.html",[0,1.177,2,1.278,3,1.639,4,2.133,5,2.133,6,1.446,7,2.516,8,2.516,12,0.048,14,2.795,16,2.648,17,1.863,18,2.133,19,0.471,20,0.56,21,0.471,24,0.584,25,1.129,30,0.56,31,0.162,32,0.031,33,0.038,34,0.031,124,2.648,160,1.987,323,2.923,324,2.923,325,2.923,326,3.609,327,3.609]],["title/injectables/PrismaService.html",[130,1.116,160,0.986]],["body/injectables/PrismaService.html",[12,0.049,19,0.392,20,0.467,21,0.392,24,0.583,25,0.941,30,0.467,31,0.135,32,0.026,33,0.034,34,0.026,38,0.633,39,1.81,40,2.755,51,1.366,55,1.686,57,1.598,58,1.598,59,1.583,61,1.792,87,1.366,91,0.839,130,1.598,131,1.778,133,3.229,160,1.412,161,1.366,180,2.436,187,2.436,328,2.436,329,4.472,330,3.987,331,5.091,332,5.091,333,3.009,334,4.761,335,3.009,336,3.987,337,3.009,338,3.987,339,4.761,340,3.009,341,3.009,342,3.009,343,3.987,344,3.229,345,2.436,346,2.436,347,3.009,348,3.009,349,3.009,350,3.009,351,4.472,352,3.009,353,3.009,354,3.009]],["title/classes/UserResolver.html",[31,0.125,355,1.646]],["body/classes/UserResolver.html",[12,0.049,19,0.72,20,0.252,21,0.211,24,0.464,27,0.447,29,0.447,30,0.488,31,0.073,32,0.014,33,0.022,34,0.014,36,0.736,38,0.341,39,1.155,40,2.778,51,2.54,52,1.747,53,2.699,54,2.937,55,1.617,57,1.83,58,1.83,59,1.617,60,3.065,61,1.83,67,2.624,79,0.958,80,0.65,81,1.314,82,0.958,83,0.736,84,0.736,85,0.65,87,1.155,89,0.837,90,1.856,91,0.661,95,0.958,96,0.736,98,0.736,101,2.073,103,2.357,355,1.504,356,1.11,357,2.545,358,2.545,359,2.545,360,2.545,361,2.545,362,2.545,363,2.545,364,2.545,365,2.545,366,1.622,367,1.622,368,1.622,369,1.622,370,1.622,371,1.622,372,1.622,373,1.622,374,1.622,375,1.622,376,1.622,377,1.622,378,1.622,379,1.622,380,1.622,381,1.622,382,1.622,383,1.622,384,1.622,385,1.742,386,1.622,387,1.742,388,1.622,389,1.622,390,1.622,391,1.622,392,1.622,393,1.622,394,1.622,395,1.622,396,1.622,397,1.622,398,1.622,399,1.622,400,1.622,401,1.622,402,1.622,403,1.622,404,1.622,405,1.622,406,1.622,407,1.622,408,1.622]],["title/modules/ZenGraphQLModule.html",[0,0.673,15,1.437]],["body/modules/ZenGraphQLModule.html",[0,1.115,2,1.341,7,1.955,12,0.049,15,2.382,19,0.494,20,0.588,21,0.494,23,2.237,24,0.676,25,1.184,30,0.588,31,0.17,32,0.032,33,0.04,34,0.032,80,1.517,81,1.955,85,1.517,124,2.727,127,3.066,176,2.727,409,3.786,410,3.786,411,3.066,412,3.159,413,3.786,414,3.786]],["title/coverage.html",[415,3.065]],["body/coverage.html",[6,1.077,12,0.049,21,0.35,29,0.74,31,0.214,32,0.023,33,0.032,34,0.023,35,1.588,37,2.529,52,0.84,83,1.22,84,1.22,88,1.839,91,0.566,122,1.22,125,2.183,130,1.692,132,2.176,134,1.387,155,1.387,157,2.495,160,0.952,161,1.22,162,3.681,163,1.839,164,2.176,176,1.588,177,2.176,178,2.176,186,1.839,212,1.588,213,2.529,242,1.839,269,1.588,270,2.529,299,1.839,328,2.176,355,1.588,356,2.529,385,1.839,412,1.839,415,2.176,416,2.176,417,2.687,418,2.687,419,5.648,420,3.694,421,2.687,422,5.519,423,5.41,424,2.687,425,2.176,426,2.176,427,4.546,428,3.859,429,2.176,430,2.176,431,2.176,432,2.529,433,2.529,434,2.176,435,2.176,436,2.687,437,2.176,438,2.176,439,2.176,440,2.687,441,2.687]],["title/dependencies.html",[3,1.519,442,2.333]],["body/dependencies.html",[3,1.691,12,0.049,25,1.165,27,1.361,32,0.032,33,0.039,34,0.032,80,1.493,172,2.55,345,3.017,346,3.017,443,4.943,444,3.726,445,3.726,446,3.726,447,3.726,448,4.57,449,3.726,450,3.726,451,3.017,452,3.017,453,3.726,454,3.726,455,3.726,456,3.726,457,3.017,458,3.726,459,3.726,460,3.726,461,3.726,462,3.726,463,3.726,464,3.726,465,3.726,466,3.726]],["title/miscellaneous/functions.html",[467,1.379,468,2.709]],["body/miscellaneous/functions.html",[6,1.992,12,0.045,19,0.492,32,0.032,33,0.039,34,0.032,38,0.794,51,2.091,52,1.18,57,1.846,58,1.846,59,1.631,61,1.512,83,2.091,84,2.091,103,1.948,157,2.23,163,3.403,425,3.056,426,3.73,432,2.583,433,3.153,434,3.73,439,3.056,467,2.23,468,3.056,469,3.774,470,3.056,471,3.774,472,3.056,473,3.774,474,4.606,475,3.774]],["title/index.html",[38,0.491,476,2.333,477,2.333]],["body/index.html",[6,1.13,12,0.043,17,0.956,23,1.095,24,0.368,27,1.24,28,1.5,29,1.132,32,0.016,33,0.024,34,0.016,85,0.742,91,0.39,128,1.5,140,1.095,155,0.956,156,1.5,161,0.841,344,1.5,387,1.931,411,1.5,416,1.5,451,2.284,452,2.766,457,1.5,478,2.284,479,3.819,480,1.853,481,1.853,482,3.819,483,1.853,484,1.853,485,4.639,486,4.997,487,1.853,488,1.853,489,1.853,490,1.853,491,1.853,492,1.853,493,1.853,494,1.853,495,1.853,496,1.853,497,1.853,498,1.853,499,1.853,500,1.853,501,1.853,502,2.821,503,3.819,504,1.853,505,1.853,506,2.821,507,2.821,508,1.853,509,1.853,510,1.853,511,1.853,512,1.853,513,1.853,514,1.853,515,2.821,516,1.853,517,1.853,518,1.853,519,1.853,520,1.853,521,2.821,522,4.109,523,1.853,524,1.853,525,1.853,526,4.109,527,1.853,528,1.853,529,2.821,530,1.853,531,1.853,532,1.853,533,1.853,534,2.284,535,1.853,536,3.416,537,3.416,538,1.853,539,1.853,540,1.853,541,1.853,542,1.853,543,1.853,544,3.819,545,1.853,546,1.853,547,1.853,548,2.821,549,4.109,550,2.821,551,1.853,552,3.416,553,1.853,554,2.821,555,1.853,556,1.853,557,1.853,558,1.853,559,1.853,560,1.853,561,2.821,562,1.853,563,1.853,564,1.853,565,1.853,566,1.853,567,2.821,568,1.853,569,1.853,570,1.853,571,1.853,572,1.853,573,1.853,574,1.853,575,1.853,576,1.853,577,1.853,578,1.853,579,1.853,580,3.416,581,1.853,582,1.853,583,1.853,584,2.821,585,1.853,586,3.819,587,1.853,588,2.821,589,1.853,590,2.821,591,2.821,592,1.853,593,1.853,594,1.853,595,1.853,596,1.853,597,1.853,598,1.853,599,1.853,600,2.821,601,2.821,602,2.821,603,1.853,604,1.853,605,1.853,606,1.853,607,1.5,608,1.853,609,1.853,610,1.853,611,2.821,612,1.853,613,1.853,614,1.853,615,1.853,616,1.853,617,1.853,618,1.853,619,1.853,620,2.821,621,2.821,622,1.853,623,1.853,624,1.853,625,1.853,626,1.853,627,1.853,628,2.821,629,1.853,630,1.853,631,1.853,632,1.853,633,2.821,634,1.853,635,2.821,636,1.853,637,2.821,638,1.853,639,1.853,640,1.853,641,1.853,642,2.821,643,2.821,644,1.853,645,1.853,646,1.853,647,1.853,648,1.853,649,1.853,650,1.853,651,1.853,652,1.853,653,1.5,654,3.416,655,1.853,656,2.821,657,2.821,658,1.853,659,2.821,660,1.853,661,1.853,662,1.853,663,1.853,664,1.853,665,1.853,666,1.853,667,1.853,668,1.853,669,1.853,670,1.853,671,1.853,672,1.853,673,1.853,674,1.853,675,1.853,676,1.853,677,1.853,678,2.821,679,2.821,680,1.853,681,1.853,682,1.853,683,1.853,684,1.853,685,1.853,686,1.853,687,1.853,688,1.853,689,1.853,690,1.853,691,1.853,692,1.853,693,1.853,694,1.853,695,1.853,696,1.853,697,1.853,698,1.853,699,1.853,700,1.853,701,1.853,702,1.853,703,1.853,704,1.853]],["title/modules.html",[2,1.34]],["body/modules.html",[1,2.403,2,1.44,11,2.099,12,0.041,13,2.099,14,2.099,15,2.099,32,0.035,33,0.041,34,0.035,534,3.901,705,5.133,706,5.133,707,5.133,708,5.417,709,4.817]],["title/overview.html",[710,3.065]],["body/overview.html",[0,0.843,1,3.265,2,1.236,3,1.584,4,2.062,5,2.062,6,1.398,7,1.801,8,1.801,9,2.826,10,2.826,11,2.599,12,0.047,13,2.477,14,2.734,15,2.477,16,2.593,17,1.801,18,2.062,32,0.03,33,0.038,34,0.03,36,1.584,120,2.826,121,2.826,122,2.286,131,2.062,155,1.801,160,1.904,211,3.553,323,2.826,324,2.826,325,2.826,710,2.826,711,3.49,712,2.826]],["title/miscellaneous/variables.html",[467,1.379,713,2.709]],["body/miscellaneous/variables.html",[12,0.049,27,0.91,29,1.067,32,0.02,33,0.028,34,0.02,35,1.355,37,1.57,38,0.483,88,2.651,89,2.548,91,1.015,125,2.504,134,1.706,136,2.262,137,2.262,138,2.262,139,2.651,140,1.952,141,2.262,157,1.355,160,0.812,161,1.041,175,2.262,186,2.651,190,2.676,192,2.676,199,1.857,212,1.355,213,1.57,242,2.651,269,1.355,270,1.57,299,2.651,355,1.355,356,1.57,385,2.651,387,2.262,412,2.262,428,1.857,429,2.676,430,3.136,431,2.676,432,1.57,433,2.262,435,2.676,437,1.857,438,1.857,467,1.355,470,1.857,472,1.857,478,1.857,607,2.676,653,1.857,712,2.676,713,1.857,714,4.492,715,2.293,716,2.293,717,2.293,718,2.293,719,2.293,720,2.293,721,5.269,722,5.269,723,2.293,724,3.304,725,2.293,726,2.293,727,2.293,728,2.293,729,3.304,730,3.304,731,2.293,732,3.304,733,2.293,734,2.293,735,2.293,736,3.304,737,2.293,738,2.293,739,2.293,740,2.293,741,3.304,742,3.304,743,2.293,744,3.304,745,3.304,746,3.304,747,4.238,748,3.304,749,3.304,750,3.304,751,2.293,752,2.293,753,2.293,754,2.293,755,2.293,756,2.293,757,3.304,758,2.293,759,2.293]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":712,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1.2.6",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["1.7.8",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":627,"title":{},"body":{"index.html":{}}}],["15.3.0",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["2.16.1",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":208,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["20_000_000",{"_index":207,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["2592000",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":711,"title":{},"body":{"overview.html":{}}}],["30",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3600",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":211,"title":{},"body":{"injectables/GqlConfigService.html":{},"overview.html":{}}}],["5432",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5445",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.2.0",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["7.4.4",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["7.6.0",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["7080",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":548,"title":{},"body":{"index.html":{}}}],["add",{"_index":517,"title":{},"body":{"index.html":{}}}],["adds",{"_index":662,"title":{},"body":{"index.html":{}}}],["algorithm",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["all_type_defs",{"_index":186,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alleviate",{"_index":568,"title":{},"body":{"index.html":{}}}],["allow",{"_index":621,"title":{},"body":{"index.html":{}}}],["alpine",{"_index":681,"title":{},"body":{"index.html":{}}}],["ambitions",{"_index":503,"title":{},"body":{"index.html":{}}}],["angular",{"_index":486,"title":{},"body":{"index.html":{}}}],["api",{"_index":549,"title":{},"body":{"index.html":{}}}],["apollo",{"_index":451,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["apolloclient",{"_index":554,"title":{},"body":{"index.html":{}}}],["apollolink",{"_index":557,"title":{},"body":{"index.html":{}}}],["app",{"_index":691,"title":{},"body":{"index.html":{}}}],["application",{"_index":599,"title":{},"body":{"index.html":{}}}],["applications",{"_index":652,"title":{},"body":{"index.html":{}}}],["applied",{"_index":688,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":528,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":684,"title":{},"body":{"index.html":{}}}],["apps/.../comment.ts",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../context.ts",{"_index":470,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../group.ts",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../index.ts",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../post.ts",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../prisma",{"_index":471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../user.ts",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../write",{"_index":472,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app/config/config.module.ts",{"_index":123,"title":{},"body":{"modules/ConfigModule.html":{}}}],["apps/api/src/app/config/config.service.ts",{"_index":132,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/context.ts",{"_index":157,"title":{},"body":{"interfaces/Context.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/gql",{"_index":177,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/prisma",{"_index":425,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts",{"_index":37,"title":{},"body":{"classes/CommentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:23",{"_index":72,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:28",{"_index":68,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:33",{"_index":70,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:38",{"_index":56,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:43",{"_index":76,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:48",{"_index":65,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:53",{"_index":78,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:58",{"_index":63,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:63",{"_index":74,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts",{"_index":213,"title":{},"body":{"classes/GroupResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:23",{"_index":234,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:28",{"_index":230,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:33",{"_index":232,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:38",{"_index":224,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:43",{"_index":238,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:48",{"_index":228,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:53",{"_index":240,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:58",{"_index":226,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:63",{"_index":236,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/index.ts",{"_index":428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts",{"_index":270,"title":{},"body":{"classes/PostResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:23",{"_index":291,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:28",{"_index":287,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:33",{"_index":289,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:38",{"_index":281,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:43",{"_index":295,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:48",{"_index":285,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:53",{"_index":297,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:58",{"_index":283,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:63",{"_index":293,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts",{"_index":356,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:23",{"_index":377,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:28",{"_index":373,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:33",{"_index":375,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:38",{"_index":367,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:43",{"_index":381,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:48",{"_index":371,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:53",{"_index":383,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:58",{"_index":369,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:63",{"_index":379,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/write",{"_index":432,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/zen",{"_index":409,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["apps/api/src/app/jwt/jwt.module.ts",{"_index":266,"title":{},"body":{"modules/JwtModule.html":{}}}],["apps/api/src/app/prisma/prisma.module.ts",{"_index":326,"title":{},"body":{"modules/PrismaModule.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts",{"_index":328,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:11",{"_index":340,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:16",{"_index":342,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:20",{"_index":341,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:6",{"_index":335,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/environments/environment.base.ts",{"_index":164,"title":{},"body":{"classes/EnvironmentBase.html":{},"coverage.html":{}}}],["apps/api/src/environments/environment.base.ts:10",{"_index":169,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:11",{"_index":168,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:12",{"_index":171,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:13",{"_index":165,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:5",{"_index":170,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:6",{"_index":166,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:7",{"_index":167,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":439,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["args",{"_index":51,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["args.ts",{"_index":426,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["async",{"_index":40,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["authentication",{"_index":586,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":616,"title":{},"body":{"index.html":{}}}],["auto",{"_index":538,"title":{},"body":{"index.html":{}}}],["available",{"_index":534,"title":{},"body":{"index.html":{},"modules.html":{}}}],["await",{"_index":351,"title":{},"body":{"injectables/PrismaService.html":{}}}],["base",{"_index":683,"title":{},"body":{"index.html":{}}}],["based",{"_index":619,"title":{},"body":{"index.html":{}}}],["batching",{"_index":559,"title":{},"body":{"index.html":{}}}],["becomes",{"_index":533,"title":{},"body":{"index.html":{}}}],["being",{"_index":687,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":96,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{}}}],["browse",{"_index":708,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":705,"title":{},"body":{"modules.html":{}}}],["built",{"_index":484,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":521,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":518,"title":{},"body":{"index.html":{}}}],["case",{"_index":506,"title":{},"body":{"index.html":{}}}],["change",{"_index":608,"title":{},"body":{"index.html":{}}}],["choice",{"_index":641,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":638,"title":{},"body":{"index.html":{}}}],["class",{"_index":31,"title":{"classes/CommentResolver.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["classes",{"_index":36,"title":{},"body":{"classes/CommentResolver.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["clear",{"_index":701,"title":{},"body":{"index.html":{}}}],["client",{"_index":505,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":120,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":121,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":323,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":324,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":325,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["code",{"_index":544,"title":{},"body":{"index.html":{}}}],["comment",{"_index":93,"title":{},"body":{"classes/CommentResolver.html":{}}}],["commentresolver",{"_index":35,"title":{"classes/CommentResolver.html":{}},"body":{"classes/CommentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commenttypedef",{"_index":88,"title":{},"body":{"classes/CommentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["completion",{"_index":539,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":703,"title":{},"body":{"index.html":{}}}],["component",{"_index":648,"title":{},"body":{"index.html":{}}}],["components",{"_index":635,"title":{},"body":{"index.html":{}}}],["config",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"injectables/GqlConfigService.html":{}}}],["config.service",{"_index":127,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ZenGraphQLModule.html":{}}}],["config.service.ts",{"_index":178,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{}}}],["config.service.ts:12",{"_index":183,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["config.service.ts:9",{"_index":182,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["configmodule",{"_index":11,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":122,"title":{"injectables/ConfigService.html":{}},"body":{"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["configuration",{"_index":553,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":686,"title":{},"body":{"index.html":{}}}],["congestion",{"_index":570,"title":{},"body":{"index.html":{}}}],["console",{"_index":657,"title":{},"body":{"index.html":{}}}],["const",{"_index":87,"title":{},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["constructor",{"_index":180,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}}}],["constructor(@optional",{"_index":348,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(config",{"_index":181,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["constructor(options",{"_index":333,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(private",{"_index":188,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["container",{"_index":633,"title":{},"body":{"index.html":{}}}],["containerized",{"_index":677,"title":{},"body":{"index.html":{}}}],["content",{"_index":613,"title":{},"body":{"index.html":{}}}],["context",{"_index":52,"title":{"interfaces/Context.html":{}},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["contributing",{"_index":497,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":697,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":491,"title":{},"body":{"index.html":{}}}],["control",{"_index":620,"title":{},"body":{"index.html":{}}}],["conveniences",{"_index":665,"title":{},"body":{"index.html":{}}}],["convert",{"_index":527,"title":{},"body":{"index.html":{}}}],["cookiedomain",{"_index":136,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":524,"title":{},"body":{"index.html":{}}}],["cors",{"_index":198,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["coverage",{"_index":415,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcontext",{"_index":163,"title":{},"body":{"interfaces/Context.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["creategqloptions",{"_index":179,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["createonecomment",{"_index":41,"title":{},"body":{"classes/CommentResolver.html":{}}}],["createonecomment(@parent",{"_index":108,"title":{},"body":{"classes/CommentResolver.html":{}}}],["createonecomment(parent",{"_index":50,"title":{},"body":{"classes/CommentResolver.html":{}}}],["createonegroup",{"_index":214,"title":{},"body":{"classes/GroupResolver.html":{}}}],["createonegroup(@parent",{"_index":254,"title":{},"body":{"classes/GroupResolver.html":{}}}],["createonegroup(parent",{"_index":223,"title":{},"body":{"classes/GroupResolver.html":{}}}],["createonepost",{"_index":271,"title":{},"body":{"classes/PostResolver.html":{}}}],["createonepost(@parent",{"_index":311,"title":{},"body":{"classes/PostResolver.html":{}}}],["createonepost(parent",{"_index":280,"title":{},"body":{"classes/PostResolver.html":{}}}],["createoneuser",{"_index":357,"title":{},"body":{"classes/UserResolver.html":{}}}],["createoneuser(@parent",{"_index":397,"title":{},"body":{"classes/UserResolver.html":{}}}],["createoneuser(parent",{"_index":366,"title":{},"body":{"classes/UserResolver.html":{}}}],["creation",{"_index":590,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":200,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["css",{"_index":639,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":202,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["ctx.connection",{"_index":203,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["ctx.connection.context",{"_index":204,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["currently",{"_index":488,"title":{},"body":{"index.html":{}}}],["database",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debounce",{"_index":564,"title":{},"body":{"index.html":{}}}],["debug",{"_index":193,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["declarative",{"_index":622,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":53,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["default",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":55,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["deletemanycomment",{"_index":42,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deletemanycomment(@parent",{"_index":116,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deletemanycomment(parent",{"_index":62,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deletemanygroup",{"_index":215,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deletemanygroup(@parent",{"_index":262,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deletemanygroup(parent",{"_index":225,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deletemanypost",{"_index":272,"title":{},"body":{"classes/PostResolver.html":{}}}],["deletemanypost(@parent",{"_index":319,"title":{},"body":{"classes/PostResolver.html":{}}}],["deletemanypost(parent",{"_index":282,"title":{},"body":{"classes/PostResolver.html":{}}}],["deletemanyuser",{"_index":358,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletemanyuser(@parent",{"_index":405,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletemanyuser(parent",{"_index":368,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteonecomment",{"_index":43,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deleteonecomment(@parent",{"_index":112,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deleteonecomment(parent",{"_index":64,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deleteonegroup",{"_index":216,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deleteonegroup(@parent",{"_index":258,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deleteonegroup(parent",{"_index":227,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deleteonepost",{"_index":273,"title":{},"body":{"classes/PostResolver.html":{}}}],["deleteonepost(@parent",{"_index":315,"title":{},"body":{"classes/PostResolver.html":{}}}],["deleteonepost(parent",{"_index":284,"title":{},"body":{"classes/PostResolver.html":{}}}],["deleteoneuser",{"_index":359,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteoneuser(@parent",{"_index":401,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteoneuser(parent",{"_index":370,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletion",{"_index":520,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":614,"title":{},"body":{"index.html":{}}}],["designed",{"_index":593,"title":{},"body":{"index.html":{}}}],["dev",{"_index":653,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["developer",{"_index":664,"title":{},"body":{"index.html":{}}}],["development",{"_index":490,"title":{},"body":{"index.html":{}}}],["directives",{"_index":611,"title":{},"body":{"index.html":{}}}],["directly",{"_index":529,"title":{},"body":{"index.html":{}}}],["docker",{"_index":678,"title":{},"body":{"index.html":{}}}],["docs",{"_index":502,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":416,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["ecosystem",{"_index":668,"title":{},"body":{"index.html":{}}}],["enable",{"_index":537,"title":{},"body":{"index.html":{}}}],["enable/disable",{"_index":555,"title":{},"body":{"index.html":{}}}],["enabling",{"_index":577,"title":{},"body":{"index.html":{}}}],["enforced",{"_index":692,"title":{},"body":{"index.html":{}}}],["environment",{"_index":125,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentbase",{"_index":134,"title":{"classes/EnvironmentBase.html":{}},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentbase:10",{"_index":151,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:11",{"_index":149,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:12",{"_index":153,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:13",{"_index":143,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:5",{"_index":152,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:6",{"_index":145,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:7",{"_index":147,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environments/environment",{"_index":126,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{}}}],["environments/environment.base",{"_index":154,"title":{},"body":{"injectables/ConfigService.html":{}}}],["exclude",{"_index":647,"title":{},"body":{"index.html":{}}}],["execwritefile",{"_index":435,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["express",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["expressport",{"_index":137,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["extend",{"_index":90,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["extends",{"_index":133,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PrismaService.html":{}}}],["extension",{"_index":542,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":658,"title":{},"body":{"index.html":{}}}],["false",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feature",{"_index":532,"title":{},"body":{"index.html":{}}}],["features",{"_index":522,"title":{},"body":{"index.html":{}}}],["file",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["files",{"_index":579,"title":{},"body":{"index.html":{}}}],["filter(x",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtering",{"_index":508,"title":{},"body":{"index.html":{}}}],["findmanycomment",{"_index":44,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycomment(@parent",{"_index":104,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycomment(parent",{"_index":66,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycommentcount",{"_index":45,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycommentcount(@parent",{"_index":106,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycommentcount(parent",{"_index":69,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanygroup",{"_index":217,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroup(@parent",{"_index":250,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroup(parent",{"_index":229,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroupcount",{"_index":218,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroupcount(@parent",{"_index":252,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroupcount(parent",{"_index":231,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanypost",{"_index":274,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypost(@parent",{"_index":307,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypost(parent",{"_index":286,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypostcount",{"_index":275,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypostcount(@parent",{"_index":309,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypostcount(parent",{"_index":288,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanyuser",{"_index":360,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyuser(@parent",{"_index":393,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyuser(parent",{"_index":372,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount",{"_index":361,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount(@parent",{"_index":395,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount(parent",{"_index":374,"title":{},"body":{"classes/UserResolver.html":{}}}],["findonecomment",{"_index":46,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findonecomment(@parent",{"_index":100,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findonecomment(parent",{"_index":71,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findonegroup",{"_index":219,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findonegroup(@parent",{"_index":248,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findonegroup(parent",{"_index":233,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findonepost",{"_index":276,"title":{},"body":{"classes/PostResolver.html":{}}}],["findonepost(@parent",{"_index":305,"title":{},"body":{"classes/PostResolver.html":{}}}],["findonepost(parent",{"_index":290,"title":{},"body":{"classes/PostResolver.html":{}}}],["findoneuser",{"_index":362,"title":{},"body":{"classes/UserResolver.html":{}}}],["findoneuser(@parent",{"_index":391,"title":{},"body":{"classes/UserResolver.html":{}}}],["findoneuser(parent",{"_index":376,"title":{},"body":{"classes/UserResolver.html":{}}}],["fine",{"_index":623,"title":{},"body":{"index.html":{}}}],["first",{"_index":602,"title":{},"body":{"index.html":{}}}],["form",{"_index":576,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":693,"title":{},"body":{"index.html":{}}}],["free",{"_index":516,"title":{},"body":{"index.html":{}}}],["full",{"_index":480,"title":{},"body":{"index.html":{}}}],["function",{"_index":162,"title":{},"body":{"interfaces/Context.html":{},"coverage.html":{}}}],["functions",{"_index":468,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":504,"title":{},"body":{"index.html":{}}}],["generate",{"_index":704,"title":{},"body":{"index.html":{}}}],["generation",{"_index":536,"title":{},"body":{"index.html":{}}}],["getting",{"_index":476,"title":{"index.html":{}},"body":{}}],["git",{"_index":494,"title":{},"body":{"index.html":{}}}],["github",{"_index":499,"title":{},"body":{"index.html":{}}}],["give",{"_index":572,"title":{},"body":{"index.html":{}}}],["global",{"_index":124,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{}}}],["gql",{"_index":81,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["gqlconfigservice",{"_index":176,"title":{"injectables/GqlConfigService.html":{}},"body":{"injectables/GqlConfigService.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["gqlmoduleoptions",{"_index":184,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["gqloptionsfactory",{"_index":185,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["grained",{"_index":624,"title":{},"body":{"index.html":{}}}],["graph",{"_index":709,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["graphql.module.ts",{"_index":410,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["graphql_schema",{"_index":429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":411,"title":{},"body":{"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["graphqlmodule.forrootasync",{"_index":413,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["graphqlupload",{"_index":581,"title":{},"body":{"index.html":{}}}],["greatly",{"_index":651,"title":{},"body":{"index.html":{}}}],["grid",{"_index":645,"title":{},"body":{"index.html":{}}}],["group",{"_index":244,"title":{},"body":{"classes/GroupResolver.html":{}}}],["groupresolver",{"_index":212,"title":{"classes/GroupResolver.html":{}},"body":{"classes/GroupResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grouptypedef",{"_index":242,"title":{},"body":{"classes/GroupResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["guaranteeing",{"_index":696,"title":{},"body":{"index.html":{}}}],["guards",{"_index":610,"title":{},"body":{"index.html":{}}}],["gui",{"_index":660,"title":{},"body":{"index.html":{}}}],["helps",{"_index":567,"title":{},"body":{"index.html":{}}}],["horizontal",{"_index":632,"title":{},"body":{"index.html":{}}}],["host",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hs256",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":573,"title":{},"body":{"index.html":{}}}],["httpbatchlink",{"_index":558,"title":{},"body":{"index.html":{}}}],["ide",{"_index":671,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":679,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":523,"title":{},"body":{"index.html":{}}}],["implements",{"_index":187,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/JwtModule.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["index",{"_index":38,"title":{"index.html":{}},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["inherited",{"_index":142,"title":{},"body":{"injectables/ConfigService.html":{}}}],["injectable",{"_index":130,"title":{"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["injectables",{"_index":131,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{},"overview.html":{}}}],["insensitive",{"_index":507,"title":{},"body":{"index.html":{}}}],["installsubscriptionhandlers",{"_index":191,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["int",{"_index":95,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["integration",{"_index":589,"title":{},"body":{"index.html":{}}}],["interested",{"_index":496,"title":{},"body":{"index.html":{}}}],["interface",{"_index":155,"title":{"interfaces/Context.html":{}},"body":{"interfaces/Context.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaces",{"_index":156,"title":{},"body":{"interfaces/Context.html":{},"index.html":{}}}],["interval",{"_index":565,"title":{},"body":{"index.html":{}}}],["introspection",{"_index":196,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["issue",{"_index":495,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":629,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["jwtmodule",{"_index":13,"title":{"modules/JwtModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JwtModule.html":{},"modules.html":{},"overview.html":{}}}],["jwtmoduleoptions",{"_index":148,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["jwtoptions",{"_index":138,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["keeping",{"_index":631,"title":{},"body":{"index.html":{}}}],["language",{"_index":669,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["legibility",{"_index":702,"title":{},"body":{"index.html":{}}}],["literal",{"_index":146,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["localhost",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":591,"title":{},"body":{"index.html":{}}}],["lot",{"_index":663,"title":{},"body":{"index.html":{}}}],["makeexecutableschema",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management",{"_index":655,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":642,"title":{},"body":{"index.html":{}}}],["maxfiles",{"_index":210,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["maxfilesize",{"_index":206,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["mb",{"_index":209,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["merge",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["mergetypes([prisma_type_defs",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":39,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["miscellaneous",{"_index":467,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":650,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":601,"title":{},"body":{"index.html":{}}}],["modern",{"_index":479,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["monorepos",{"_index":661,"title":{},"body":{"index.html":{}}}],["multi",{"_index":574,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":54,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["mutations",{"_index":626,"title":{},"body":{"index.html":{}}}],["n+1",{"_index":513,"title":{},"body":{"index.html":{}}}],["name",{"_index":58,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":485,"title":{},"body":{"index.html":{}}}],["nest_resolvers",{"_index":412,"title":{},"body":{"modules/ZenGraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nest_type_defs",{"_index":430,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":80,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":172,"title":{},"body":{"classes/EnvironmentBase.html":{},"modules/JwtModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["nestjwtmodule",{"_index":267,"title":{},"body":{"modules/JwtModule.html":{}}}],["nestjwtmodule.register(environment.jwtoptions",{"_index":268,"title":{},"body":{"modules/JwtModule.html":{}}}],["network",{"_index":569,"title":{},"body":{"index.html":{}}}],["new",{"_index":161,"title":{},"body":{"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":689,"title":{},"body":{"index.html":{}}}],["node:14",{"_index":680,"title":{},"body":{"index.html":{}}}],["npm",{"_index":673,"title":{},"body":{"index.html":{}}}],["null",{"_index":89,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":144,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["nx",{"_index":654,"title":{},"body":{"index.html":{}}}],["occur",{"_index":562,"title":{},"body":{"index.html":{}}}],["official",{"_index":531,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":330,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ondelete(args",{"_index":338,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ondeleteargs",{"_index":339,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduledestroy",{"_index":331,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":332,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":493,"title":{},"body":{"index.html":{}}}],["optional",{"_index":59,"title":{},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":336,"title":{},"body":{"injectables/PrismaService.html":{}}}],["origin",{"_index":201,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["out",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["outpath",{"_index":475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["over",{"_index":584,"title":{},"body":{"index.html":{}}}],["overview",{"_index":710,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":442,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":598,"title":{},"body":{"index.html":{}}}],["paljs/plugins",{"_index":345,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["parameters",{"_index":57,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":60,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["part",{"_index":575,"title":{},"body":{"index.html":{}}}],["password",{"_index":607,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":587,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":615,"title":{},"body":{"index.html":{}}}],["pg",{"_index":174,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["playground",{"_index":175,"title":{},"body":{"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["poolconfig",{"_index":173,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["port",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portal",{"_index":483,"title":{},"body":{"index.html":{}}}],["post",{"_index":301,"title":{},"body":{"classes/PostResolver.html":{}}}],["postgres",{"_index":139,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["postgresqlconfig",{"_index":150,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["postresolver",{"_index":269,"title":{"classes/PostResolver.html":{}},"body":{"classes/PostResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["posttypedef",{"_index":299,"title":{},"body":{"classes/PostResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["predictable",{"_index":699,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":694,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":327,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":346,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/comment/resolvers",{"_index":86,"title":{},"body":{"classes/CommentResolver.html":{}}}],["prisma/group/resolvers",{"_index":241,"title":{},"body":{"classes/GroupResolver.html":{}}}],["prisma/post/resolvers",{"_index":298,"title":{},"body":{"classes/PostResolver.html":{}}}],["prisma/user/resolvers",{"_index":384,"title":{},"body":{"classes/UserResolver.html":{}}}],["prisma_schema",{"_index":431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma_type_defs",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":329,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientoptions",{"_index":334,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete",{"_index":344,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prismadelete(this",{"_index":350,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete.ondelete(args",{"_index":352,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":14,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaselect",{"_index":511,"title":{},"body":{"index.html":{}}}],["prismaselectargs",{"_index":83,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["prismaselectargs(info",{"_index":103,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["prismaservice",{"_index":160,"title":{"injectables/PrismaService.html":{}},"body":{"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["privatekey",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["problem",{"_index":514,"title":{},"body":{"index.html":{}}}],["process.env.jwt_private_key",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_public_key",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.pgpassword",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.pguser",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":140,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":526,"title":{},"body":{"index.html":{}}}],["promisify(fs.writefile",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":135,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{}}}],["provide",{"_index":128,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["publickey",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queries",{"_index":515,"title":{},"body":{"index.html":{}}}],["query",{"_index":67,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["querying",{"_index":509,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":189,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["really",{"_index":566,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["releases",{"_index":676,"title":{},"body":{"index.html":{}}}],["remembermeexpiresin",{"_index":141,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["replicas",{"_index":634,"title":{},"body":{"index.html":{}}}],["repo",{"_index":500,"title":{},"body":{"index.html":{}}}],["req",{"_index":158,"title":{},"body":{"interfaces/Context.html":{},"injectables/GqlConfigService.html":{}}}],["requests",{"_index":561,"title":{},"body":{"index.html":{}}}],["res",{"_index":159,"title":{},"body":{"interfaces/Context.html":{}}}],["reset",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"index.html":{},"overview.html":{}}}],["resolver",{"_index":79,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["resolver('comment",{"_index":99,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolver('group",{"_index":247,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolver('post",{"_index":304,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolver('user",{"_index":390,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers",{"_index":85,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["resolvers.mutation.createonecomment(parent",{"_index":109,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.createonegroup(parent",{"_index":255,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.createonepost(parent",{"_index":312,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.createoneuser(parent",{"_index":398,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.deletemanycomment(parent",{"_index":117,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.deletemanygroup(parent",{"_index":263,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.deletemanypost(parent",{"_index":320,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.deletemanyuser(parent",{"_index":406,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.deleteonecomment(parent",{"_index":113,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.deleteonegroup(parent",{"_index":259,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.deleteonepost(parent",{"_index":316,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.deleteoneuser(parent",{"_index":402,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.updatemanycomment(parent",{"_index":119,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.updatemanygroup(parent",{"_index":265,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.updatemanypost(parent",{"_index":322,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.updatemanyuser(parent",{"_index":408,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.updateonecomment(parent",{"_index":111,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.updateonegroup(parent",{"_index":257,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.updateonepost(parent",{"_index":314,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.updateoneuser(parent",{"_index":400,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.upsertonecomment(parent",{"_index":115,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.upsertonegroup(parent",{"_index":261,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.upsertonepost(parent",{"_index":318,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.upsertoneuser(parent",{"_index":404,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findmanycomment(parent",{"_index":105,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.query.findmanycommentcount(parent",{"_index":107,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.query.findmanygroup(parent",{"_index":251,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.query.findmanygroupcount(parent",{"_index":253,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.query.findmanypost(parent",{"_index":308,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.query.findmanypostcount(parent",{"_index":310,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.query.findmanyuser(parent",{"_index":394,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findmanyusercount(parent",{"_index":396,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findonecomment(parent",{"_index":102,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.query.findonegroup(parent",{"_index":249,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.query.findonepost(parent",{"_index":306,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.query.findoneuser(parent",{"_index":392,"title":{},"body":{"classes/UserResolver.html":{}}}],["responsive",{"_index":600,"title":{},"body":{"index.html":{}}}],["result",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":101,"title":{},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["returns",{"_index":61,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":618,"title":{},"body":{"index.html":{}}}],["route",{"_index":609,"title":{},"body":{"index.html":{}}}],["rs256",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["safe",{"_index":547,"title":{},"body":{"index.html":{}}}],["samplecommentfield",{"_index":97,"title":{},"body":{"classes/CommentResolver.html":{}}}],["samplecommentmutation(args",{"_index":94,"title":{},"body":{"classes/CommentResolver.html":{}}}],["samplecommentquery",{"_index":92,"title":{},"body":{"classes/CommentResolver.html":{}}}],["samplegroupfield",{"_index":246,"title":{},"body":{"classes/GroupResolver.html":{}}}],["samplegroupmutation(args",{"_index":245,"title":{},"body":{"classes/GroupResolver.html":{}}}],["samplegroupquery",{"_index":243,"title":{},"body":{"classes/GroupResolver.html":{}}}],["samplepostfield",{"_index":303,"title":{},"body":{"classes/PostResolver.html":{}}}],["samplepostmutation(args",{"_index":302,"title":{},"body":{"classes/PostResolver.html":{}}}],["samplepostquery",{"_index":300,"title":{},"body":{"classes/PostResolver.html":{}}}],["sampleuserfield",{"_index":389,"title":{},"body":{"classes/UserResolver.html":{}}}],["sampleusermutation(args",{"_index":388,"title":{},"body":{"classes/UserResolver.html":{}}}],["sampleuserquery",{"_index":386,"title":{},"body":{"classes/UserResolver.html":{}}}],["sass",{"_index":637,"title":{},"body":{"index.html":{}}}],["scaling",{"_index":588,"title":{},"body":{"index.html":{}}}],["schema",{"_index":474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["schema.ts",{"_index":433,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["schematics",{"_index":667,"title":{},"body":{"index.html":{}}}],["scope",{"_index":343,"title":{},"body":{"injectables/PrismaService.html":{}}}],["scope.request",{"_index":347,"title":{},"body":{"injectables/PrismaService.html":{}}}],["scripts",{"_index":674,"title":{},"body":{"index.html":{}}}],["sdl",{"_index":535,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["security",{"_index":625,"title":{},"body":{"index.html":{}}}],["select",{"_index":84,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":452,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":670,"title":{},"body":{"index.html":{}}}],["services",{"_index":545,"title":{},"body":{"index.html":{}}}],["set",{"_index":604,"title":{},"body":{"index.html":{}}}],["set_null",{"_index":519,"title":{},"body":{"index.html":{}}}],["several",{"_index":560,"title":{},"body":{"index.html":{}}}],["short",{"_index":563,"title":{},"body":{"index.html":{}}}],["show/hide",{"_index":612,"title":{},"body":{"index.html":{}}}],["side",{"_index":617,"title":{},"body":{"index.html":{}}}],["sign",{"_index":605,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":546,"title":{},"body":{"index.html":{}}}],["simplify",{"_index":552,"title":{},"body":{"index.html":{}}}],["single",{"_index":597,"title":{},"body":{"index.html":{}}}],["solve",{"_index":512,"title":{},"body":{"index.html":{}}}],["sort",{"_index":695,"title":{},"body":{"index.html":{}}}],["source",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["spa",{"_index":596,"title":{},"body":{"index.html":{}}}],["specifically",{"_index":594,"title":{},"body":{"index.html":{}}}],["stack",{"_index":481,"title":{},"body":{"index.html":{}}}],["standard",{"_index":603,"title":{},"body":{"index.html":{}}}],["standardized",{"_index":698,"title":{},"body":{"index.html":{}}}],["started",{"_index":477,"title":{"index.html":{}},"body":{}}],["stateless",{"_index":628,"title":{},"body":{"index.html":{}}}],["statements",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":98,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["structure",{"_index":700,"title":{},"body":{"index.html":{}}}],["styles",{"_index":649,"title":{},"body":{"index.html":{}}}],["styling",{"_index":636,"title":{},"body":{"index.html":{}}}],["subscriptions",{"_index":583,"title":{},"body":{"index.html":{}}}],["super(options",{"_index":349,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":706,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":530,"title":{},"body":{"index.html":{}}}],["svc",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":707,"title":{},"body":{"modules.html":{}}}],["system",{"_index":592,"title":{},"body":{"index.html":{}}}],["table",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":82,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["team",{"_index":525,"title":{},"body":{"index.html":{}}}],["temp",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":510,"title":{},"body":{"index.html":{}}}],["theme",{"_index":643,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":353,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":354,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.config.graphql.playground",{"_index":195,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["this.config.production",{"_index":194,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["through",{"_index":646,"title":{},"body":{"index.html":{}}}],["tokens",{"_index":630,"title":{},"body":{"index.html":{}}}],["tool",{"_index":541,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":672,"title":{},"body":{"index.html":{}}}],["tools",{"_index":457,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["tracing",{"_index":197,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["transpiler",{"_index":640,"title":{},"body":{"index.html":{}}}],["true",{"_index":192,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.app.json",{"_index":685,"title":{},"body":{"index.html":{}}}],["type",{"_index":91,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typedefs",{"_index":190,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":199,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":489,"title":{},"body":{"index.html":{}}}],["up",{"_index":606,"title":{},"body":{"index.html":{}}}],["updatemanycomment",{"_index":47,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updatemanycomment(@parent",{"_index":118,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updatemanycomment(parent",{"_index":73,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updatemanygroup",{"_index":220,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updatemanygroup(@parent",{"_index":264,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updatemanygroup(parent",{"_index":235,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updatemanypost",{"_index":277,"title":{},"body":{"classes/PostResolver.html":{}}}],["updatemanypost(@parent",{"_index":321,"title":{},"body":{"classes/PostResolver.html":{}}}],["updatemanypost(parent",{"_index":292,"title":{},"body":{"classes/PostResolver.html":{}}}],["updatemanyuser",{"_index":363,"title":{},"body":{"classes/UserResolver.html":{}}}],["updatemanyuser(@parent",{"_index":407,"title":{},"body":{"classes/UserResolver.html":{}}}],["updatemanyuser(parent",{"_index":378,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateonecomment",{"_index":48,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updateonecomment(@parent",{"_index":110,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updateonecomment(parent",{"_index":75,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updateonegroup",{"_index":221,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updateonegroup(@parent",{"_index":256,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updateonegroup(parent",{"_index":237,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updateonepost",{"_index":278,"title":{},"body":{"classes/PostResolver.html":{}}}],["updateonepost(@parent",{"_index":313,"title":{},"body":{"classes/PostResolver.html":{}}}],["updateonepost(parent",{"_index":294,"title":{},"body":{"classes/PostResolver.html":{}}}],["updateoneuser",{"_index":364,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateoneuser(@parent",{"_index":399,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateoneuser(parent",{"_index":380,"title":{},"body":{"classes/UserResolver.html":{}}}],["uploading",{"_index":578,"title":{},"body":{"index.html":{}}}],["uploadlink",{"_index":571,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":205,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["upsertonecomment",{"_index":49,"title":{},"body":{"classes/CommentResolver.html":{}}}],["upsertonecomment(@parent",{"_index":114,"title":{},"body":{"classes/CommentResolver.html":{}}}],["upsertonecomment(parent",{"_index":77,"title":{},"body":{"classes/CommentResolver.html":{}}}],["upsertonegroup",{"_index":222,"title":{},"body":{"classes/GroupResolver.html":{}}}],["upsertonegroup(@parent",{"_index":260,"title":{},"body":{"classes/GroupResolver.html":{}}}],["upsertonegroup(parent",{"_index":239,"title":{},"body":{"classes/GroupResolver.html":{}}}],["upsertonepost",{"_index":279,"title":{},"body":{"classes/PostResolver.html":{}}}],["upsertonepost(@parent",{"_index":317,"title":{},"body":{"classes/PostResolver.html":{}}}],["upsertonepost(parent",{"_index":296,"title":{},"body":{"classes/PostResolver.html":{}}}],["upsertoneuser",{"_index":365,"title":{},"body":{"classes/UserResolver.html":{}}}],["upsertoneuser(@parent",{"_index":403,"title":{},"body":{"classes/UserResolver.html":{}}}],["upsertoneuser(parent",{"_index":382,"title":{},"body":{"classes/UserResolver.html":{}}}],["use",{"_index":656,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":414,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["used",{"_index":682,"title":{},"body":{"index.html":{}}}],["user",{"_index":387,"title":{},"body":{"classes/UserResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userresolver",{"_index":355,"title":{"classes/UserResolver.html":{}},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usertypedef",{"_index":385,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":129,"title":{},"body":{"modules/ConfigModule.html":{}}}],["using",{"_index":540,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":644,"title":{},"body":{"index.html":{}}}],["v14",{"_index":690,"title":{},"body":{"index.html":{}}}],["value",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":713,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":666,"title":{},"body":{"index.html":{}}}],["varying",{"_index":556,"title":{},"body":{"index.html":{}}}],["versioned",{"_index":675,"title":{},"body":{"index.html":{}}}],["via",{"_index":580,"title":{},"body":{"index.html":{}}}],["vs",{"_index":543,"title":{},"body":{"index.html":{}}}],["vscode",{"_index":659,"title":{},"body":{"index.html":{}}}],["web",{"_index":482,"title":{},"body":{"index.html":{}}}],["websocketlink",{"_index":582,"title":{},"body":{"index.html":{}}}],["websockets",{"_index":585,"title":{},"body":{"index.html":{}}}],["welcome!&#x1f331",{"_index":492,"title":{},"body":{"index.html":{}}}],["within",{"_index":550,"title":{},"body":{"index.html":{}}}],["work",{"_index":595,"title":{},"body":{"index.html":{}}}],["writegraphqlschema",{"_index":434,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["writegraphqlschema(outpath",{"_index":473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["x",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f370",{"_index":498,"title":{},"body":{"index.html":{}}}],["x1f380",{"_index":551,"title":{},"body":{"index.html":{}}}],["x1f939",{"_index":487,"title":{},"body":{"index.html":{}}}],["yes",{"_index":337,"title":{},"body":{"injectables/PrismaService.html":{}}}],["zen",{"_index":478,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["zenadmin",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zengraphqlmodule",{"_index":15,"title":{"modules/ZenGraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["zensoftware.ca",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zensoftware/zen",{"_index":501,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAppModule -->\n\nJwtModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nAppModule -->\n\nZenGraphQLModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            JwtModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ZenGraphQLModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigModule } from './config';\nimport { ZenGraphQLModule } from './graphql';\nimport { JwtModule } from './jwt';\nimport { PrismaModule } from './prisma';\n\n@Module({\n  imports: [ConfigModule, JwtModule, ZenGraphQLModule, PrismaModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentResolver.html":{"url":"classes/CommentResolver.html","title":"class - CommentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Comment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneComment\n                            \n                            \n                                    Async\n                                deleteManyComment\n                            \n                            \n                                    Async\n                                deleteOneComment\n                            \n                            \n                                    Async\n                                findManyComment\n                            \n                            \n                                    Async\n                                findManyCommentCount\n                            \n                            \n                                    Async\n                                findOneComment\n                            \n                            \n                                    Async\n                                updateManyComment\n                            \n                            \n                                    Async\n                                updateOneComment\n                            \n                            \n                                    Async\n                                upsertOneComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyCommentCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyCommentCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/Comment/resolvers';\n\nexport const CommentTypeDef = null;\n// export const CommentTypeDef = gql`\n//   extend type Query {\n//     sampleCommentQuery: Comment!\n//   }\n//   extend type Mutation {\n//     sampleCommentMutation(args: Int!): Boolean\n//   }\n//   extend type Comment {\n//     sampleCommentField: String\n//   }\n// `;\n\n@Resolver('Comment')\nexport class CommentResolver {\n  @Query()\n  async findOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyCommentCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyCommentCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyComment(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\nimport { environment } from '../../environments/environment';\nimport { ConfigService } from './config.service';\n\n@Global()\n@Module({\n  providers: [{ provide: ConfigService, useValue: environment }],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/config/config.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EnvironmentBase\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieDomain\n                            \n                            \n                                expressPort\n                            \n                            \n                                graphql\n                            \n                            \n                                jwtOptions\n                            \n                            \n                                postgres\n                            \n                            \n                                production\n                            \n                            \n                                rememberMeExpiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookieDomain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JwtModuleOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postgres\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PostgreSQLConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            production\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rememberMeExpiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:12\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { EnvironmentBase } from '../../environments/environment.base';\n\n@Injectable()\nexport class ConfigService extends EnvironmentBase {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Context.html":{"url":"interfaces/Context.html","title":"interface - Context","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Context\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/context.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        prisma\n                                \n                                \n                                            Optional\n                                        req\n                                \n                                \n                                            Optional\n                                        res\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        prisma\n                                    \n                                \n                                \n                                    \n                                        prisma:         PrismaService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PrismaService\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                    \n                                \n                                \n                                    \n                                        req:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        res\n                                    \n                                \n                                \n                                    \n                                        res:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PrismaService } from '../prisma';\n\nconst prisma = new PrismaService();\n\nexport interface Context {\n  req?: any;\n  res?: any;\n  prisma?: PrismaService;\n}\n\nexport function createContext(): Context {\n  return {\n    prisma,\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentBase.html":{"url":"classes/EnvironmentBase.html","title":"class - EnvironmentBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/environments/environment.base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieDomain\n                            \n                            \n                                expressPort\n                            \n                            \n                                graphql\n                            \n                            \n                                jwtOptions\n                            \n                            \n                                postgres\n                            \n                            \n                                production\n                            \n                            \n                                rememberMeExpiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookieDomain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JwtModuleOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postgres\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PostgreSQLConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            production\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rememberMeExpiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { JwtModuleOptions } from '@nestjs/jwt';\nimport { PoolConfig as PostgreSQLConfig } from 'pg';\n\nexport class EnvironmentBase {\n  production: boolean;\n  expressPort: string | number;\n  graphql: {\n    playground: boolean;\n  };\n  postgres: PostgreSQLConfig;\n  jwtOptions: JwtModuleOptions;\n  rememberMeExpiresIn: number;\n  cookieDomain: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlConfigService.html":{"url":"injectables/GqlConfigService.html","title":"injectable - GqlConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GqlConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/gql-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGqlOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/graphql/gql-config.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGqlOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGqlOptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/graphql/gql-config.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     GqlModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { GqlModuleOptions, GqlOptionsFactory } from '@nestjs/graphql';\n\nimport { ConfigService } from '../config';\nimport { PrismaService } from '../prisma';\nimport { ALL_TYPE_DEFS } from './resolvers';\n\n@Injectable()\nexport class GqlConfigService implements GqlOptionsFactory {\n  constructor(private readonly config: ConfigService) {}\n\n  createGqlOptions(): GqlModuleOptions {\n    return {\n      typeDefs: ALL_TYPE_DEFS,\n      installSubscriptionHandlers: true,\n      debug: !this.config.production,\n      playground: this.config.graphql.playground,\n      introspection: this.config.graphql.playground,\n      tracing: this.config.graphql.playground,\n      cors: this.config.production ? undefined : { credentials: true, origin: true },\n      context: ctx => {\n        return ctx.connection\n          ? { ...ctx, req: ctx.connection.context, prisma: new PrismaService() }\n          : { ...ctx, prisma: new PrismaService() };\n      },\n      uploads: {\n        maxFileSize: 20_000_000, // 20 MB\n        maxFiles: 5,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupResolver.html":{"url":"classes/GroupResolver.html","title":"class - GroupResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Group.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneGroup\n                            \n                            \n                                    Async\n                                deleteManyGroup\n                            \n                            \n                                    Async\n                                deleteOneGroup\n                            \n                            \n                                    Async\n                                findManyGroup\n                            \n                            \n                                    Async\n                                findManyGroupCount\n                            \n                            \n                                    Async\n                                findOneGroup\n                            \n                            \n                                    Async\n                                updateManyGroup\n                            \n                            \n                                    Async\n                                updateOneGroup\n                            \n                            \n                                    Async\n                                upsertOneGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyGroupCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyGroupCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/Group/resolvers';\n\nexport const GroupTypeDef = null;\n// export const GroupTypeDef = gql`\n//   extend type Query {\n//     sampleGroupQuery: Group!\n//   }\n//   extend type Mutation {\n//     sampleGroupMutation(args: Int!): Boolean\n//   }\n//   extend type Group {\n//     sampleGroupField: String\n//   }\n// `;\n\n@Resolver('Group')\nexport class GroupResolver {\n  @Query()\n  async findOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyGroupCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyGroupCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtModule.html":{"url":"modules/JwtModule.html","title":"module - JwtModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/jwt/jwt.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { JwtModule as NestJwtModule } from '@nestjs/jwt';\n\nimport { environment } from '../../environments/environment';\n\n@Global()\n@Module({\n  imports: [NestJwtModule.register(environment.jwtOptions)],\n  exports: [NestJwtModule],\n})\nexport class JwtModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PostResolver.html":{"url":"classes/PostResolver.html","title":"class - PostResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PostResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Post.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOnePost\n                            \n                            \n                                    Async\n                                deleteManyPost\n                            \n                            \n                                    Async\n                                deleteOnePost\n                            \n                            \n                                    Async\n                                findManyPost\n                            \n                            \n                                    Async\n                                findManyPostCount\n                            \n                            \n                                    Async\n                                findOnePost\n                            \n                            \n                                    Async\n                                updateManyPost\n                            \n                            \n                                    Async\n                                updateOnePost\n                            \n                            \n                                    Async\n                                upsertOnePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyPost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyPost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyPostCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyPostCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyPost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/Post/resolvers';\n\nexport const PostTypeDef = null;\n// export const PostTypeDef = gql`\n//   extend type Query {\n//     samplePostQuery: Post!\n//   }\n//   extend type Mutation {\n//     samplePostMutation(args: Int!): Boolean\n//   }\n//   extend type Post {\n//     samplePostField: String\n//   }\n// `;\n\n@Resolver('Post')\nexport class PostResolver {\n  @Query()\n  async findOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyPost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyPost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyPostCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyPostCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyPost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyPost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyPost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyPost(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/prisma/prisma.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/prisma/prisma.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onDelete\n                            \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: PrismaClientOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    PrismaClientOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDelete(args: onDeleteArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            onDeleteArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleDestroy, OnModuleInit, Optional, Scope } from '@nestjs/common';\nimport { PrismaDelete, onDeleteArgs } from '@paljs/plugins';\nimport { PrismaClient, PrismaClientOptions } from '@prisma/client';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n  constructor(@Optional() options?: PrismaClientOptions) {\n    super(options);\n  }\n\n  async onDelete(args: onDeleteArgs) {\n    const prismaDelete = new PrismaDelete(this);\n    await prismaDelete.onDelete(args);\n  }\n\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async onModuleDestroy() {\n    await this.$disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/User.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneUser\n                            \n                            \n                                    Async\n                                deleteManyUser\n                            \n                            \n                                    Async\n                                deleteOneUser\n                            \n                            \n                                    Async\n                                findManyUser\n                            \n                            \n                                    Async\n                                findManyUserCount\n                            \n                            \n                                    Async\n                                findOneUser\n                            \n                            \n                                    Async\n                                updateManyUser\n                            \n                            \n                                    Async\n                                updateOneUser\n                            \n                            \n                                    Async\n                                upsertOneUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyUserCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyUserCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/User/resolvers';\n\nexport const UserTypeDef = null;\n// export const UserTypeDef = gql`\n//   extend type Query {\n//     sampleUserQuery: User!\n//   }\n//   extend type Mutation {\n//     sampleUserMutation(args: Int!): Boolean\n//   }\n//   extend type User {\n//     sampleUserField: String\n//   }\n// `;\n\n@Resolver('User')\nexport class UserResolver {\n  @Query()\n  async findOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyUserCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyUserCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyUser(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZenGraphQLModule.html":{"url":"modules/ZenGraphQLModule.html","title":"module - ZenGraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    ZenGraphQLModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/graphql/zen-graphql.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\n\nimport { GqlConfigService } from './gql-config.service';\nimport { NEST_RESOLVERS } from './resolvers';\n\n@Global()\n@Module({\n  imports: [\n    GraphQLModule.forRootAsync({\n      useClass: GqlConfigService,\n    }),\n  ],\n  providers: [...NEST_RESOLVERS],\n})\nexport class ZenGraphQLModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            interface\n            Context\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            function\n            createContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/gql-config.service.ts\n            \n            injectable\n            GqlConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/prisma-select-args.ts\n            \n            function\n            PrismaSelectArgs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Comment.ts\n            \n            class\n            CommentResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Comment.ts\n            \n            variable\n            CommentTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Group.ts\n            \n            class\n            GroupResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Group.ts\n            \n            variable\n            GroupTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Post.ts\n            \n            class\n            PostResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Post.ts\n            \n            variable\n            PostTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/User.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/User.ts\n            \n            variable\n            UserTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            ALL_TYPE_DEFS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            GRAPHQL_SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            NEST_RESOLVERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            NEST_TYPE_DEFS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            PRISMA_SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/write-schema.ts\n            \n            function\n            WriteGraphQLSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/write-schema.ts\n            \n            variable\n            execWriteFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.base.ts\n            \n            class\n            EnvironmentBase\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.4.4\n        \n            @nestjs/core : ^7.4.4\n        \n            @nestjs/graphql : ^7.6.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/platform-express : ^7.4.4\n        \n            @paljs/plugins : ^1.2.6\n        \n            @prisma/client : ^2.6.2\n        \n            apollo-server-express : ^2.16.1\n        \n            dotenv : 6.2.0\n        \n            graphql : ^15.3.0\n        \n            graphql-tools : ^6.2.1\n        \n            merge-graphql-schemas : ^1.7.8\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~6.5.5\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createContext   (apps/.../context.ts)\n                        \n                        \n                            PrismaSelectArgs   (apps/.../prisma-select-args.ts)\n                        \n                        \n                            WriteGraphQLSchema   (apps/.../write-schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/api/src/app/graphql/context.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createContext\n                        \n                        \n                    \n                \n            \n            \n                \ncreateContext()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         Context\n\n                    \n                \n            \n        \n    \n    apps/api/src/app/graphql/prisma-select-args.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PrismaSelectArgs\n                        \n                        \n                    \n                \n            \n            \n                \nPrismaSelectArgs(info, args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/api/src/app/graphql/write-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            WriteGraphQLSchema\n                        \n                        \n                    \n                \n            \n            \n                \nWriteGraphQLSchema(outPath, schema)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n⛩ Zen ⛩\nModern Full Stack Web Portal built with Nest and Angular\n&#x1F939; Currently under development - New contributors are welcome!&#x1F331;\nYou may open a git issue if you are interested in contributing! &#x1F370;\nGitHub Repo: @ZenSoftware/Zen\nDocs: ⛩ Zen Docs ⛩\n\nGraphQL Ambitions\n\n Nest GraphQL resolvers as a gateway to Prisma Client.\n Prisma Case Insensitive Filtering For case-insensitive querying of text.\n PrismaSelect to solve the N+1 problem for all queries for free.\n PrismaDelete to add CASCADE and SET_NULL deletion capabilities to Prisma. These features have yet to be implemented by the core Prisma team.  This project will convert to the approach directly supported by Prisma when the official feature becomes available.\n Nest GraphQL SDL generation to enable auto-completion using a tool like Apollo extension for VS Code\n Code generation of apollo-angular services to enable simple, type safe access to the GraphQL API within Angular. &#x1F380;\n An Angular GraphQLModule to simplify the configuration of the ApolloClient to enable/disable the varying ApolloLink features.\n HttpBatchLink for batching several GraphQL requests that occur within a short debounce interval. This really helps to alleviate network congestion.\n UploadLink to give ApolloClient HTTP multi-part form requests capabilities.  Enabling the uploading of files via GraphQLUpload.\n WebSocketLink for GraphQL subscriptions over websockets.\n\n\nAPI Authentication, Performance & Scaling Ambitions\n\n Nest authentication integration, user creation, and login system designed specifically to work for an Angular SPA (single page application).  This project will provide responsive, \"mobile first\" interfaces for the standard set of authentication features (sign up, login, password change).  \n Angular route guards and Angular directives to show/hide content depending on user permissions.\n Nest authorization directives for server side role-based access control to allow for declarative, fine grained security control over all GraphQL queries and mutations.\n 100% stateless web server authentication via JWT (Javascript Web Tokens). Keeping the API stateless will enable horizontal scaling of container replicas of the api in production.\n\n\nModern Web Components and Styling Ambitions\n\n SASS chosen as the css transpiler of choice\n Angular Material components & theme.\n Directly import Bootstrap reset, utilities, & grid features through SASS imports, and exclude the Bootstrap theme and component styles. These features are missing from Angular Material, and greatly simplify the creation of responsive, mobile first applications.\n\n\nProject & Dev Tools Ambitions\n\n Nx for project management to allow for the use of Nx Console extensions for VSCode.  Nx Console is a GUI interface for monorepos that adds a lot of modern developer conveniences.  It also helps to simplify the use of the various Angular & Nest code generation schematics available in the ecosystem.\n Angular Language Service for VSCode for modern IDE tooling.\n NPM scripts for versioned releases of the api server as a containerized Docker image.  node:14-alpine is used as the Docker container base image, and the appropriate tsconfig.app.json configurations are being applied for the Node v14 Nest app.\n Enforced code formatting via Prettier & import-sort, guaranteeing all contributions to the project are standardized with predictable structure, and clear legibility.\n Compodoc to generate Nest & Angular documentation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZenGraphQLModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAppModule -->\n\nJwtModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nAppModule -->\n\nZenGraphQLModule->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_TYPE_DEFS   (apps/.../index.ts)\n                        \n                        \n                            CommentTypeDef   (apps/.../Comment.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            execWriteFile   (apps/.../write-schema.ts)\n                        \n                        \n                            GRAPHQL_SCHEMA   (apps/.../index.ts)\n                        \n                        \n                            GroupTypeDef   (apps/.../Group.ts)\n                        \n                        \n                            NEST_RESOLVERS   (apps/.../index.ts)\n                        \n                        \n                            NEST_TYPE_DEFS   (apps/.../index.ts)\n                        \n                        \n                            PostTypeDef   (apps/.../Post.ts)\n                        \n                        \n                            prisma   (apps/.../context.ts)\n                        \n                        \n                            PRISMA_SCHEMA   (apps/.../index.ts)\n                        \n                        \n                            UserTypeDef   (apps/.../User.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/graphql/resolvers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_TYPE_DEFS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mergeTypes([PRISMA_TYPE_DEFS, ...NEST_TYPE_DEFS])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GRAPHQL_SCHEMA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : makeExecutableSchema({ typeDefs: ALL_TYPE_DEFS })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NEST_RESOLVERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  CommentResolver,\n  GroupResolver,\n  PostResolver,\n  UserResolver\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NEST_TYPE_DEFS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : [\n  CommentTypeDef,\n  GroupTypeDef,\n  PostTypeDef,\n  UserTypeDef\n].filter(x => x)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PRISMA_SCHEMA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : makeExecutableSchema({ typeDefs: PRISMA_TYPE_DEFS })\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Comment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CommentTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  expressPort: process.env.PORT,\n  graphql: {\n    playground: false,\n  },\n  postgres: {\n    host: 'postgres-svc',\n    port: 5432,\n    user: process.env.PGUSER,\n    password: process.env.PGPASSWORD,\n    database: 'prisma',\n  },\n  jwtOptions: {\n    privateKey: process.env.JWT_PRIVATE_KEY,\n    publicKey: process.env.JWT_PUBLIC_KEY,\n    signOptions: {\n      algorithm: 'RS256',\n      expiresIn: 3600, // 1 hour (in seconds)\n    },\n  },\n  rememberMeExpiresIn: 2592000, // 30 days (in seconds)\n  cookieDomain: 'zensoftware.ca',\n}\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  expressPort: 7080,\n  graphql: {\n    playground: true,\n  },\n  postgres: {\n    host: 'localhost',\n    port: 5445,\n    user: 'ZenAdmin',\n    password: 'temp',\n    database: 'zen',\n  },\n  jwtOptions: {\n    secret: 'dev secret',\n    signOptions: {\n      algorithm: 'HS256',\n      expiresIn: 3600, // 1 hour (in seconds)\n    },\n  },\n  rememberMeExpiresIn: 2592000, // 30 days (in seconds)\n  cookieDomain: undefined,\n}\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/write-schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            execWriteFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : promisify(fs.writeFile)\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Group.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GroupTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Post.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PostTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/context.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            prisma\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PrismaService()\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/User.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
