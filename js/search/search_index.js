var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.921,1,2.19]],["body/modules/AppModule.html",[0,1.546,1,4.391,2,1.547,3,1.668,4,1.952,5,1.952,6,1.547,7,1.952,8,1.802,9,3.274,10,3.274,11,3.736,12,0.028,13,3.137,14,3.137,15,3.736,16,2.524,17,1.245,18,1.952,19,0.265,20,0.305,21,0.265,22,3.889,23,2.747,24,0.68,25,0.866,26,2.124,27,1.547,28,1.668,29,1.668,30,0.305,31,0.048,32,0.016,33,0.021,34,0.016]],["title/classes/AuthLoginInput.html",[31,0.041,35,1.984]],["body/classes/AuthLoginInput.html",[12,0.027,19,0.263,20,0.303,21,0.263,24,0.558,30,0.303,31,0.062,32,0.016,33,0.021,34,0.016,35,2.994,36,1.429,37,2.95,38,3.514,39,1.94,40,0.431,41,1.493,42,2.082,43,2.574,44,1.779,45,3.322,46,0.619,47,1.213,48,2.383,49,2.551,50,1.333,51,3.254,52,5.007,53,3.695,54,3.864,55,2.148,56,5.555,57,3.864,58,2.551,59,2.551,60,1.429,61,3.305,62,2.551,63,2.551,64,1.94,65,2.551]],["title/modules/AuthModule.html",[0,0.921,66,1.984]],["body/modules/AuthModule.html",[0,1.432,2,1.327,3,1.43,4,1.674,5,1.674,6,1.327,7,2.591,8,2.391,12,0.028,13,3.262,14,3.003,16,2.279,17,1.067,18,1.674,19,0.227,20,0.261,21,0.227,23,2.48,24,0.682,25,0.742,28,1.947,29,1.43,30,0.261,31,0.042,32,0.014,33,0.019,34,0.014,66,3.987,67,2.807,68,3.334,69,2.807,70,2.807,71,3.55,72,3.01,73,3.577,74,3.334,75,4.539,76,2.2,77,3.334,78,1.821,79,3.334,80,3.334,81,3.334]],["title/classes/AuthPasswordChangeInput.html",[31,0.041,82,1.984]],["body/classes/AuthPasswordChangeInput.html",[12,0.027,19,0.279,20,0.321,21,0.279,24,0.58,30,0.321,31,0.065,32,0.017,33,0.021,34,0.017,36,1.514,37,2.866,39,2.056,40,0.457,41,1.549,42,2.028,44,1.828,46,0.58,47,1.24,48,2.229,50,1.247,53,3.834,58,2.703,59,2.703,60,1.514,62,2.703,64,2.056,82,3.108,83,4.212,84,3.768,85,4.212,86,3.834,87,3.021,88,4.212,89,2.703]],["title/classes/AuthPasswordResetConfirmationInput.html",[31,0.041,90,1.984]],["body/classes/AuthPasswordResetConfirmationInput.html",[12,0.027,17,1.82,19,0.276,20,0.318,21,0.276,24,0.576,30,0.318,31,0.064,32,0.017,33,0.021,34,0.017,36,1.499,37,2.853,39,2.035,40,0.452,41,1.539,42,2.023,44,1.82,46,0.576,47,1.235,48,2.215,50,1.239,53,3.81,58,2.676,59,2.676,60,1.499,62,2.676,64,2.035,84,3.751,86,3.81,87,2.991,88,4.193,89,2.676,90,3.088,91,4.785,92,3.105]],["title/classes/AuthPasswordResetRequestInput.html",[31,0.041,93,1.984]],["body/classes/AuthPasswordResetRequestInput.html",[12,0.027,17,1.752,19,0.303,20,0.348,21,0.303,24,0.496,30,0.348,31,0.068,32,0.018,33,0.022,34,0.018,36,1.645,37,2.747,39,2.233,40,0.496,41,1.631,42,1.898,43,2.746,44,1.752,46,0.496,47,1.13,48,1.908,49,2.936,50,1.067,61,3.612,63,2.936,64,2.233,65,2.936,89,2.936,93,3.273,94,3.612]],["title/classes/AuthRegisterInput.html",[31,0.041,95,1.984]],["body/classes/AuthRegisterInput.html",[12,0.027,19,0.252,20,0.29,21,0.252,24,0.543,30,0.29,31,0.061,32,0.015,33,0.02,34,0.015,36,1.369,37,3.015,39,1.859,40,0.413,41,1.452,42,2.115,43,2.521,44,1.742,46,0.645,47,1.316,48,2.089,49,2.444,50,1.387,51,3.117,58,2.444,59,2.444,60,1.369,61,3.214,62,2.444,63,2.444,64,1.859,65,2.444,86,3.593,87,2.732,88,2.732,95,2.912,96,5.056,97,1.851,98,4.015,99,4.581,100,3.703,101,4.1,102,3.703]],["title/classes/AuthResendVerificationInput.html",[31,0.041,103,2.448]],["body/classes/AuthResendVerificationInput.html",[12,0.027,19,0.305,20,0.351,21,0.305,24,0.5,30,0.351,31,0.068,32,0.018,33,0.023,34,0.018,36,1.657,37,2.76,39,2.249,40,0.5,41,1.638,42,1.904,43,2.755,46,0.5,47,1.135,48,1.921,49,2.957,50,1.075,61,3.628,63,2.957,64,2.249,65,2.957,89,2.957,103,4.056,104,4.628,105,4.628]],["title/classes/AuthResolver.html",[31,0.041,106,2.19]],["body/classes/AuthResolver.html",[12,0.028,19,0.087,20,0.1,21,0.087,24,0.56,25,0.284,26,1.811,27,0.507,28,0.547,30,0.169,31,0.016,32,0.005,33,0.009,34,0.005,35,2.411,36,0.471,40,0.142,41,0.644,42,1.061,43,1.991,44,1.188,45,1.292,46,0.574,47,1.124,48,1.73,50,1.131,55,1.592,71,1.811,72,0.59,78,1.181,82,2.411,84,1.427,85,0.94,90,2.411,92,0.696,93,2.411,95,2.411,97,1.448,98,1.595,99,1.073,106,1.427,107,0.94,108,3.219,109,2.814,110,0.927,111,2.931,112,2.369,113,2.161,114,2.814,115,2.814,116,2.814,117,2.161,118,2.161,119,1.085,120,1.274,121,1.319,122,3.171,123,2.791,124,1.811,125,1.274,126,1.799,127,1.799,128,1.537,129,2.369,130,0.94,131,0.94,132,1.858,133,1.595,134,1.82,135,2.446,136,1.82,137,1.427,138,1.82,139,1.274,140,1.274,141,2.955,142,4.032,143,1.844,144,1.274,145,1.274,146,3.426,147,1.71,148,1.274,149,5.668,150,2.837,151,1.274,152,1.274,153,1.274,154,1.274,155,1.274,156,2.837,157,1.274,158,1.274,159,1.274,160,1.274,161,1.274,162,2.161,163,1.274,164,4.877,165,0.94,166,0.762,167,1.422,168,0.94,169,0.64,170,1.274,171,1.073,172,0.841,173,0.94,174,1.683,175,0.762,176,1.274,177,0.94,178,2.092,179,0.94,180,1.427,181,1.073,182,1.537,183,1.073,184,1.073,185,1.073,186,1.073,187,2.64,188,1.863,189,0.841,190,0.86,191,3.125,192,1.274,193,1.274,194,4.019,195,1.274,196,1.274,197,1.073,198,1.274,199,1.422,200,1.274,201,1.274,202,3.711,203,2.814,204,3.968,205,2.575,206,3.968,207,3.711,208,4.712,209,3.315,210,1.274,211,2.161,212,1.274,213,2.161,214,1.274,215,1.595,216,1.274,217,2.161,218,2.161,219,1.274,220,1.274,221,2.161,222,1.274,223,1.274,224,1.274,225,2.161,226,1.274,227,4.032,228,1.274,229,2.814,230,1.274,231,1.274,232,1.274,233,1.274,234,1.073,235,1.274,236,2.161,237,1.274,238,1.274,239,1.274,240,1.274,241,1.274,242,2.161,243,2.161,244,1.82,245,1.274,246,1.274]],["title/injectables/AuthService.html",[71,1.813,247,0.921]],["body/injectables/AuthService.html",[12,0.028,19,0.196,20,0.225,21,0.196,24,0.637,25,0.641,26,2.84,28,1.234,30,0.225,31,0.036,32,0.012,33,0.017,34,0.012,40,0.321,42,1.311,45,3.655,46,0.457,47,1.073,50,0.983,55,2.046,71,2.238,92,2.238,97,1.311,108,1.899,110,1.757,119,1.444,121,2.068,122,4.213,126,1.63,127,1.63,128,1.571,129,4.625,130,2.122,131,2.122,132,3.149,134,2.422,135,3.022,136,2.422,137,1.899,138,2.422,143,2.229,147,1.145,172,1.899,178,2.272,182,2.238,187,2.395,188,2.056,190,1.63,199,1.234,244,3.449,247,1.136,248,1.333,249,2.422,250,4.096,251,2.876,252,2.876,253,4.096,254,5.71,255,2.876,256,2.422,257,3.022,258,2.876,259,2.876,260,1.899,261,2.876,262,1.72,263,1.72,264,3.449,265,2.876,266,2.122,267,3.52,268,2.876,269,2.876,270,1.899,271,2.876,272,2.876,273,2.876,274,2.876,275,2.876,276,2.876,277,2.876]],["title/interfaces/AuthSession.html",[182,1.813,278,1.141]],["body/interfaces/AuthSession.html",[12,0.027,19,0.297,20,0.342,21,0.297,30,0.342,32,0.018,33,0.022,34,0.018,40,0.487,41,1.613,45,3.676,46,0.685,47,1.372,55,2.522,60,1.616,132,4.057,182,2.957,188,3.086,190,2.446,278,1.503,279,3.679,280,3.679]],["title/modules/ConfigModule.html",[0,0.921,11,1.984]],["body/modules/ConfigModule.html",[0,1.606,2,1.679,3,1.81,4,2.119,5,2.119,6,1.679,7,2.659,8,2.682,11,3.74,12,0.028,16,2.659,17,1.351,18,2.119,19,0.287,20,0.331,21,0.287,24,0.646,25,0.94,30,0.331,31,0.053,32,0.017,33,0.022,34,0.017,121,2.607,281,3.553,282,3.553,283,4.22,284,4.46,285,3.167,286,3.114,287,3.553,288,3.553,289,4.22]],["title/injectables/ConfigService.html",[121,1.32,247,0.921]],["body/injectables/ConfigService.html",[12,0.028,19,0.25,20,0.288,21,0.25,24,0.541,25,0.82,27,1.93,30,0.288,31,0.046,32,0.015,33,0.02,34,0.015,40,0.41,41,1.446,46,0.725,47,1.001,50,1.528,55,1.579,121,1.93,247,1.346,248,1.705,270,3.202,290,3.099,291,3.202,292,3.92,293,3.579,294,3.579,295,3.579,296,3.579,297,3.202,298,3.579,299,3.579,300,6.369,301,3.68,302,3.68,303,4.084,304,3.68,305,3.099,306,3.68,307,3.099,308,3.68,309,3.68,310,3.68,311,3.68,312,3.68]],["title/classes/EnvironmentBase.html",[31,0.041,292,1.984]],["body/classes/EnvironmentBase.html",[12,0.028,19,0.241,20,0.278,21,0.241,24,0.527,27,2.119,30,0.278,31,0.044,32,0.015,33,0.019,34,0.015,36,1.31,38,2.119,40,0.395,41,1.41,44,1.135,46,0.72,47,1.32,50,1.515,55,2.284,270,3.75,292,2.829,293,3.928,294,3.928,295,3.928,296,3.928,297,3.514,298,3.928,299,3.928,303,3.982,305,4.483,307,4.483,313,2.983,314,3.544,315,3.544,316,3.544,317,3.544,318,3.544,319,3.544,320,3.544,321,3.544,322,2.615,323,3.544,324,3.544,325,2.615,326,2.339,327,2.983,328,2.983]],["title/injectables/GqlConfigService.html",[247,0.921,329,2.19]],["body/injectables/GqlConfigService.html",[12,0.028,19,0.216,20,0.249,21,0.216,24,0.674,25,0.708,26,2.751,27,1.265,29,2.33,30,0.249,31,0.04,32,0.013,33,0.018,34,0.013,40,0.355,42,1.018,46,0.355,50,1.054,97,1.018,108,2.099,110,1.885,111,1.596,119,1.596,121,2.161,126,1.265,127,1.265,135,3.242,137,2.099,146,3.011,147,1.265,167,1.364,169,1.596,178,1.265,199,1.885,247,1.219,248,1.473,257,2.346,260,2.099,262,3.011,266,2.346,325,2.346,329,2.9,330,4.239,331,2.677,332,5.432,333,2.677,334,6.043,335,3.179,336,3.179,337,5.035,338,3.179,339,2.346,340,4.394,341,3.179,342,1.596,343,2.346,344,1.901,345,2.677,346,2.677,347,3.179,348,3.179,349,3.179,350,5.035,351,3.179,352,3.179,353,3.179,354,3.179,355,3.179,356,3.179,357,3.179,358,2.099,359,3.179,360,3.179,361,3.179,362,3.179,363,3.179,364,3.179,365,3.179,366,2.677]],["title/injectables/GqlGuard.html",[72,1.537,247,0.921]],["body/injectables/GqlGuard.html",[12,0.028,19,0.218,20,0.251,21,0.218,24,0.638,25,0.714,30,0.251,31,0.04,32,0.013,33,0.018,34,0.013,40,0.357,42,1.026,46,0.564,50,1.213,72,2.047,76,2.115,97,1.619,110,1.895,111,2.538,119,1.609,126,2.012,127,2.012,128,1.75,133,2.364,146,2.642,147,1.758,167,1.895,169,1.609,175,3.023,178,2.275,187,1.609,194,2.364,199,2.169,247,1.226,248,1.485,260,2.115,262,1.916,264,2.698,291,2.115,339,2.364,367,2.698,368,4.418,369,4.418,370,3.204,371,5.91,372,3.204,373,4.418,374,5.099,375,3.204,376,4.418,377,3.204,378,3.204,379,3.204,380,3.204,381,2.698,382,3.204,383,4.418,384,3.204,385,5.056,386,4.418,387,3.204,388,4.418,389,3.204,390,5.056,391,3.204,392,3.204,393,3.204,394,3.204,395,3.204]],["title/interfaces/IContext.html",[141,1.666,278,1.141]],["body/interfaces/IContext.html",[12,0.027,19,0.303,20,0.348,21,0.303,24,0.496,29,2.724,30,0.348,32,0.018,33,0.022,34,0.018,40,0.496,41,1.631,46,0.661,60,1.645,97,2.07,141,2.747,256,5.207,278,1.53,342,3.105,358,4.083,396,3.745]],["title/modules/JwtModule.html",[0,0.921,13,1.666]],["body/modules/JwtModule.html",[0,1.567,2,1.864,8,2.17,12,0.028,13,3.044,19,0.319,20,0.367,21,0.319,23,2.559,24,0.676,25,1.043,30,0.367,31,0.058,32,0.019,33,0.023,34,0.019,285,2.801,286,3.456,322,3.456,397,4.683,398,5.647,399,4.683]],["title/interfaces/JwtPayload.html",[263,1.984,278,1.141]],["body/interfaces/JwtPayload.html",[12,0.027,19,0.257,20,0.296,21,0.257,30,0.296,32,0.015,33,0.02,34,0.015,40,0.422,41,1.472,42,2.022,46,0.704,47,1.386,60,1.398,97,2.093,188,2.926,190,2.319,263,2.953,270,4.093,278,1.301,400,3.184,401,3.184,402,5.828,403,5.828,404,5.828,405,5.828,406,5.828]],["title/injectables/JwtStrategy.html",[73,1.984,247,0.921]],["body/injectables/JwtStrategy.html",[12,0.028,19,0.219,20,0.252,21,0.219,24,0.676,25,0.715,26,2.766,28,2.171,30,0.252,31,0.04,32,0.013,33,0.018,34,0.013,40,0.358,42,1.029,46,0.494,47,0.663,50,1.062,73,2.646,76,2.12,92,1.755,94,3.342,97,1.417,110,1.898,111,2.542,119,1.613,121,2.171,126,1.761,127,1.761,143,1.898,147,1.278,172,2.12,178,1.278,187,2.542,188,1.613,190,2.015,199,2.171,247,1.228,248,1.488,260,2.12,263,3.262,291,2.12,333,2.705,358,2.12,381,2.705,407,2.705,408,4.425,409,3.212,410,4.425,411,3.212,412,4.425,413,3.212,414,3.212,415,4.425,416,3.212,417,2.705,418,3.212,419,3.212,420,3.212,421,3.212,422,3.212,423,3.212,424,4.425,425,3.212,426,2.705,427,3.212,428,3.212,429,3.212,430,3.212,431,3.212]],["title/modules/MailModule.html",[0,0.921,432,1.984]],["body/modules/MailModule.html",[0,1.473,2,1.402,3,1.511,4,1.769,5,1.769,6,1.402,7,2.665,8,2.46,12,0.028,13,3.052,16,2.366,17,1.128,18,1.769,19,0.24,20,0.276,21,0.24,23,2.574,24,0.678,25,0.785,28,1.511,30,0.276,31,0.044,32,0.014,33,0.019,34,0.014,124,3.581,137,2.326,205,1.925,262,2.107,285,2.107,286,2.6,432,3.82,433,2.966,434,3.523,435,2.966,436,2.966,437,3.523,438,4.712,439,4.712,440,3.523,441,2.326,442,2.6,443,3.523,444,3.523,445,3.523,446,3.523,447,3.523,448,3.523,449,3.523,450,2.966,451,3.523,452,3.523,453,3.523,454,3.523,455,2.6]],["title/injectables/MailService.html",[124,1.813,247,0.921]],["body/injectables/MailService.html",[12,0.028,17,1.724,19,0.212,20,0.244,21,0.212,24,0.631,25,0.694,26,2.942,28,1.336,30,0.244,31,0.039,32,0.013,33,0.018,34,0.013,40,0.347,42,1.595,43,2.007,44,1.595,46,0.631,47,1.028,50,1.195,92,1.702,97,1.595,108,3.288,110,1.858,119,2.175,121,2.143,122,4.434,124,2.367,126,1.982,127,1.982,147,1.724,167,1.858,178,1.724,199,1.336,247,1.202,248,1.443,267,2.299,441,2.056,442,2.299,450,3.648,455,2.299,456,2.299,457,4.333,458,4.333,459,3.115,460,5.384,461,3.115,462,4.333,463,4.333,464,4.533,465,3.115,466,4.333,467,3.115,468,3.115,469,4.333,470,2.86,471,3.115,472,3.648,473,2.623,474,3.115,475,3.115,476,3.115,477,2.623,478,3.115,479,3.115,480,3.115,481,3.115,482,3.115,483,3.115]],["title/interfaces/PasswordResetContext.html",[278,1.141,470,2.19]],["body/interfaces/PasswordResetContext.html",[12,0.027,19,0.329,20,0.378,21,0.329,30,0.378,32,0.02,33,0.024,34,0.02,40,0.539,41,1.715,46,0.539,47,1.268,60,1.786,278,1.661,470,3.797,477,5.355,484,4.066,485,4.066]],["title/modules/PrismaModule.html",[0,0.921,14,1.666]],["body/modules/PrismaModule.html",[0,1.614,2,1.697,3,1.829,4,2.141,5,2.141,6,1.697,7,2.92,8,2.695,12,0.027,14,3.259,16,2.676,17,1.365,18,2.141,19,0.29,20,0.334,21,0.29,24,0.594,25,0.95,30,0.334,31,0.053,32,0.017,33,0.022,34,0.017,342,3.382,486,3.59,487,3.59,488,3.59,489,4.264,490,4.264]],["title/injectables/PrismaService.html",[247,0.921,342,1.666]],["body/injectables/PrismaService.html",[12,0.028,19,0.238,20,0.274,21,0.238,24,0.59,25,0.78,30,0.274,31,0.044,32,0.014,33,0.019,34,0.014,40,0.391,46,0.523,50,1.357,97,1.695,110,2.013,111,3.203,119,1.759,126,1.868,127,1.868,147,2.107,166,2.095,178,1.394,194,3.906,205,1.914,247,1.302,248,1.623,291,3.099,342,2.357,345,2.95,455,3.464,491,2.95,492,5.294,493,4.694,494,6.069,495,6.069,496,3.503,497,5.655,498,3.503,499,3.503,500,4.694,501,5.655,502,3.503,503,3.503,504,3.503,505,3.503,506,3.952,507,2.95,508,2.95,509,3.503,510,3.503,511,3.503,512,3.503,513,3.503,514,3.503]],["title/interfaces/RequestUser.html",[143,1.423,278,1.141]],["body/interfaces/RequestUser.html",[12,0.027,19,0.317,20,0.365,21,0.317,30,0.365,32,0.019,33,0.023,34,0.019,40,0.52,41,1.679,46,0.628,47,1.35,60,1.725,143,2.417,188,3.156,190,2.502,278,1.605,515,3.928,516,3.928]],["title/classes/RoleResolver.html",[31,0.041,517,2.19]],["body/classes/RoleResolver.html",[12,0.028,19,0.448,20,0.137,21,0.119,24,0.552,25,0.39,27,0.697,29,0.752,30,0.276,31,0.022,32,0.007,33,0.012,34,0.007,36,0.648,40,0.195,46,0.393,47,0.362,48,2.276,50,1.273,55,0.752,72,0.812,78,1.536,97,1.699,110,1.206,111,3.207,126,2.112,127,2.112,128,0.957,141,0.88,143,0.752,146,3.919,147,2.112,150,3.396,156,3.852,165,1.293,166,3.992,167,2.336,168,1.293,169,0.88,173,1.293,174,1.048,175,2.106,177,1.293,178,1.119,180,2.324,189,1.157,190,0.697,199,2.276,215,1.293,344,1.048,517,1.856,518,1.293,519,2.812,520,2.812,521,2.812,522,2.812,523,2.812,524,2.812,525,2.812,526,2.812,527,2.812,528,1.752,529,1.752,530,5.157,531,1.752,532,1.752,533,1.752,534,1.752,535,1.752,536,1.752,537,1.752,538,1.752,539,1.752,540,1.752,541,1.752,542,1.752,543,1.752,544,1.752,545,1.752,546,1.752,547,1.157,548,1.157,549,1.752,550,2.075,551,1.293,552,1.752,553,1.752,554,1.752,555,1.752,556,1.475,557,1.752,558,1.752,559,3.916,560,1.752,561,1.752,562,1.752,563,1.752,564,1.752,565,1.752,566,1.752,567,1.752,568,1.752,569,1.752,570,1.752,571,1.752,572,1.752,573,1.752,574,1.752,575,1.752]],["title/classes/UserResolver.html",[31,0.041,576,2.19]],["body/classes/UserResolver.html",[12,0.028,19,0.446,20,0.133,21,0.116,24,0.545,25,0.378,27,0.676,29,0.729,30,0.27,31,0.021,32,0.007,33,0.011,34,0.007,36,0.628,40,0.19,44,1.268,46,0.385,47,0.351,48,2.313,50,1.294,55,0.729,72,0.787,78,1.499,97,1.682,110,1.177,111,3.227,126,2.09,127,2.09,128,0.928,141,0.853,143,0.729,146,3.907,147,2.146,150,3.357,156,3.824,165,1.254,166,3.982,167,2.313,168,1.254,169,0.853,173,1.254,174,1.016,175,1.016,177,1.254,178,1.092,180,2.277,187,1.377,189,1.122,190,0.676,199,2.313,215,1.254,344,1.016,530,5.128,547,1.122,548,1.122,551,1.254,556,1.431,559,3.875,576,1.811,577,1.254,578,2.743,579,2.743,580,2.743,581,2.743,582,2.743,583,2.743,584,2.743,585,2.743,586,2.743,587,1.699,588,1.699,589,1.699,590,1.699,591,1.699,592,1.699,593,1.699,594,1.699,595,1.699,596,1.699,597,1.699,598,1.699,599,3.449,600,1.699,601,1.699,602,1.699,603,1.699,604,1.699,605,1.699,606,1.699,607,1.699,608,2.024,609,1.699,610,1.699,611,1.699,612,1.699,613,1.699,614,1.699,615,1.699,616,1.699,617,1.699,618,1.699,619,1.699,620,1.699,621,1.699,622,1.699,623,1.699,624,1.699,625,1.699,626,1.699,627,1.699,628,1.699,629,1.699,630,1.699]],["title/modules/ZenGraphQLModule.html",[0,0.921,15,1.984]],["body/modules/ZenGraphQLModule.html",[0,1.514,2,1.482,3,1.598,4,1.87,5,1.87,6,1.482,7,2.454,8,1.726,12,0.028,14,3.1,15,3.898,16,2.454,17,1.193,18,1.87,19,0.253,20,0.292,21,0.253,23,2.671,24,0.702,25,0.83,29,1.598,30,0.292,31,0.046,32,0.015,33,0.02,34,0.015,66,3.693,78,2.035,123,3.136,128,2.035,169,1.87,284,4.116,287,3.136,329,3.227,344,2.227,432,3.693,631,3.725,632,3.725,633,3.725,634,3.725,635,3.136,636,3.607,637,3.725,638,3.725]],["title/coverage.html",[639,3.81]],["body/coverage.html",[6,0.965,12,0.028,17,1.158,21,0.165,31,0.074,32,0.01,33,0.015,34,0.01,35,1.45,37,2.7,38,1.45,39,2.7,44,1.385,46,0.27,71,1.325,72,1.124,73,1.45,82,1.45,83,1.79,90,1.45,91,2.042,93,1.45,94,1.601,95,1.45,96,2.042,103,1.79,104,2.042,105,2.042,106,1.601,107,2.669,121,0.965,124,1.325,133,5.005,141,1.218,143,1.04,174,1.45,179,1.79,182,1.325,190,0.965,205,1.325,247,1.546,249,2.042,263,1.45,278,1.764,279,2.042,280,2.042,285,2.163,290,2.042,292,1.45,313,2.042,329,1.601,330,2.042,331,2.042,342,1.218,343,1.79,367,2.042,396,2.042,400,2.042,401,2.042,407,2.042,456,1.79,470,1.601,484,2.042,485,2.042,491,2.042,515,2.042,516,2.042,517,1.601,518,2.669,547,1.601,548,1.601,550,1.79,576,1.601,577,2.669,608,1.79,636,1.79,639,2.042,640,2.042,641,2.425,642,2.425,643,5.379,644,2.042,645,3.045,646,6.249,647,6.422,648,4.795,649,2.042,650,2.042,651,2.425,652,2.042,653,3.617,654,1.79,655,4.795,656,2.042,657,4.326,658,4.326,659,2.042,660,2.042,661,3.617,662,2.425,663,4.318,664,2.042,665,2.042,666,2.042,667,2.669,668,2.669,669,2.042,670,2.042,671,2.042,672,2.042,673,2.042,674,2.425,675,2.425]],["title/dependencies.html",[3,1.711,676,2.773]],["body/dependencies.html",[3,1.657,12,0.028,25,0.861,27,1.993,28,1.657,31,0.062,32,0.016,33,0.021,34,0.016,64,1.94,76,2.551,169,1.94,171,3.254,172,3.305,322,2.851,326,2.551,339,2.851,417,4.216,441,2.551,442,2.851,507,3.254,508,3.254,677,3.864,678,5.555,679,3.864,680,5.007,681,3.864,682,3.864,683,3.864,684,3.254,685,5.007,686,3.864,687,3.864,688,3.864,689,3.864,690,3.864,691,3.864,692,3.864,693,3.864,694,3.864,695,3.864,696,3.864,697,3.864,698,3.254,699,3.864,700,3.864,701,3.864,702,3.864,703,3.864,704,3.864,705,3.864,706,3.864,707,3.864,708,3.864,709,3.864,710,3.864,711,3.864,712,3.864,713,3.864]],["title/miscellaneous/functions.html",[714,1.515,715,3.359]],["body/miscellaneous/functions.html",[6,2.359,12,0.026,19,0.303,32,0.018,33,0.022,34,0.018,40,0.496,97,1.752,126,2.178,127,2.178,147,1.77,166,3.273,167,1.908,547,3.612,548,3.612,559,3.282,654,3.282,656,4.991,659,3.745,660,4.607,667,3.282,668,4.038,669,4.607,673,3.745,714,2.43,715,3.745,716,4.448,717,3.745,718,4.448,719,3.745,720,4.448,721,4.607,722,4.448]],["title/index.html",[40,0.309,723,2.773,724,2.334]],["body/index.html",[6,1.213,12,0.023,17,0.621,23,1.059,24,0.34,27,2.122,28,0.832,29,1.989,32,0.008,33,0.012,34,0.008,38,1.822,44,0.621,46,0.216,60,0.717,83,1.431,101,1.633,175,1.16,187,1.53,197,2.566,205,1.059,206,3.592,234,1.633,278,0.667,288,1.633,297,1.28,326,2.816,344,1.16,426,1.633,441,3.52,506,1.633,635,1.633,640,1.633,684,3.592,698,1.633,721,2.566,724,1.633,725,3.169,726,4.266,727,1.939,728,1.939,729,4.266,730,1.939,731,1.939,732,5.818,733,1.939,734,1.939,735,1.939,736,1.939,737,1.939,738,1.939,739,1.939,740,1.939,741,1.939,742,1.939,743,1.939,744,1.939,745,3.047,746,1.939,747,1.939,748,1.939,749,1.939,750,4.923,751,1.939,752,1.939,753,1.939,754,3.047,755,3.047,756,4.266,757,1.939,758,1.939,759,1.939,760,1.939,761,4.923,762,1.939,763,3.047,764,1.939,765,4.266,766,1.939,767,1.939,768,1.939,769,1.939,770,3.047,771,4.266,772,3.764,773,1.939,774,1.939,775,4.923,776,1.939,777,4.266,778,1.939,779,1.939,780,3.047,781,1.939,782,1.939,783,1.939,784,1.939,785,1.939,786,1.939,787,1.939,788,3.047,789,1.939,790,1.939,791,1.939,792,1.939,793,1.939,794,3.047,795,4.637,796,1.939,797,1.939,798,1.939,799,1.939,800,1.939,801,3.047,802,1.939,803,1.939,804,1.939,805,1.939,806,2.566,807,1.939,808,3.764,809,3.764,810,1.939,811,1.939,812,1.939,813,1.939,814,1.939,815,1.939,816,1.939,817,1.939,818,3.047,819,3.047,820,1.939,821,3.764,822,1.939,823,3.047,824,1.939,825,1.939,826,1.939,827,1.939,828,1.939,829,1.939,830,3.047,831,1.939,832,1.939,833,1.939,834,1.939,835,1.939,836,3.047,837,1.939,838,1.939,839,1.939,840,1.939,841,1.939,842,1.939,843,1.939,844,1.939,845,1.939,846,1.939,847,1.939,848,1.939,849,1.939,850,1.939,851,3.047,852,1.939,853,4.266,854,1.939,855,3.047,856,1.939,857,3.047,858,1.939,859,1.939,860,1.939,861,1.939,862,1.939,863,1.939,864,1.939,865,1.939,866,3.047,867,3.047,868,3.047,869,1.939,870,1.939,871,1.939,872,1.939,873,3.047,874,1.939,875,1.939,876,1.939,877,1.939,878,1.939,879,1.939,880,1.939,881,3.047,882,3.047,883,1.939,884,1.939,885,1.939,886,1.939,887,1.939,888,3.047,889,1.939,890,1.939,891,1.939,892,1.939,893,3.047,894,1.939,895,3.047,896,1.939,897,3.047,898,1.939,899,1.939,900,1.939,901,1.939,902,3.047,903,3.047,904,1.939,905,1.939,906,1.939,907,1.939,908,1.939,909,1.939,910,1.939,911,1.939,912,1.939,913,1.633,914,3.764,915,1.939,916,3.047,917,3.047,918,1.939,919,1.939,920,1.939,921,1.939,922,1.939,923,1.939,924,1.939,925,1.939,926,1.939,927,1.939,928,1.939,929,1.939,930,1.939,931,1.939,932,1.939,933,1.939,934,1.939,935,1.939,936,3.047,937,1.939,938,1.939,939,1.939,940,1.939,941,1.939,942,1.939,943,1.939,944,1.939,945,1.939,946,1.939,947,1.939,948,1.939,949,1.939,950,1.939,951,1.939,952,1.939,953,1.939,954,1.939,955,1.939,956,1.939,957,1.939,958,1.939,959,1.939]],["title/modules.html",[2,1.801]],["body/modules.html",[1,3.057,2,1.843,11,2.769,12,0.023,13,2.325,14,2.325,15,2.769,32,0.019,33,0.023,34,0.019,66,2.769,432,2.769,806,3.899,960,6.528,961,6.528,962,6.528,963,6.605,964,4.631]],["title/overview.html",[965,3.81]],["body/overview.html",[0,0.891,1,4.186,2,1.278,3,1.378,4,1.613,5,1.613,6,1.278,7,1.613,8,1.488,9,2.705,10,2.705,11,3.262,12,0.028,13,3.146,14,3.1,15,3.747,16,2.222,17,1.029,18,1.613,32,0.013,33,0.018,34,0.013,36,1.188,60,1.188,66,3.952,67,2.705,69,2.705,70,2.705,71,3.311,72,2.808,73,3.028,121,2.171,124,3.311,248,1.488,281,2.705,282,2.705,342,3.042,366,2.705,432,3.692,433,2.705,435,2.705,436,2.705,486,2.705,487,2.705,488,2.705,965,2.705,966,4.425,967,3.212]],["title/miscellaneous/typealiases.html",[714,1.515,968,3.99]],["body/miscellaneous/typealiases.html",[12,0.025,17,1.565,32,0.02,33,0.024,34,0.02,40,0.545,43,2.264,44,1.565,46,0.545,141,2.453,167,2.484,456,3.606,464,4.877,472,4.877,473,4.114,654,3.606,714,2.67,717,4.114,969,4.887,970,5.793]],["title/miscellaneous/variables.html",[714,1.515,971,3.359]],["body/miscellaneous/variables.html",[12,0.028,27,1.219,29,0.837,32,0.008,33,0.013,34,0.008,35,1.831,38,1.831,40,0.218,43,1.751,44,1.58,45,1.831,46,0.596,47,1.203,55,1.995,78,1.066,82,1.831,84,2.021,85,1.44,90,1.831,92,1.066,93,1.831,94,2.021,95,1.831,98,1.44,106,1.288,107,1.44,112,1.643,130,4.413,131,4.413,132,1.288,143,1.313,150,1.288,156,1.288,167,1.313,174,1.831,178,1.219,179,2.789,180,2.021,181,1.643,182,2.065,183,1.643,184,1.643,185,1.643,186,1.643,187,2.683,188,0.98,189,1.288,190,1.851,191,3.916,199,1.313,204,2.578,205,1.673,257,2.259,262,1.831,266,1.44,267,2.259,285,2.56,292,1.831,293,2.259,294,2.259,295,2.259,296,2.789,297,2.021,298,2.259,299,2.259,325,2.259,326,2.021,327,2.578,328,2.578,343,2.789,346,2.578,358,1.288,374,2.578,517,1.288,518,1.44,550,2.789,551,3.159,576,1.288,577,1.44,608,2.789,636,2.259,644,1.643,645,3.604,649,1.643,650,2.578,652,1.643,663,1.643,664,2.578,665,3.182,666,2.578,667,1.44,668,2.259,670,2.578,671,1.643,672,1.643,714,1.066,719,1.643,725,3.182,913,1.643,971,1.643,972,4.651,973,1.951,974,1.951,975,1.951,976,1.951,977,1.951,978,1.951,979,1.951,980,1.951,981,1.951,982,3.062,983,1.951,984,1.951,985,1.951,986,1.951,987,3.062,988,1.951,989,3.062,990,1.951,991,1.951,992,1.951,993,3.062,994,1.951,995,1.951,996,1.951,997,1.951,998,3.062,999,3.062,1000,1.951,1001,3.062,1002,3.062,1003,3.062,1004,4.281,1005,3.062,1006,3.062,1007,3.062,1008,1.951,1009,3.062,1010,3.062,1011,3.062,1012,3.062,1013,1.951,1014,1.951,1015,1.951,1016,1.951,1017,1.951,1018,3.062,1019,1.951,1020,1.951,1021,1.951,1022,3.062,1023,1.951,1024,3.062,1025,3.062,1026,1.951,1027,3.062,1028,1.951,1029,1.951]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":133,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlGuard.html":{},"coverage.html":{}}}],["0.1.13",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.3.2",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["1.3.22",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":967,"title":{},"body":{"overview.html":{}}}],["100",{"_index":101,"title":{},"body":{"classes/AuthRegisterInput.html":{},"index.html":{}}}],["1000",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["12",{"_index":229,"title":{},"body":{"classes/AuthResolver.html":{}}}],["15.3.0",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["1d",{"_index":476,"title":{},"body":{"injectables/MailService.html":{}}}],["2.16.1",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":363,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["20_000_000",{"_index":362,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["2592000",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3600",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":208,"title":{},"body":{"classes/AuthResolver.html":{}}}],["5",{"_index":366,"title":{},"body":{"injectables/GqlConfigService.html":{},"overview.html":{}}}],["5432",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5445",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.2.0",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["6.4.11",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":966,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["7.4.4",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["7.6.0",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["7080",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":818,"title":{},"body":{"index.html":{}}}],["adapter",{"_index":454,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":790,"title":{},"body":{"index.html":{}}}],["adds",{"_index":921,"title":{},"body":{"index.html":{}}}],["algorithm",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":969,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_type_defs",{"_index":343,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alleviate",{"_index":837,"title":{},"body":{"index.html":{}}}],["allow",{"_index":882,"title":{},"body":{"index.html":{}}}],["allowedroles",{"_index":390,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["allowedroles.concat(handlerroles",{"_index":391,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["allowedroles.includes(userrole",{"_index":394,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["allowedroles.length",{"_index":392,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["alpine",{"_index":938,"title":{},"body":{"index.html":{}}}],["ambitions",{"_index":777,"title":{},"body":{"index.html":{}}}],["angular",{"_index":732,"title":{},"body":{"index.html":{}}}],["api",{"_index":775,"title":{},"body":{"index.html":{}}}],["apiconstants",{"_index":58,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{}}}],["apiconstants.password_max_length",{"_index":53,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{}}}],["apollo",{"_index":684,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["apollo:watch",{"_index":768,"title":{},"body":{"index.html":{}}}],["apolloclient",{"_index":823,"title":{},"body":{"index.html":{}}}],["apollolink",{"_index":826,"title":{},"body":{"index.html":{}}}],["app",{"_index":946,"title":{},"body":{"index.html":{}}}],["application",{"_index":865,"title":{},"body":{"index.html":{}}}],["applications",{"_index":912,"title":{},"body":{"index.html":{}}}],["applied",{"_index":945,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":800,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":941,"title":{},"body":{"index.html":{}}}],["apps/.../auth.ts",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../context.ts",{"_index":717,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../environment.prod.ts",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../gql",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../http",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../index.ts",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.service.ts",{"_index":970,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../main.ts",{"_index":716,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../prisma",{"_index":718,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../role.ts",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../roles.decorator.ts",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user.ts",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../write",{"_index":719,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app/auth/auth.module.ts",{"_index":74,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/api/src/app/auth/auth.service.ts",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/auth.service.ts:10",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:13",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/gql/gql",{"_index":644,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/gql/gql.guard.ts",{"_index":367,"title":{},"body":{"injectables/GqlGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/gql/gql.guard.ts:14",{"_index":375,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["apps/api/src/app/auth/gql/gql.guard.ts:32",{"_index":377,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["apps/api/src/app/auth/gql/gql.guard.ts:9",{"_index":372,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["apps/api/src/app/auth/http",{"_index":649,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/jwt",{"_index":400,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/jwt.strategy.ts",{"_index":407,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/jwt.strategy.ts:11",{"_index":409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/jwt.strategy.ts:25",{"_index":411,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/request",{"_index":515,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/roles.decorator.ts",{"_index":652,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/config/config.module.ts",{"_index":283,"title":{},"body":{"modules/ConfigModule.html":{}}}],["apps/api/src/app/config/config.service.ts",{"_index":290,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/context.ts",{"_index":654,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/api/src/app/graphql/gql",{"_index":330,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/models/auth",{"_index":37,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/models/context.ts",{"_index":396,"title":{},"body":{"interfaces/IContext.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/models/user",{"_index":279,"title":{},"body":{"interfaces/AuthSession.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/prisma",{"_index":659,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts",{"_index":107,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:110",{"_index":145,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:125",{"_index":159,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:137",{"_index":161,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:155",{"_index":157,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:180",{"_index":154,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:70",{"_index":139,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:74",{"_index":125,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:83",{"_index":163,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:97",{"_index":151,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/index.ts",{"_index":663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/role.ts",{"_index":518,"title":{},"body":{"classes/RoleResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/role.ts:28",{"_index":540,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/role.ts:33",{"_index":536,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/role.ts:38",{"_index":538,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/role.ts:43",{"_index":529,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/role.ts:48",{"_index":544,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/role.ts:53",{"_index":534,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/role.ts:58",{"_index":546,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/role.ts:63",{"_index":532,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/role.ts:68",{"_index":542,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts",{"_index":577,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:37",{"_index":600,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:42",{"_index":598,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:47",{"_index":594,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:52",{"_index":596,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:57",{"_index":588,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:62",{"_index":604,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:67",{"_index":592,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:72",{"_index":606,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:77",{"_index":590,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:82",{"_index":602,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/write",{"_index":667,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/zen",{"_index":633,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["apps/api/src/app/jwt/jwt.module.ts",{"_index":397,"title":{},"body":{"modules/JwtModule.html":{}}}],["apps/api/src/app/mail/mail.module.ts",{"_index":437,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/api/src/app/mail/mail.service.ts",{"_index":456,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/api/src/app/mail/mail.service.ts:13",{"_index":461,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/api/src/app/mail/mail.service.ts:20",{"_index":465,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/api/src/app/mail/mail.service.ts:24",{"_index":467,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/api/src/app/mail/templates/password",{"_index":484,"title":{},"body":{"interfaces/PasswordResetContext.html":{},"coverage.html":{}}}],["apps/api/src/app/prisma/prisma.module.ts",{"_index":489,"title":{},"body":{"modules/PrismaModule.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts",{"_index":491,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:11",{"_index":502,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:16",{"_index":504,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:20",{"_index":503,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:6",{"_index":498,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/environments/environment.base.ts",{"_index":313,"title":{},"body":{"classes/EnvironmentBase.html":{},"coverage.html":{}}}],["apps/api/src/environments/environment.base.ts:10",{"_index":318,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:11",{"_index":317,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:12",{"_index":320,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:13",{"_index":314,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:14",{"_index":321,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:5",{"_index":319,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:6",{"_index":315,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:7",{"_index":316,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":673,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["args",{"_index":166,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/PrismaService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["args('data",{"_index":202,"title":{},"body":{"classes/AuthResolver.html":{}}}],["args.ts",{"_index":660,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["array",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":111,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{}}}],["aud",{"_index":402,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["auth",{"_index":128,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlGuard.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["auth.service",{"_index":77,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.service",{"_index":176,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authentication",{"_index":853,"title":{},"body":{"index.html":{}}}],["authexchangetoken",{"_index":112,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["authexchangetoken(@context",{"_index":216,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authexchangetoken(ctx",{"_index":140,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authguard",{"_index":379,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["authguard('jwt",{"_index":380,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["authlogin",{"_index":113,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authlogin(@context",{"_index":201,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authlogin(ctx",{"_index":148,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authlogin(data",{"_index":181,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["authlogininput",{"_index":35,"title":{"classes/AuthLoginInput.html":{}},"body":{"classes/AuthLoginInput.html":{},"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmodule",{"_index":66,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":878,"title":{},"body":{"index.html":{}}}],["authpasswordchange",{"_index":114,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authpasswordchange(ctx",{"_index":152,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authpasswordchange(data",{"_index":184,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["authpasswordchangeinput",{"_index":82,"title":{"classes/AuthPasswordChangeInput.html":{}},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authpasswordresetconfirmation",{"_index":115,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authpasswordresetconfirmation(ctx",{"_index":155,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authpasswordresetconfirmation(data",{"_index":185,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["authpasswordresetconfirmationinput",{"_index":90,"title":{"classes/AuthPasswordResetConfirmationInput.html":{}},"body":{"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authpasswordresetrequest",{"_index":116,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authpasswordresetrequest(ctx",{"_index":158,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authpasswordresetrequest(data",{"_index":183,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["authpasswordresetrequestinput",{"_index":93,"title":{"classes/AuthPasswordResetRequestInput.html":{}},"body":{"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authregister",{"_index":117,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authregister(@context",{"_index":224,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authregister(ctx",{"_index":160,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authregister(data",{"_index":186,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["authregisterinput",{"_index":95,"title":{"classes/AuthRegisterInput.html":{}},"body":{"classes/AuthRegisterInput.html":{},"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authresendverificationinput",{"_index":103,"title":{"classes/AuthResendVerificationInput.html":{}},"body":{"classes/AuthResendVerificationInput.html":{},"coverage.html":{}}}],["authresolver",{"_index":106,"title":{"classes/AuthResolver.html":{}},"body":{"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":71,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsession",{"_index":182,"title":{"interfaces/AuthSession.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authtypedef",{"_index":179,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":810,"title":{},"body":{"index.html":{}}}],["available",{"_index":806,"title":{},"body":{"index.html":{},"modules.html":{}}}],["await",{"_index":194,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlGuard.html":{},"injectables/PrismaService.html":{}}}],["base",{"_index":940,"title":{},"body":{"index.html":{}}}],["based",{"_index":880,"title":{},"body":{"index.html":{}}}],["batching",{"_index":828,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":170,"title":{},"body":{"classes/AuthResolver.html":{}}}],["bcrypt.compare(data.oldpassword",{"_index":245,"title":{},"body":{"classes/AuthResolver.html":{}}}],["bcrypt.compare(data.password",{"_index":210,"title":{},"body":{"classes/AuthResolver.html":{}}}],["bcrypt.hash(data.newpassword",{"_index":242,"title":{},"body":{"classes/AuthResolver.html":{}}}],["bcrypt.hash(data.password",{"_index":228,"title":{},"body":{"classes/AuthResolver.html":{}}}],["bcryptjs",{"_index":171,"title":{},"body":{"classes/AuthResolver.html":{},"dependencies.html":{}}}],["becomes",{"_index":805,"title":{},"body":{"index.html":{}}}],["being",{"_index":944,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":55,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{}}}],["browse",{"_index":963,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":960,"title":{},"body":{"modules.html":{}}}],["built",{"_index":731,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":368,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["canactivate(context",{"_index":373,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["capabilities",{"_index":794,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":791,"title":{},"body":{"index.html":{}}}],["case",{"_index":780,"title":{},"body":{"index.html":{}}}],["catch",{"_index":239,"title":{},"body":{"classes/AuthResolver.html":{}}}],["cd",{"_index":760,"title":{},"body":{"index.html":{}}}],["change",{"_index":83,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"coverage.html":{},"index.html":{}}}],["choice",{"_index":901,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":898,"title":{},"body":{"index.html":{}}}],["class",{"_index":31,"title":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"classes/EnvironmentBase.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{}},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":36,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"classes/EnvironmentBase.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["classroles",{"_index":385,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["clear",{"_index":956,"title":{},"body":{"index.html":{}}}],["clear_cookie_options",{"_index":109,"title":{},"body":{"classes/AuthResolver.html":{}}}],["client",{"_index":779,"title":{},"body":{"index.html":{}}}],["clone",{"_index":757,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":281,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":282,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":433,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":435,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_imports",{"_index":434,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_mailmodule_providers",{"_index":436,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":486,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":487,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":488,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_zengraphqlmodule",{"_index":631,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["cluster_zengraphqlmodule_imports",{"_index":632,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["code",{"_index":206,"title":{},"body":{"classes/AuthResolver.html":{},"index.html":{}}}],["command",{"_index":773,"title":{},"body":{"index.html":{}}}],["completion",{"_index":811,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":958,"title":{},"body":{"index.html":{}}}],["component",{"_index":908,"title":{},"body":{"index.html":{}}}],["components",{"_index":895,"title":{},"body":{"index.html":{}}}],["compose",{"_index":762,"title":{},"body":{"index.html":{}}}],["config",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{}}}],["config.jwtoptions.publickey",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.jwtoptions.secret",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.production",{"_index":420,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.service",{"_index":287,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ZenGraphQLModule.html":{}}}],["config.service.ts",{"_index":331,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{}}}],["config.service.ts:11",{"_index":335,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["config.service.ts:14",{"_index":336,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["configmodule",{"_index":11,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":121,"title":{"injectables/ConfigService.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["configuration",{"_index":822,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":943,"title":{},"body":{"index.html":{}}}],["confirmation",{"_index":91,"title":{},"body":{"classes/AuthPasswordResetConfirmationInput.html":{},"coverage.html":{}}}],["confirmation?token",{"_index":479,"title":{},"body":{"injectables/MailService.html":{}}}],["congestion",{"_index":839,"title":{},"body":{"index.html":{}}}],["connections",{"_index":428,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console",{"_index":917,"title":{},"body":{"index.html":{}}}],["const",{"_index":178,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":119,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{}}}],["constructor(@optional",{"_index":509,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(auth",{"_index":120,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(config",{"_index":333,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(jwtservice",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mailer",{"_index":459,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(options",{"_index":496,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(private",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(reflector",{"_index":370,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["container",{"_index":893,"title":{},"body":{"index.html":{}}}],["containerized",{"_index":935,"title":{},"body":{"index.html":{}}}],["content",{"_index":875,"title":{},"body":{"index.html":{}}}],["context",{"_index":167,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/MailService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contextidfactory",{"_index":338,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["contributing",{"_index":748,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":952,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":741,"title":{},"body":{"index.html":{}}}],["control",{"_index":881,"title":{},"body":{"index.html":{}}}],["conveniences",{"_index":924,"title":{},"body":{"index.html":{}}}],["convert",{"_index":799,"title":{},"body":{"index.html":{}}}],["cookie",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["cookiedomain",{"_index":293,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["cookieoptions",{"_index":129,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["core",{"_index":797,"title":{},"body":{"index.html":{}}}],["correctpassword",{"_index":209,"title":{},"body":{"classes/AuthResolver.html":{}}}],["cors",{"_index":353,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["coverage",{"_index":639,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcontext",{"_index":656,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["creategqloptions",{"_index":332,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["createonerole",{"_index":519,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createonerole(@parent",{"_index":564,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createonerole(parent",{"_index":528,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createoneuser",{"_index":578,"title":{},"body":{"classes/UserResolver.html":{}}}],["createoneuser(@parent",{"_index":619,"title":{},"body":{"classes/UserResolver.html":{}}}],["createoneuser(parent",{"_index":587,"title":{},"body":{"classes/UserResolver.html":{}}}],["createparamdecorator((data",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creation",{"_index":857,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":354,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["css",{"_index":899,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":146,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{}}}],["ctx.connection",{"_index":357,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["ctx.connection.context",{"_index":359,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["ctx.getclass",{"_index":387,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["ctx.getcontext().req",{"_index":395,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["ctx.getcontext().req.user",{"_index":384,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["ctx.gethandler",{"_index":389,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["ctx.prisma.user.create",{"_index":230,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.prisma.user.findmany",{"_index":195,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.prisma.user.findone",{"_index":217,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.prisma.user.update",{"_index":243,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.req.cookies['rememberme",{"_index":219,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.res.clearcookie('jwt",{"_index":220,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.res.clearcookie('rememberme",{"_index":222,"title":{},"body":{"classes/AuthResolver.html":{}}}],["currently",{"_index":738,"title":{},"body":{"index.html":{}}}],["d",{"_index":764,"title":{},"body":{"index.html":{}}}],["data",{"_index":149,"title":{},"body":{"classes/AuthResolver.html":{}}}],["data.email.trim",{"_index":233,"title":{},"body":{"classes/AuthResolver.html":{}}}],["data.firstname",{"_index":231,"title":{},"body":{"classes/AuthResolver.html":{}}}],["data.lastname",{"_index":232,"title":{},"body":{"classes/AuthResolver.html":{}}}],["data.rememberme",{"_index":214,"title":{},"body":{"classes/AuthResolver.html":{}}}],["database",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["days",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debounce",{"_index":833,"title":{},"body":{"index.html":{}}}],["debug",{"_index":349,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["declarative",{"_index":883,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":48,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{}}}],["default",{"_index":130,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":448,"title":{},"body":{"modules/MailModule.html":{}}}],["defaultstrategy",{"_index":81,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":50,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{}}}],["deletemanyrole",{"_index":520,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deletemanyrole(@parent",{"_index":572,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deletemanyrole(parent",{"_index":531,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deletemanyuser",{"_index":579,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletemanyuser(@parent",{"_index":627,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletemanyuser(parent",{"_index":589,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteonerole",{"_index":521,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleteonerole(@parent",{"_index":568,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleteonerole(parent",{"_index":533,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleteoneuser",{"_index":580,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteoneuser(@parent",{"_index":623,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteoneuser(parent",{"_index":591,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletion",{"_index":793,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":876,"title":{},"body":{"index.html":{}}}],["depth=1",{"_index":759,"title":{},"body":{"index.html":{}}}],["designed",{"_index":859,"title":{},"body":{"index.html":{}}}],["dev",{"_index":913,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["developer",{"_index":923,"title":{},"body":{"index.html":{}}}],["development",{"_index":740,"title":{},"body":{"index.html":{}}}],["dir",{"_index":451,"title":{},"body":{"modules/MailModule.html":{}}}],["directives",{"_index":873,"title":{},"body":{"index.html":{}}}],["directly",{"_index":801,"title":{},"body":{"index.html":{}}}],["docker",{"_index":756,"title":{},"body":{"index.html":{}}}],["docs",{"_index":733,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":640,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domain",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["dotenv",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["ecosystem",{"_index":927,"title":{},"body":{"index.html":{}}}],["email",{"_index":43,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/MailService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["email_taken",{"_index":226,"title":{},"body":{"classes/AuthResolver.html":{}}}],["enable",{"_index":809,"title":{},"body":{"index.html":{}}}],["enable/disable",{"_index":824,"title":{},"body":{"index.html":{}}}],["enabling",{"_index":845,"title":{},"body":{"index.html":{}}}],["encodeuri(token",{"_index":480,"title":{},"body":{"injectables/MailService.html":{}}}],["enforced",{"_index":947,"title":{},"body":{"index.html":{}}}],["environment",{"_index":285,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.smtp.fromname",{"_index":449,"title":{},"body":{"modules/MailModule.html":{}}}],["environmentbase",{"_index":292,"title":{"classes/EnvironmentBase.html":{}},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentbase:10",{"_index":308,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:11",{"_index":306,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:12",{"_index":310,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:13",{"_index":301,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:14",{"_index":311,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:5",{"_index":309,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:6",{"_index":302,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:7",{"_index":304,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environments/environment",{"_index":286,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{}}}],["environments/environment.base",{"_index":312,"title":{},"body":{"injectables/ConfigService.html":{}}}],["equals",{"_index":198,"title":{},"body":{"classes/AuthResolver.html":{}}}],["es",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["exclude",{"_index":907,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":374,"title":{},"body":{"injectables/GqlGuard.html":{},"miscellaneous/variables.html":{}}}],["execwritefile",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["exp",{"_index":403,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["express",{"_index":172,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["expressport",{"_index":294,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["exreq",{"_index":415,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extend",{"_index":180,"title":{},"body":{"classes/AuthResolver.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":291,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["extension",{"_index":770,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":918,"title":{},"body":{"index.html":{}}}],["false",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":804,"title":{},"body":{"index.html":{}}}],["features",{"_index":795,"title":{},"body":{"index.html":{}}}],["file",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["files",{"_index":847,"title":{},"body":{"index.html":{}}}],["filter(x",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtering",{"_index":781,"title":{},"body":{"index.html":{}}}],["findmanyrole",{"_index":522,"title":{},"body":{"classes/RoleResolver.html":{}}}],["findmanyrole(@parent",{"_index":560,"title":{},"body":{"classes/RoleResolver.html":{}}}],["findmanyrole(parent",{"_index":535,"title":{},"body":{"classes/RoleResolver.html":{}}}],["findmanyrolecount",{"_index":523,"title":{},"body":{"classes/RoleResolver.html":{}}}],["findmanyrolecount(@parent",{"_index":562,"title":{},"body":{"classes/RoleResolver.html":{}}}],["findmanyrolecount(parent",{"_index":537,"title":{},"body":{"classes/RoleResolver.html":{}}}],["findmanyuser",{"_index":581,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyuser(@parent",{"_index":615,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyuser(parent",{"_index":593,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount",{"_index":582,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount(@parent",{"_index":617,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount(parent",{"_index":595,"title":{},"body":{"classes/UserResolver.html":{}}}],["findonerole",{"_index":524,"title":{},"body":{"classes/RoleResolver.html":{}}}],["findonerole(@parent",{"_index":557,"title":{},"body":{"classes/RoleResolver.html":{}}}],["findonerole(parent",{"_index":539,"title":{},"body":{"classes/RoleResolver.html":{}}}],["findoneuser",{"_index":583,"title":{},"body":{"classes/UserResolver.html":{}}}],["findoneuser(@parent",{"_index":613,"title":{},"body":{"classes/UserResolver.html":{}}}],["findoneuser(parent",{"_index":597,"title":{},"body":{"classes/UserResolver.html":{}}}],["fine",{"_index":884,"title":{},"body":{"index.html":{}}}],["first",{"_index":868,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":98,"title":{},"body":{"classes/AuthRegisterInput.html":{},"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["fns",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":844,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":948,"title":{},"body":{"index.html":{}}}],["found",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":789,"title":{},"body":{"index.html":{}}}],["fromemail",{"_index":328,"title":{},"body":{"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["fromname",{"_index":327,"title":{},"body":{"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":727,"title":{},"body":{"index.html":{}}}],["function",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":715,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":778,"title":{},"body":{"index.html":{}}}],["generate",{"_index":959,"title":{},"body":{"index.html":{}}}],["generation",{"_index":808,"title":{},"body":{"index.html":{}}}],["getrequest",{"_index":369,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["getrequest(context",{"_index":376,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["getting",{"_index":723,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":118,"title":{},"body":{"classes/AuthResolver.html":{}}}],["getuser(email",{"_index":162,"title":{},"body":{"classes/AuthResolver.html":{}}}],["git",{"_index":745,"title":{},"body":{"index.html":{}}}],["github",{"_index":734,"title":{},"body":{"index.html":{}}}],["give",{"_index":841,"title":{},"body":{"index.html":{}}}],["global",{"_index":284,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ZenGraphQLModule.html":{}}}],["gql",{"_index":78,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["gqlconfigservice",{"_index":329,"title":{"injectables/GqlConfigService.html":{}},"body":{"injectables/GqlConfigService.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["gqlexecutioncontext",{"_index":378,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["gqlexecutioncontext.create(context",{"_index":383,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req.user",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gqlguard",{"_index":72,"title":{"injectables/GqlGuard.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/GqlGuard.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"overview.html":{}}}],["gqlmoduleoptions",{"_index":337,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["gqloptionsfactory",{"_index":340,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["gqluser",{"_index":174,"title":{},"body":{"classes/AuthResolver.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grained",{"_index":885,"title":{},"body":{"index.html":{}}}],["graph",{"_index":964,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["graphql.module.ts",{"_index":634,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["graphql/models/user",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["graphql_schema",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":635,"title":{},"body":{"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["graphqlmodule.forrootasync",{"_index":637,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["graphqlupload",{"_index":848,"title":{},"body":{"index.html":{}}}],["greatly",{"_index":911,"title":{},"body":{"index.html":{}}}],["grid",{"_index":905,"title":{},"body":{"index.html":{}}}],["guaranteeing",{"_index":951,"title":{},"body":{"index.html":{}}}],["guards",{"_index":872,"title":{},"body":{"index.html":{}}}],["gui",{"_index":919,"title":{},"body":{"index.html":{}}}],["handlebarsadapter",{"_index":439,"title":{},"body":{"modules/MailModule.html":{}}}],["handlerroles",{"_index":388,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["hashedpassword",{"_index":227,"title":{},"body":{"classes/AuthResolver.html":{}}}],["helmet",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["helps",{"_index":836,"title":{},"body":{"index.html":{}}}],["horizontal",{"_index":892,"title":{},"body":{"index.html":{}}}],["host",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hs256",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["httpbatchlink",{"_index":827,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":164,"title":{},"body":{"classes/AuthResolver.html":{}}}],["https://github.com/zensoftware/zen.git",{"_index":758,"title":{},"body":{"index.html":{}}}],["https://zensoftware.ca/#/password",{"_index":478,"title":{},"body":{"injectables/MailService.html":{}}}],["httpuser",{"_index":650,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iat",{"_index":404,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["icontext",{"_index":141,"title":{"interfaces/IContext.html":{}},"body":{"classes/AuthResolver.html":{},"interfaces/IContext.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":188,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/RequestUser.html":{},"miscellaneous/variables.html":{}}}],["ide",{"_index":930,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":936,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":796,"title":{},"body":{"index.html":{}}}],["implements",{"_index":345,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["incorrect_password",{"_index":212,"title":{},"body":{"classes/AuthResolver.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["inherited",{"_index":300,"title":{},"body":{"injectables/ConfigService.html":{}}}],["injectable",{"_index":247,"title":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["injectables",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"overview.html":{}}}],["input",{"_index":191,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["input.ts",{"_index":39,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"coverage.html":{}}}],["input.ts:10",{"_index":54,"title":{},"body":{"classes/AuthLoginInput.html":{}}}],["input.ts:11",{"_index":100,"title":{},"body":{"classes/AuthRegisterInput.html":{}}}],["input.ts:13",{"_index":57,"title":{},"body":{"classes/AuthLoginInput.html":{}}}],["input.ts:14",{"_index":102,"title":{},"body":{"classes/AuthRegisterInput.html":{}}}],["input.ts:6",{"_index":89,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthResendVerificationInput.html":{}}}],["input.ts:7",{"_index":51,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthRegisterInput.html":{}}}],["input.ts:9",{"_index":87,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{}}}],["insensitive",{"_index":197,"title":{},"body":{"classes/AuthResolver.html":{},"index.html":{}}}],["installsubscriptionhandlers",{"_index":348,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["instructions",{"_index":752,"title":{},"body":{"index.html":{}}}],["int",{"_index":189,"title":{},"body":{"classes/AuthResolver.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["integration",{"_index":856,"title":{},"body":{"index.html":{}}}],["interested",{"_index":747,"title":{},"body":{"index.html":{}}}],["interface",{"_index":278,"title":{"interfaces/AuthSession.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"interfaces/PasswordResetContext.html":{},"interfaces/RequestUser.html":{}},"body":{"interfaces/AuthSession.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"interfaces/PasswordResetContext.html":{},"interfaces/RequestUser.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":60,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{},"interfaces/AuthSession.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"interfaces/PasswordResetContext.html":{},"interfaces/RequestUser.html":{},"index.html":{},"overview.html":{}}}],["interval",{"_index":834,"title":{},"body":{"index.html":{}}}],["introspection",{"_index":351,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["isboolean",{"_index":56,"title":{},"body":{"classes/AuthLoginInput.html":{}}}],["isemail",{"_index":61,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{}}}],["isemail()@maxlength(254",{"_index":49,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{}}}],["isendmailoptions",{"_index":469,"title":{},"body":{"injectables/MailService.html":{}}}],["isnotempty",{"_index":88,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{}}}],["iss",{"_index":405,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["issue",{"_index":746,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":889,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":79,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":13,"title":{"modules/JwtModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["jwtmoduleoptions",{"_index":305,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["jwtoptions",{"_index":295,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":263,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":122,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["jwtstrategy",{"_index":73,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keeping",{"_index":891,"title":{},"body":{"index.html":{}}}],["language",{"_index":928,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":99,"title":{},"body":{"classes/AuthRegisterInput.html":{},"classes/AuthResolver.html":{}}}],["lax",{"_index":138,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["legibility",{"_index":957,"title":{},"body":{"index.html":{}}}],["length",{"_index":62,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{}}}],["length(1",{"_index":52,"title":{},"body":{"classes/AuthLoginInput.html":{}}}],["length(apiconstants.password_min_length",{"_index":86,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{}}}],["literal",{"_index":303,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["localhost",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost/nowhere",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lodash",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":38,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/EnvironmentBase.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lot",{"_index":922,"title":{},"body":{"index.html":{}}}],["mail",{"_index":123,"title":{},"body":{"classes/AuthResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["mail.service",{"_index":443,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/templates",{"_index":453,"title":{},"body":{"modules/MailModule.html":{}}}],["mailer",{"_index":462,"title":{},"body":{"injectables/MailService.html":{}}}],["mailermodule",{"_index":440,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":444,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":460,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":432,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":464,"title":{},"body":{"injectables/MailService.html":{},"miscellaneous/typealiases.html":{}}}],["mailservice",{"_index":124,"title":{"injectables/MailService.html":{}},"body":{"classes/AuthResolver.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["mailtemplate",{"_index":472,"title":{},"body":{"injectables/MailService.html":{},"miscellaneous/typealiases.html":{}}}],["makeexecutableschema",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management",{"_index":915,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":902,"title":{},"body":{"index.html":{}}}],["maxage",{"_index":132,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"miscellaneous/variables.html":{}}}],["maxage.tostring",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxfiles",{"_index":365,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["maxfilesize",{"_index":361,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["maxlength",{"_index":63,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{}}}],["maxlength(254",{"_index":65,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{}}}],["mb",{"_index":364,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["mergetypedefs([prisma_type_defs",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":110,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{}}}],["miscellaneous",{"_index":714,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":910,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":867,"title":{},"body":{"index.html":{}}}],["mode",{"_index":196,"title":{},"body":{"classes/AuthResolver.html":{}}}],["models",{"_index":177,"title":{},"body":{"classes/AuthResolver.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{}}}],["modern",{"_index":726,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["moduleref",{"_index":334,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":442,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["monorepos",{"_index":920,"title":{},"body":{"index.html":{}}}],["multi",{"_index":842,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":156,"title":{},"body":{"classes/AuthResolver.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["mutation()@useguards(gqlguard",{"_index":153,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutations",{"_index":887,"title":{},"body":{"index.html":{}}}],["n+1",{"_index":786,"title":{},"body":{"index.html":{}}}],["name",{"_index":127,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":441,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"index.html":{}}}],["nest_resolvers",{"_index":636,"title":{},"body":{"modules/ZenGraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nest_type_defs",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":339,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":169,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":322,"title":{},"body":{"classes/EnvironmentBase.html":{},"modules/JwtModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":76,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["nestjwtmodule",{"_index":398,"title":{},"body":{"modules/JwtModule.html":{}}}],["nestjwtmodule.register(environment.jwtoptions",{"_index":399,"title":{},"body":{"modules/JwtModule.html":{}}}],["network",{"_index":838,"title":{},"body":{"index.html":{}}}],["new",{"_index":205,"title":{},"body":{"classes/AuthResolver.html":{},"modules/MailModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":84,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":754,"title":{},"body":{"index.html":{}}}],["node:14",{"_index":937,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["npm",{"_index":761,"title":{},"body":{"index.html":{}}}],["null",{"_index":551,"title":{},"body":{"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"interfaces/JwtPayload.html":{}}}],["nx",{"_index":914,"title":{},"body":{"index.html":{}}}],["occur",{"_index":831,"title":{},"body":{"index.html":{}}}],["official",{"_index":803,"title":{},"body":{"index.html":{}}}],["oldpassword",{"_index":85,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["ondelete",{"_index":493,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ondelete(args",{"_index":500,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ondeleteargs",{"_index":501,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduledestroy",{"_index":494,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":495,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":744,"title":{},"body":{"index.html":{}}}],["optional",{"_index":97,"title":{},"body":{"classes/AuthRegisterInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":455,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{}}}],["origin",{"_index":355,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["out",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["outpath",{"_index":722,"title":{},"body":{"miscellaneous/functions.html":{}}}],["over",{"_index":851,"title":{},"body":{"index.html":{}}}],["overview",{"_index":965,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":676,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":864,"title":{},"body":{"index.html":{}}}],["palette",{"_index":774,"title":{},"body":{"index.html":{}}}],["paljs/plugins",{"_index":507,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["parameters",{"_index":126,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":530,"title":{},"body":{"classes/RoleResolver.html":{},"classes/UserResolver.html":{}}}],["parser",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":843,"title":{},"body":{"index.html":{}}}],["passport",{"_index":417,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":75,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":80,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":414,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":418,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":44,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResolver.html":{},"classes/EnvironmentBase.html":{},"injectables/MailService.html":{},"classes/UserResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["passwordresetcontext",{"_index":470,"title":{"interfaces/PasswordResetContext.html":{}},"body":{"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"coverage.html":{}}}],["path",{"_index":438,"title":{},"body":{"modules/MailModule.html":{}}}],["path.join(__dirname",{"_index":452,"title":{},"body":{"modules/MailModule.html":{}}}],["payload",{"_index":412,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":431,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.roles",{"_index":429,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.roles.split",{"_index":430,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":401,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["performance",{"_index":854,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":877,"title":{},"body":{"index.html":{}}}],["pg",{"_index":324,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["playground",{"_index":325,"title":{},"body":{"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["poolconfig",{"_index":323,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["port",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portal",{"_index":730,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":296,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["postgresqlconfig",{"_index":307,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["predictable",{"_index":954,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":949,"title":{},"body":{"index.html":{}}}],["print",{"_index":341,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["print(all_type_defs",{"_index":347,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["prisma",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GqlConfigService.html":{},"interfaces/IContext.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":490,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":508,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/role/resolvers",{"_index":549,"title":{},"body":{"classes/RoleResolver.html":{}}}],["prisma/user/resolvers",{"_index":607,"title":{},"body":{"classes/UserResolver.html":{}}}],["prisma:save",{"_index":766,"title":{},"body":{"index.html":{}}}],["prisma_schema",{"_index":666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma_type_defs",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":492,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientoptions",{"_index":497,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete",{"_index":506,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prismadelete(this",{"_index":511,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete.ondelete(args",{"_index":512,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":14,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaselect",{"_index":784,"title":{},"body":{"index.html":{}}}],["prismaselectargs",{"_index":547,"title":{},"body":{"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["prismaselectargs(info",{"_index":559,"title":{},"body":{"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["prismaservice",{"_index":342,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/GqlConfigService.html":{},"interfaces/IContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":108,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/MailService.html":{}}}],["privatekey",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["problem",{"_index":787,"title":{},"body":{"index.html":{}}}],["process.env.jwt_private_key",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_public_key",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.pgpassword",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.pguser",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.smtp_from_email",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.smtp_login",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.smtp_password",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.smtp_server",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":297,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":750,"title":{},"body":{"index.html":{}}}],["promisify(fs.writefile",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":41,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"interfaces/AuthSession.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"interfaces/PasswordResetContext.html":{},"interfaces/RequestUser.html":{}}}],["provide",{"_index":288,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["publickey",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queries",{"_index":788,"title":{},"body":{"index.html":{}}}],["query",{"_index":150,"title":{},"body":{"classes/AuthResolver.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["query()@useguards(gqlguard",{"_index":144,"title":{},"body":{"classes/AuthResolver.html":{}}}],["querying",{"_index":782,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":42,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{}}}],["really",{"_index":835,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":371,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["register",{"_index":96,"title":{},"body":{"classes/AuthRegisterInput.html":{},"coverage.html":{}}}],["releases",{"_index":934,"title":{},"body":{"index.html":{}}}],["reload",{"_index":776,"title":{},"body":{"index.html":{}}}],["rememberme",{"_index":45,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"miscellaneous/variables.html":{}}}],["remembermeexpiresin",{"_index":298,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["replicas",{"_index":894,"title":{},"body":{"index.html":{}}}],["repo",{"_index":735,"title":{},"body":{"index.html":{}}}],["req",{"_index":358,"title":{},"body":{"injectables/GqlConfigService.html":{},"interfaces/IContext.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.cookies['jwt",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.token",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.user",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":94,"title":{},"body":{"classes/AuthPasswordResetRequestInput.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":830,"title":{},"body":{"index.html":{}}}],["requestuser",{"_index":143,"title":{"interfaces/RequestUser.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/RequestUser.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requirements",{"_index":753,"title":{},"body":{"index.html":{}}}],["requser",{"_index":142,"title":{},"body":{"classes/AuthResolver.html":{}}}],["requser.id",{"_index":218,"title":{},"body":{"classes/AuthResolver.html":{}}}],["res",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IContext.html":{}}}],["res.cookie('jwt",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.cookie('rememberme",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["resend",{"_index":104,"title":{},"body":{"classes/AuthResendVerificationInput.html":{},"coverage.html":{}}}],["reset",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["reset.context.ts",{"_index":485,"title":{},"body":{"interfaces/PasswordResetContext.html":{},"coverage.html":{}}}],["reseturl",{"_index":477,"title":{},"body":{"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{}}}],["resolvefield",{"_index":599,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolver",{"_index":168,"title":{},"body":{"classes/AuthResolver.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{}}}],["resolver('auth",{"_index":192,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver('role",{"_index":555,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resolver('user",{"_index":612,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers",{"_index":344,"title":{},"body":{"injectables/GqlConfigService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["resolvers.mutation.createonerole(parent",{"_index":565,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resolvers.mutation.createoneuser(parent",{"_index":620,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.deletemanyrole(parent",{"_index":573,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resolvers.mutation.deletemanyuser(parent",{"_index":628,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.deleteonerole(parent",{"_index":569,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resolvers.mutation.deleteoneuser(parent",{"_index":624,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.updatemanyrole(parent",{"_index":575,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resolvers.mutation.updatemanyuser(parent",{"_index":630,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.updateonerole(parent",{"_index":567,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resolvers.mutation.updateoneuser(parent",{"_index":622,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.upsertonerole(parent",{"_index":571,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resolvers.mutation.upsertoneuser(parent",{"_index":626,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findmanyrole(parent",{"_index":561,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resolvers.query.findmanyrolecount(parent",{"_index":563,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resolvers.query.findmanyuser(parent",{"_index":616,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findmanyusercount(parent",{"_index":618,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findonerole(parent",{"_index":558,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resolvers.query.findoneuser(parent",{"_index":614,"title":{},"body":{"classes/UserResolver.html":{}}}],["response",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["responsive",{"_index":866,"title":{},"body":{"index.html":{}}}],["result",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":199,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":147,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":175,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlGuard.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"index.html":{}}}],["role.registered",{"_index":235,"title":{},"body":{"classes/AuthResolver.html":{}}}],["roleresolver",{"_index":517,"title":{"classes/RoleResolver.html":{}},"body":{"classes/RoleResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":190,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/RequestUser.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":556,"title":{},"body":{"classes/RoleResolver.html":{},"classes/UserResolver.html":{}}}],["roletypedef",{"_index":550,"title":{},"body":{"classes/RoleResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":871,"title":{},"body":{"index.html":{}}}],["rs256",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":765,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["safe",{"_index":817,"title":{},"body":{"index.html":{}}}],["samesite",{"_index":136,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["samplerolefield",{"_index":554,"title":{},"body":{"classes/RoleResolver.html":{}}}],["samplerolemutation(args",{"_index":553,"title":{},"body":{"classes/RoleResolver.html":{}}}],["samplerolequery",{"_index":552,"title":{},"body":{"classes/RoleResolver.html":{}}}],["sampleuserfield",{"_index":611,"title":{},"body":{"classes/UserResolver.html":{}}}],["sampleusermutation(args",{"_index":610,"title":{},"body":{"classes/UserResolver.html":{}}}],["sampleuserquery",{"_index":609,"title":{},"body":{"classes/UserResolver.html":{}}}],["sass",{"_index":897,"title":{},"body":{"index.html":{}}}],["scaling",{"_index":855,"title":{},"body":{"index.html":{}}}],["schema",{"_index":721,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["schema.ts",{"_index":668,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["schematics",{"_index":926,"title":{},"body":{"index.html":{}}}],["scope",{"_index":505,"title":{},"body":{"injectables/PrismaService.html":{}}}],["scripts",{"_index":932,"title":{},"body":{"index.html":{}}}],["sdl",{"_index":807,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":419,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":134,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["security",{"_index":886,"title":{},"body":{"index.html":{}}}],["select",{"_index":548,"title":{},"body":{"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["send",{"_index":457,"title":{},"body":{"injectables/MailService.html":{}}}],["send(options",{"_index":463,"title":{},"body":{"injectables/MailService.html":{}}}],["sendpasswordreset",{"_index":458,"title":{},"body":{"injectables/MailService.html":{}}}],["sendpasswordreset(to",{"_index":466,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":326,"title":{},"body":{"classes/EnvironmentBase.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":929,"title":{},"body":{"index.html":{}}}],["services",{"_index":815,"title":{},"body":{"index.html":{}}}],["session",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["session.ts",{"_index":280,"title":{},"body":{"interfaces/AuthSession.html":{},"coverage.html":{}}}],["set",{"_index":234,"title":{},"body":{"classes/AuthResolver.html":{},"index.html":{}}}],["set_null",{"_index":792,"title":{},"body":{"index.html":{}}}],["setjwtcookie",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["setjwtcookie(res",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmetadata('roles",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":751,"title":{},"body":{"index.html":{}}}],["several",{"_index":829,"title":{},"body":{"index.html":{}}}],["short",{"_index":832,"title":{},"body":{"index.html":{}}}],["show/hide",{"_index":874,"title":{},"body":{"index.html":{}}}],["side",{"_index":879,"title":{},"body":{"index.html":{}}}],["sign",{"_index":870,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":816,"title":{},"body":{"index.html":{}}}],["simplify",{"_index":821,"title":{},"body":{"index.html":{}}}],["single",{"_index":863,"title":{},"body":{"index.html":{}}}],["smtp",{"_index":299,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["smtps://${environment.smtp.login}:${environment.smtp.password}@${environment.smtp.server",{"_index":447,"title":{},"body":{"modules/MailModule.html":{}}}],["solve",{"_index":785,"title":{},"body":{"index.html":{}}}],["sort",{"_index":950,"title":{},"body":{"index.html":{}}}],["source",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["spa",{"_index":862,"title":{},"body":{"index.html":{}}}],["specifically",{"_index":860,"title":{},"body":{"index.html":{}}}],["stack",{"_index":728,"title":{},"body":{"index.html":{}}}],["standard",{"_index":869,"title":{},"body":{"index.html":{}}}],["standardized",{"_index":953,"title":{},"body":{"index.html":{}}}],["start:api",{"_index":767,"title":{},"body":{"index.html":{}}}],["started",{"_index":724,"title":{"index.html":{}},"body":{"index.html":{}}}],["startreload",{"_index":769,"title":{},"body":{"index.html":{}}}],["stateless",{"_index":888,"title":{},"body":{"index.html":{}}}],["statements",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["strategy",{"_index":416,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strict",{"_index":137,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"modules/MailModule.html":{}}}],["string",{"_index":47,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"interfaces/RequestUser.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":955,"title":{},"body":{"index.html":{}}}],["styles",{"_index":909,"title":{},"body":{"index.html":{}}}],["styling",{"_index":896,"title":{},"body":{"index.html":{}}}],["sub",{"_index":406,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["subject",{"_index":482,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriptions",{"_index":850,"title":{},"body":{"index.html":{}}}],["super",{"_index":381,"title":{},"body":{"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{}}}],["super(options",{"_index":510,"title":{},"body":{"injectables/PrismaService.html":{}}}],["super.canactivate(context",{"_index":382,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["support",{"_index":961,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":802,"title":{},"body":{"index.html":{}}}],["svc",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":962,"title":{},"body":{"modules.html":{}}}],["system",{"_index":858,"title":{},"body":{"index.html":{}}}],["table",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":173,"title":{},"body":{"classes/AuthResolver.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{}}}],["team",{"_index":798,"title":{},"body":{"index.html":{}}}],["temp",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":450,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["templates",{"_index":471,"title":{},"body":{"injectables/MailService.html":{}}}],["text",{"_index":783,"title":{},"body":{"index.html":{}}}],["theme",{"_index":903,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":513,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":514,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.auth.setjwtcookie(ctx.res",{"_index":213,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.clear_cookie_options",{"_index":221,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.config.cookiedomain",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config.graphql.playground",{"_index":350,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["this.config.jwtoptions.signoptions.expiresin",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config.production",{"_index":135,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{}}}],["this.config.remembermeexpiresin",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config.smtp.fromname",{"_index":483,"title":{},"body":{"injectables/MailService.html":{}}}],["this.getuser(data.email",{"_index":203,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.getuser(tokenpayload.email",{"_index":241,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.jwtservice.sign",{"_index":475,"title":{},"body":{"injectables/MailService.html":{}}}],["this.jwtservice.sign(jwtpayload",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(data.token",{"_index":238,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.mail.sendpasswordreset(user.email",{"_index":223,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.mailer.sendmail(options",{"_index":474,"title":{},"body":{"injectables/MailService.html":{}}}],["this.moduleref.get(prismaservice",{"_index":356,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["this.reflector.get('roles",{"_index":386,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["this.send",{"_index":481,"title":{},"body":{"injectables/MailService.html":{}}}],["through",{"_index":906,"title":{},"body":{"index.html":{}}}],["throw",{"_index":204,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":92,"title":{},"body":{"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["tokenpayload",{"_index":236,"title":{},"body":{"classes/AuthResolver.html":{}}}],["tokens",{"_index":890,"title":{},"body":{"index.html":{}}}],["tool",{"_index":813,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":931,"title":{},"body":{"index.html":{}}}],["tools",{"_index":698,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["tracing",{"_index":352,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["transformer",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["transpiler",{"_index":900,"title":{},"body":{"index.html":{}}}],["transport",{"_index":446,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":237,"title":{},"body":{"classes/AuthResolver.html":{}}}],["tsconfig.app.json",{"_index":942,"title":{},"body":{"index.html":{}}}],["type",{"_index":46,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":968,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedefs",{"_index":346,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorized",{"_index":240,"title":{},"body":{"classes/AuthResolver.html":{}}}],["unauthorizedexception",{"_index":413,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('no",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":739,"title":{},"body":{"index.html":{}}}],["up",{"_index":763,"title":{},"body":{"index.html":{}}}],["updatemanyrole",{"_index":525,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updatemanyrole(@parent",{"_index":574,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updatemanyrole(parent",{"_index":541,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updatemanyuser",{"_index":584,"title":{},"body":{"classes/UserResolver.html":{}}}],["updatemanyuser(@parent",{"_index":629,"title":{},"body":{"classes/UserResolver.html":{}}}],["updatemanyuser(parent",{"_index":601,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateonerole",{"_index":526,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updateonerole(@parent",{"_index":566,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updateonerole(parent",{"_index":543,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updateoneuser",{"_index":585,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateoneuser(@parent",{"_index":621,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateoneuser(parent",{"_index":603,"title":{},"body":{"classes/UserResolver.html":{}}}],["uploading",{"_index":846,"title":{},"body":{"index.html":{}}}],["uploadlink",{"_index":840,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":360,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["upsertonerole",{"_index":527,"title":{},"body":{"classes/RoleResolver.html":{}}}],["upsertonerole(@parent",{"_index":570,"title":{},"body":{"classes/RoleResolver.html":{}}}],["upsertonerole(parent",{"_index":545,"title":{},"body":{"classes/RoleResolver.html":{}}}],["upsertoneuser",{"_index":586,"title":{},"body":{"classes/UserResolver.html":{}}}],["upsertoneuser(@parent",{"_index":625,"title":{},"body":{"classes/UserResolver.html":{}}}],["upsertoneuser(parent",{"_index":605,"title":{},"body":{"classes/UserResolver.html":{}}}],["use",{"_index":916,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":638,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["used",{"_index":939,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":445,"title":{},"body":{"modules/MailModule.html":{}}}],["useguards",{"_index":165,"title":{},"body":{"classes/AuthResolver.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{}}}],["useguards(gqlguard",{"_index":215,"title":{},"body":{"classes/AuthResolver.html":{},"classes/RoleResolver.html":{},"classes/UserResolver.html":{}}}],["user",{"_index":187,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.decorator.ts",{"_index":645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.id",{"_index":244,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["user.password",{"_index":211,"title":{},"body":{"classes/AuthResolver.html":{}}}],["user.roles",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlGuard.html":{}}}],["user.roles.some((userrole",{"_index":393,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["user.roles.tostring",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.ts",{"_index":516,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["user_not_found",{"_index":207,"title":{},"body":{"classes/AuthResolver.html":{}}}],["userfound",{"_index":225,"title":{},"body":{"classes/AuthResolver.html":{}}}],["userresolver",{"_index":576,"title":{"classes/UserResolver.html":{}},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":193,"title":{},"body":{"classes/AuthResolver.html":{}}}],["users[0",{"_index":200,"title":{},"body":{"classes/AuthResolver.html":{}}}],["usertypedef",{"_index":608,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":289,"title":{},"body":{"modules/ConfigModule.html":{}}}],["using",{"_index":812,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":904,"title":{},"body":{"index.html":{}}}],["v14",{"_index":755,"title":{},"body":{"index.html":{}}}],["validate",{"_index":408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":410,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":64,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"dependencies.html":{}}}],["value",{"_index":131,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":971,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":925,"title":{},"body":{"index.html":{}}}],["varying",{"_index":825,"title":{},"body":{"index.html":{}}}],["verification",{"_index":105,"title":{},"body":{"classes/AuthResendVerificationInput.html":{},"coverage.html":{}}}],["verify",{"_index":473,"title":{},"body":{"injectables/MailService.html":{},"miscellaneous/typealiases.html":{}}}],["versioned",{"_index":933,"title":{},"body":{"index.html":{}}}],["via",{"_index":771,"title":{},"body":{"index.html":{}}}],["void",{"_index":468,"title":{},"body":{"injectables/MailService.html":{}}}],["vs",{"_index":814,"title":{},"body":{"index.html":{}}}],["vscode",{"_index":772,"title":{},"body":{"index.html":{}}}],["web",{"_index":729,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["websocketlink",{"_index":849,"title":{},"body":{"index.html":{}}}],["websockets",{"_index":852,"title":{},"body":{"index.html":{}}}],["welcome!&#x1f331",{"_index":742,"title":{},"body":{"index.html":{}}}],["within",{"_index":819,"title":{},"body":{"index.html":{}}}],["work",{"_index":861,"title":{},"body":{"index.html":{}}}],["writegraphqlschema",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["writegraphqlschema(outpath",{"_index":720,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wrong_password",{"_index":246,"title":{},"body":{"classes/AuthResolver.html":{}}}],["x",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f367",{"_index":743,"title":{},"body":{"index.html":{}}}],["x1f370",{"_index":749,"title":{},"body":{"index.html":{}}}],["x1f380",{"_index":820,"title":{},"body":{"index.html":{}}}],["x1f939",{"_index":737,"title":{},"body":{"index.html":{}}}],["yes",{"_index":499,"title":{},"body":{"injectables/PrismaService.html":{}}}],["zen",{"_index":725,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["zen/api",{"_index":59,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{}}}],["zenadmin",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zengraphqlmodule",{"_index":15,"title":{"modules/ZenGraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["zensoftware.ca",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zensoftware/zen",{"_index":736,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAppModule -->\n\nJwtModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nAppModule -->\n\nZenGraphQLModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            JwtModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ZenGraphQLModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigModule } from './config';\nimport { ZenGraphQLModule } from './graphql';\nimport { JwtModule } from './jwt';\nimport { PrismaModule } from './prisma';\n\n@Module({\n  imports: [ConfigModule, JwtModule, ZenGraphQLModule, PrismaModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthLoginInput.html":{"url":"classes/AuthLoginInput.html","title":"class - AuthLoginInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthLoginInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/auth-login-input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                rememberMe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@MaxLength(254)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-login-input.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Length(1, ApiConstants.PASSWORD_MAX_LENGTH)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-login-input.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            rememberMe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-login-input.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiConstants } from '@zen/api-interfaces';\nimport { IsBoolean, IsEmail, Length, MaxLength } from 'class-validator';\n\nexport class AuthLoginInput {\n  @IsEmail()\n  @MaxLength(254)\n  readonly email: string;\n\n  @Length(1, ApiConstants.PASSWORD_MAX_LENGTH)\n  readonly password: string;\n\n  @IsBoolean()\n  readonly rememberMe: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtModule\n\nJwtModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtModule->AuthModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nGqlGuard \n\nGqlGuard \n\nGqlGuard  -->\n\nAuthModule->GqlGuard \n\n\n\n\n\nJwtModule \n\nJwtModule \n\nJwtModule  -->\n\nAuthModule->JwtModule \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGqlGuard\n\nGqlGuard\n\nAuthModule -->\n\nGqlGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GqlGuard\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JwtModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            GqlGuard\n                        \n                        \n                            JwtModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { JwtModule } from '../jwt';\nimport { PrismaModule } from '../prisma';\nimport { AuthService } from './auth.service';\nimport { GqlGuard } from './gql';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [JwtModule, PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  providers: [AuthService, JwtStrategy, GqlGuard],\n  exports: [JwtModule, PassportModule, GqlGuard, AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPasswordChangeInput.html":{"url":"classes/AuthPasswordChangeInput.html","title":"class - AuthPasswordChangeInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPasswordChangeInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/auth-password-change-input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                newPassword\n                            \n                            \n                                    Readonly\n                                oldPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Length(ApiConstants.PASSWORD_MIN_LENGTH, ApiConstants.PASSWORD_MAX_LENGTH)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-password-change-input.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-password-change-input.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiConstants } from '@zen/api-interfaces';\nimport { IsNotEmpty, Length } from 'class-validator';\n\nexport class AuthPasswordChangeInput {\n  @IsNotEmpty()\n  readonly oldPassword: string;\n\n  @Length(ApiConstants.PASSWORD_MIN_LENGTH, ApiConstants.PASSWORD_MAX_LENGTH)\n  readonly newPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPasswordResetConfirmationInput.html":{"url":"classes/AuthPasswordResetConfirmationInput.html","title":"class - AuthPasswordResetConfirmationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPasswordResetConfirmationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/auth-password-reset-confirmation-input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                newPassword\n                            \n                            \n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Length(ApiConstants.PASSWORD_MIN_LENGTH, ApiConstants.PASSWORD_MAX_LENGTH)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-password-reset-confirmation-input.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-password-reset-confirmation-input.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiConstants } from '@zen/api-interfaces';\nimport { IsNotEmpty, Length } from 'class-validator';\n\nexport class AuthPasswordResetConfirmationInput {\n  @Length(ApiConstants.PASSWORD_MIN_LENGTH, ApiConstants.PASSWORD_MAX_LENGTH)\n  readonly newPassword: string;\n\n  @IsNotEmpty()\n  readonly token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPasswordResetRequestInput.html":{"url":"classes/AuthPasswordResetRequestInput.html","title":"class - AuthPasswordResetRequestInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPasswordResetRequestInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/auth-password-reset-request-input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@MaxLength(254)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-password-reset-request-input.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, MaxLength } from 'class-validator';\n\nexport class AuthPasswordResetRequestInput {\n  @IsEmail()\n  @MaxLength(254)\n  readonly email: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthRegisterInput.html":{"url":"classes/AuthRegisterInput.html","title":"class - AuthRegisterInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthRegisterInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/auth-register-input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                    Optional\n                                firstName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lastName\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@MaxLength(254)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-register-input.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-register-input.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-register-input.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Length(ApiConstants.PASSWORD_MIN_LENGTH, 100)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-register-input.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiConstants } from '@zen/api-interfaces';\nimport { IsEmail, IsNotEmpty, Length, MaxLength } from 'class-validator';\n\nexport class AuthRegisterInput {\n  @IsEmail()\n  @MaxLength(254)\n  readonly email: string;\n\n  readonly firstName?: string;\n\n  readonly lastName?: string;\n\n  @Length(ApiConstants.PASSWORD_MIN_LENGTH, 100)\n  readonly password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResendVerificationInput.html":{"url":"classes/AuthResendVerificationInput.html","title":"class - AuthResendVerificationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResendVerificationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/auth-resend-verification-input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@MaxLength(254)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-resend-verification-input.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, MaxLength } from 'class-validator';\n\nexport class AuthResendVerificationInput {\n  @IsEmail()\n  @MaxLength(254)\n  readonly email: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Auth.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                CLEAR_COOKIE_OPTIONS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authExchangeToken\n                            \n                            \n                                    Async\n                                authLogin\n                            \n                            \n                                    Async\n                                authPasswordChange\n                            \n                            \n                                    Async\n                                authPasswordResetConfirmation\n                            \n                            \n                                    Async\n                                authPasswordResetRequest\n                            \n                            \n                                    Async\n                                authRegister\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, config: ConfigService, jwtService: JwtService, mail: MailService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/graphql/resolvers/Auth.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            CLEAR_COOKIE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CookieOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    maxAge: 0,\n    secure: this.config.production,\n    sameSite: this.config.production ? 'strict' : 'lax',\n  }\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:70\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authExchangeToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authExchangeToken(ctx: IContext, reqUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()@UseGuards(GqlGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authLogin(ctx: IContext, data: AuthLoginInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthLoginInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authPasswordChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authPasswordChange(ctx: IContext, data: AuthPasswordChangeInput, reqUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()@UseGuards(GqlGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthPasswordChangeInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authPasswordResetConfirmation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authPasswordResetConfirmation(ctx: IContext, data: AuthPasswordResetConfirmationInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthPasswordResetConfirmationInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authPasswordResetRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authPasswordResetRequest(ctx: IContext, data: AuthPasswordResetRequestInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthPasswordResetRequestInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authRegister(ctx: IContext, data: AuthRegisterInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthRegisterInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(email: string, ctx: IContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, UseGuards } from '@nestjs/common';\nimport { Args, Context, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport bcrypt from 'bcryptjs';\nimport { CookieOptions } from 'express';\nimport gql from 'graphql-tag';\n\nimport { GqlGuard, GqlUser, RequestUser, Role } from '../../auth';\nimport { AuthService } from '../../auth/auth.service';\nimport { ConfigService } from '../../config';\nimport { JwtService } from '../../jwt';\nimport { MailService } from '../../mail';\nimport {\n  AuthLoginInput,\n  AuthPasswordChangeInput,\n  AuthPasswordResetConfirmationInput,\n  AuthPasswordResetRequestInput,\n  AuthRegisterInput,\n  IContext,\n} from '../models';\n\nexport const AuthTypeDef = gql`\n  extend type Query {\n    authLogin(data: AuthLoginInput!): AuthSession!\n    authExchangeToken: AuthSession!\n    authPasswordResetRequest(data: AuthPasswordResetRequestInput!): Boolean\n  }\n\n  extend type Mutation {\n    authPasswordChange(data: AuthPasswordChangeInput!): Boolean\n    authPasswordResetConfirmation(data: AuthPasswordResetConfirmationInput!): Boolean\n    authRegister(data: AuthRegisterInput): User!\n  }\n\n  type AuthSession {\n    id: Int!\n    maxAge: String!\n    roles: [String!]!\n    rememberMe: Boolean!\n  }\n\n  input AuthLoginInput {\n    email: String!\n    password: String!\n    rememberMe: Boolean!\n  }\n\n  input AuthPasswordChangeInput {\n    oldPassword: String!\n    newPassword: String!\n  }\n\n  input AuthPasswordResetConfirmationInput {\n    newPassword: String!\n    token: String!\n  }\n\n  input AuthPasswordResetRequestInput {\n    email: String!\n  }\n\n  input AuthRegisterInput {\n    email: String!\n    firstName: String!\n    password: String!\n  }\n`;\n\n@Resolver('Auth')\nexport class AuthResolver {\n  private CLEAR_COOKIE_OPTIONS: CookieOptions = {\n    maxAge: 0,\n    secure: this.config.production,\n    sameSite: this.config.production ? 'strict' : 'lax',\n  };\n\n  constructor(\n    private readonly auth: AuthService,\n    private readonly config: ConfigService,\n    private readonly jwtService: JwtService,\n    private readonly mail: MailService\n  ) {}\n\n  private async getUser(email: string, ctx: IContext) {\n    const users = await ctx.prisma.user.findMany({\n      where: {\n        email: {\n          mode: 'insensitive',\n          equals: email,\n        },\n      },\n    });\n\n    return users[0];\n  }\n\n  @Query()\n  async authLogin(@Context() ctx: IContext, @Args('data') data: AuthLoginInput) {\n    const user = await this.getUser(data.email, ctx);\n\n    if (!user) throw new HttpException({ code: 'USER_NOT_FOUND' }, 400);\n\n    const correctPassword = await bcrypt.compare(data.password, user.password);\n    if (!correctPassword) throw new HttpException({ code: 'INCORRECT_PASSWORD' }, 400);\n\n    return this.auth.setJwtCookie(ctx.res, user, data.rememberMe);\n  }\n\n  @Query()\n  @UseGuards(GqlGuard)\n  async authExchangeToken(@Context() ctx: IContext, @GqlUser() reqUser: RequestUser) {\n    const user = await ctx.prisma.user.findOne({\n      where: { id: reqUser.id },\n    });\n\n    if (user) {\n      return this.auth.setJwtCookie(ctx.res, user, ctx.req.cookies['rememberMe']);\n    } else {\n      ctx.res.clearCookie('jwt', this.CLEAR_COOKIE_OPTIONS);\n      ctx.res.clearCookie('rememberMe', this.CLEAR_COOKIE_OPTIONS);\n      throw new HttpException({ code: 'USER_NOT_FOUND' }, 400);\n    }\n  }\n\n  @Query()\n  async authPasswordResetRequest(\n    @Context() ctx: IContext,\n    @Args('data') data: AuthPasswordResetRequestInput\n  ) {\n    const user = await this.getUser(data.email, ctx);\n\n    if (!user) throw new HttpException({ code: 'USER_NOT_FOUND' }, 400);\n\n    this.mail.sendPasswordReset(user.email);\n  }\n\n  @Mutation()\n  async authRegister(@Context() ctx: IContext, @Args('data') data: AuthRegisterInput) {\n    const userFound = await this.getUser(data.email, ctx);\n    if (userFound) throw new HttpException({ code: 'EMAIL_TAKEN' }, 400);\n\n    const hashedPassword = await bcrypt.hash(data.password, 12);\n\n    return await ctx.prisma.user.create({\n      data: {\n        firstName: data.firstName,\n        lastName: data.lastName,\n        email: data.email.trim(),\n        password: hashedPassword,\n        roles: { set: [Role.Registered] },\n      },\n    });\n  }\n\n  @Mutation()\n  async authPasswordResetConfirmation(\n    @Context() ctx: IContext,\n    @Args('data') data: AuthPasswordResetConfirmationInput\n  ) {\n    let tokenPayload;\n    try {\n      tokenPayload = this.jwtService.verify(data.token);\n    } catch {\n      throw new HttpException({ code: 'UNAUTHORIZED' }, 400);\n    }\n\n    const user = await this.getUser(tokenPayload.email, ctx);\n\n    if (!user) throw new HttpException({ code: 'USER_NOT_FOUND' }, 400);\n\n    const hashedPassword = await bcrypt.hash(data.newPassword, 12);\n\n    await ctx.prisma.user.update({\n      where: { id: user.id },\n      data: { password: hashedPassword },\n    });\n  }\n\n  @Mutation()\n  @UseGuards(GqlGuard)\n  async authPasswordChange(\n    @Context() ctx: IContext,\n    @Args('data') data: AuthPasswordChangeInput,\n    @GqlUser() reqUser: RequestUser\n  ) {\n    const user = await ctx.prisma.user.findOne({ where: { id: reqUser.id } });\n    if (!user) throw new HttpException({ code: 'USER_NOT_FOUND' }, 400);\n\n    const correctPassword = await bcrypt.compare(data.oldPassword, user.password);\n    if (!correctPassword) throw new HttpException({ code: 'WRONG_PASSWORD' }, 400);\n\n    const hashedPassword = await bcrypt.hash(data.newPassword, 12);\n\n    await ctx.prisma.user.update({\n      where: { id: user.id },\n      data: { password: hashedPassword },\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setJwtCookie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setJwtCookie\n                        \n                        \n                    \n                \n            \n            \n                \nsetJwtCookie(res: Response, user: RequestUser, rememberMe: boolean | string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    user\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    rememberMe\n                                    \n                                            boolean | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CookieOptions, Response } from 'express';\n\nimport { RequestUser } from '../auth';\nimport { ConfigService } from '../config';\nimport { AuthSession } from '../graphql/models/user-session';\nimport { JwtService } from '../jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(private readonly jwtService: JwtService, private readonly config: ConfigService) {}\n\n  setJwtCookie(res: Response, user: RequestUser, rememberMe: boolean | string = false) {\n    if (typeof rememberMe === 'string') {\n      rememberMe = rememberMe === 'true';\n    }\n\n    const jwtPayload = {\n      id: user.id,\n      roles: user.roles ? user.roles.toString() : undefined,\n    };\n\n    const expiresIn = rememberMe\n      ? this.config.rememberMeExpiresIn\n      : (this.config.jwtOptions.signOptions.expiresIn as number);\n    const maxAge = expiresIn * 1000;\n    const token = this.jwtService.sign(jwtPayload, { expiresIn });\n\n    const cookieOptions: CookieOptions = {\n      maxAge,\n      secure: this.config.production,\n      sameSite: this.config.production ? 'strict' : 'lax',\n      domain: this.config.cookieDomain,\n    };\n\n    res.cookie('jwt', token, cookieOptions);\n    res.cookie('rememberMe', rememberMe, cookieOptions);\n\n    const response: AuthSession = {\n      id: user.id,\n      maxAge: maxAge.toString(),\n      roles: user.roles,\n      rememberMe,\n    };\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthSession.html":{"url":"interfaces/AuthSession.html","title":"interface - AuthSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/user-session.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        maxAge\n                                \n                                \n                                        rememberMe\n                                \n                                \n                                        roles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                    \n                                \n                                \n                                    \n                                        maxAge:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rememberMe\n                                    \n                                \n                                \n                                    \n                                        rememberMe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthSession {\n  id: string;\n  maxAge: string;\n  roles: string[];\n  rememberMe: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\nimport { environment } from '../../environments/environment';\nimport { ConfigService } from './config.service';\n\n@Global()\n@Module({\n  providers: [{ provide: ConfigService, useValue: environment }],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/config/config.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EnvironmentBase\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieDomain\n                            \n                            \n                                expressPort\n                            \n                            \n                                graphql\n                            \n                            \n                                jwtOptions\n                            \n                            \n                                postgres\n                            \n                            \n                                production\n                            \n                            \n                                rememberMeExpiresIn\n                            \n                            \n                                smtp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookieDomain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JwtModuleOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postgres\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PostgreSQLConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            production\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rememberMeExpiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            smtp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:14\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { EnvironmentBase } from '../../environments/environment.base';\n\n@Injectable()\nexport class ConfigService extends EnvironmentBase {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentBase.html":{"url":"classes/EnvironmentBase.html","title":"class - EnvironmentBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/environments/environment.base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieDomain\n                            \n                            \n                                expressPort\n                            \n                            \n                                graphql\n                            \n                            \n                                jwtOptions\n                            \n                            \n                                postgres\n                            \n                            \n                                production\n                            \n                            \n                                rememberMeExpiresIn\n                            \n                            \n                                smtp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookieDomain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JwtModuleOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postgres\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PostgreSQLConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            production\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rememberMeExpiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            smtp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { JwtModuleOptions } from '@nestjs/jwt';\nimport { PoolConfig as PostgreSQLConfig } from 'pg';\n\nexport class EnvironmentBase {\n  production: boolean;\n  expressPort: string | number;\n  graphql: {\n    playground: boolean;\n  };\n  postgres: PostgreSQLConfig;\n  jwtOptions: JwtModuleOptions;\n  rememberMeExpiresIn: number;\n  cookieDomain: string;\n  smtp: {\n    server: string;\n    login: string;\n    password: string;\n    fromName: string;\n    fromEmail: string;\n  };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlConfigService.html":{"url":"injectables/GqlConfigService.html","title":"injectable - GqlConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GqlConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/gql-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGqlOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/graphql/gql-config.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGqlOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGqlOptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/graphql/gql-config.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     GqlModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ContextIdFactory, ModuleRef } from '@nestjs/core';\nimport { GqlModuleOptions, GqlOptionsFactory } from '@nestjs/graphql';\nimport { print } from 'graphql';\n\nimport { ConfigService } from '../config';\nimport { PrismaService } from '../prisma';\nimport { ALL_TYPE_DEFS } from './resolvers';\n\n@Injectable()\nexport class GqlConfigService implements GqlOptionsFactory {\n  constructor(private readonly config: ConfigService, private moduleRef: ModuleRef) {}\n\n  createGqlOptions(): GqlModuleOptions {\n    return {\n      typeDefs: print(ALL_TYPE_DEFS),\n      installSubscriptionHandlers: true,\n      debug: !this.config.production,\n      playground: this.config.graphql.playground,\n      introspection: this.config.graphql.playground,\n      tracing: this.config.graphql.playground,\n      cors: this.config.production ? undefined : { credentials: true, origin: true },\n      context: async ctx => {\n        const prisma = this.moduleRef.get(PrismaService, { strict: false });\n\n        return ctx.connection\n          ? { ...ctx, req: ctx.connection.context, prisma }\n          : { ...ctx, prisma };\n      },\n      uploads: {\n        maxFileSize: 20_000_000, // 20 MB\n        maxFiles: 5,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlGuard.html":{"url":"injectables/GqlGuard.html","title":"injectable - GqlGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GqlGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/gql/gql.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/gql/gql.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/gql/gql.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/gql/gql.guard.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { AuthGuard } from '@nestjs/passport';\n\nimport { Role } from '../../auth';\n\n@Injectable()\nexport class GqlGuard extends AuthGuard('jwt') {\n  constructor(private readonly reflector: Reflector) {\n    super();\n  }\n\n  async canActivate(context: ExecutionContext) {\n    await super.canActivate(context);\n\n    const ctx = GqlExecutionContext.create(context);\n    const user = ctx.getContext().req.user;\n\n    const classRoles = this.reflector.get('roles', ctx.getClass());\n    const handlerRoles = this.reflector.get('roles', ctx.getHandler());\n\n    let allowedRoles: Role[] = [];\n    if (classRoles) allowedRoles = classRoles;\n    if (handlerRoles) allowedRoles = allowedRoles.concat(handlerRoles);\n\n    if (allowedRoles.length === 0) return true;\n\n    return user.roles && user.roles.some((userRole: Role) => allowedRoles.includes(userRole));\n  }\n\n  getRequest(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IContext.html":{"url":"interfaces/IContext.html","title":"interface - IContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/context.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        prisma\n                                \n                                \n                                            Optional\n                                        req\n                                \n                                \n                                            Optional\n                                        res\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        prisma\n                                    \n                                \n                                \n                                    \n                                        prisma:         PrismaService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PrismaService\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                    \n                                \n                                \n                                    \n                                        req:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        res\n                                    \n                                \n                                \n                                    \n                                        res:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PrismaService } from '../../prisma';\n\nexport interface IContext {\n  req?: any;\n  res?: any;\n  prisma?: PrismaService;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtModule.html":{"url":"modules/JwtModule.html","title":"module - JwtModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/jwt/jwt.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule as NestJwtModule } from '@nestjs/jwt';\n\nimport { environment } from '../../environments/environment';\n\n@Module({\n  imports: [NestJwtModule.register(environment.jwtOptions)],\n  exports: [NestJwtModule],\n})\nexport class JwtModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        aud\n                                \n                                \n                                            Optional\n                                        exp\n                                \n                                \n                                            Optional\n                                        iat\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        iss\n                                \n                                \n                                        roles\n                                \n                                \n                                            Optional\n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  readonly id: string;\n  readonly roles: string;\n  readonly iss?: string;\n  readonly aud?: string;\n  readonly sub?: string;\n  readonly exp?: number;\n  readonly iat?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/jwt.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Request as ExReq } from 'express';\nimport { Strategy } from 'passport-jwt';\n\nimport { ConfigService } from '../config';\nimport { JwtPayload } from './jwt-payload';\nimport { RequestUser } from './request-user';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(private readonly config: ConfigService) {\n    super({\n      secretOrKey: config.production ? config.jwtOptions.publicKey : config.jwtOptions.secret,\n      jwtFromRequest: (req: ExReq & { token: any }) => {\n        if (!req.token) {\n          return req.cookies['jwt']; // HTTP request\n        } else {\n          return req.token; // Websocket connections\n        }\n      },\n    });\n  }\n\n  async validate(payload: JwtPayload) {\n    let roles: string[] = [];\n    if (payload.roles) {\n      roles = payload.roles.split(',');\n    }\n    const user: RequestUser = { id: payload.id, roles };\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_imports\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nJwtModule\n\nJwtModule\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nJwtModule->MailModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JwtModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import path from 'path';\n\nimport { HandlebarsAdapter, MailerModule } from '@nest-modules/mailer';\nimport { Module } from '@nestjs/common';\n\nimport { environment } from '../../environments/environment';\nimport { JwtModule } from '../jwt';\nimport { MailService } from './mail.service';\n\n@Module({\n  imports: [\n    JwtModule,\n    MailerModule.forRootAsync({\n      useFactory: () => ({\n        transport: `smtps://${environment.smtp.login}:${environment.smtp.password}@${environment.smtp.server}`,\n        defaults: { from: `\"${environment.smtp.fromName}\" ` },\n        template: {\n          dir: path.join(__dirname, 'mail/templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                send\n                            \n                            \n                                sendPasswordReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailer: MailerService, jwtService: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mail/mail.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            send\n                        \n                        \n                    \n                \n            \n            \n                \nsend(options: MailOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/mail/mail.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \nsendPasswordReset(to: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/mail/mail.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ISendMailOptions, MailerService } from '@nest-modules/mailer';\nimport { Injectable } from '@nestjs/common';\n\nimport { ConfigService } from '../config';\nimport { JwtService } from '../jwt';\nimport { PasswordResetContext } from './templates';\n\ntype MailTemplate = 'verify-email' | 'password-reset';\n\ntype MailOptions = ISendMailOptions & { template?: MailTemplate };\n\n@Injectable()\nexport class MailService {\n  constructor(\n    private readonly mailer: MailerService,\n    private readonly jwtService: JwtService,\n    private readonly config: ConfigService\n  ) {}\n\n  send(options: MailOptions) {\n    return this.mailer.sendMail(options);\n  }\n\n  sendPasswordReset(to: string) {\n    const token = this.jwtService.sign({ email: to }, { expiresIn: '1d' });\n\n    const context: PasswordResetContext = {\n      resetUrl: 'https://zensoftware.ca/#/password-reset-confirmation?token=' + encodeURI(token),\n    };\n\n    this.send({\n      template: 'password-reset',\n      to,\n      subject: `${this.config.smtp.fromName} Password Reset`,\n      context,\n    }).then();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordResetContext.html":{"url":"interfaces/PasswordResetContext.html","title":"interface - PasswordResetContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordResetContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mail/templates/password-reset.context.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        resetUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        resetUrl\n                                    \n                                \n                                \n                                    \n                                        resetUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PasswordResetContext {\n  resetUrl: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/prisma/prisma.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/prisma/prisma.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onDelete\n                            \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: PrismaClientOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    PrismaClientOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDelete(args: onDeleteArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            onDeleteArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleDestroy, OnModuleInit, Optional, Scope } from '@nestjs/common';\nimport { PrismaDelete, onDeleteArgs } from '@paljs/plugins';\nimport { PrismaClient, PrismaClientOptions } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n  constructor(@Optional() options?: PrismaClientOptions) {\n    super(options);\n  }\n\n  async onDelete(args: onDeleteArgs) {\n    const prismaDelete = new PrismaDelete(this);\n    await prismaDelete.onDelete(args);\n  }\n\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async onModuleDestroy() {\n    await this.$disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestUser.html":{"url":"interfaces/RequestUser.html","title":"interface - RequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/request-user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        roles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RequestUser {\n  id: string;\n  roles: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleResolver.html":{"url":"classes/RoleResolver.html","title":"class - RoleResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Role.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneRole\n                            \n                            \n                                    Async\n                                deleteManyRole\n                            \n                            \n                                    Async\n                                deleteOneRole\n                            \n                            \n                                    Async\n                                findManyRole\n                            \n                            \n                                    Async\n                                findManyRoleCount\n                            \n                            \n                                    Async\n                                findOneRole\n                            \n                            \n                                    Async\n                                updateManyRole\n                            \n                            \n                                    Async\n                                updateOneRole\n                            \n                            \n                                    Async\n                                upsertOneRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneRole(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Role.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyRole(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Role.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneRole(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Role.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyRole(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Role.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyRoleCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyRoleCount(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Role.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneRole(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Role.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyRole(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Role.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneRole(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Role.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneRole(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Role.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UseGuards } from '@nestjs/common';\nimport { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { GqlGuard, GqlUser, RequestUser, Role, Roles } from '../../auth';\nimport { IContext } from '../models';\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/Role/resolvers';\n\nexport const RoleTypeDef = null;\n// export const RoleTypeDef = gql`\n//   extend type Query {\n//     sampleRoleQuery: Role!\n//   }\n//   extend type Mutation {\n//     sampleRoleMutation(args: Int!): Boolean\n//   }\n//   extend type Role {\n//     sampleRoleField: String\n//   }\n// `;\n\n@Resolver('Role')\n@UseGuards(GqlGuard)\n@Roles(Role.Admin)\nexport class RoleResolver {\n  @Query()\n  async findOneRole(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Query.findOneRole(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Query()\n  async findManyRole(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Query.findManyRole(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Query()\n  async findManyRoleCount(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Query.findManyRoleCount(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async createOneRole(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.createOneRole(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async updateOneRole(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.updateOneRole(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async deleteOneRole(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.deleteOneRole(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async upsertOneRole(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.upsertOneRole(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async deleteManyRole(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.deleteManyRole(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async updateManyRole(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.updateManyRole(parent, PrismaSelectArgs(info, args), ctx);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/User.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneUser\n                            \n                            \n                                    Async\n                                deleteManyUser\n                            \n                            \n                                    Async\n                                deleteOneUser\n                            \n                            \n                                    Async\n                                findManyUser\n                            \n                            \n                                    Async\n                                findManyUserCount\n                            \n                            \n                                    Async\n                                findOneUser\n                            \n                            \n                                    Async\n                                password\n                            \n                            \n                                    Async\n                                updateManyUser\n                            \n                            \n                                    Async\n                                updateOneUser\n                            \n                            \n                                    Async\n                                upsertOneUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyUserCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyUserCount(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            password\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    password()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UseGuards } from '@nestjs/common';\nimport {\n  Args,\n  Context,\n  Info,\n  Mutation,\n  Parent,\n  Query,\n  ResolveField,\n  Resolver,\n} from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { GqlGuard, GqlUser, RequestUser, Role, Roles } from '../../auth';\nimport { IContext } from '../models';\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/User/resolvers';\n\nexport const UserTypeDef = null;\n// export const UserTypeDef = gql`\n//   extend type Query {\n//     sampleUserQuery: User!\n//   }\n//   extend type Mutation {\n//     sampleUserMutation(args: Int!): Boolean\n//   }\n//   extend type User {\n//     sampleUserField: String\n//   }\n// `;\n\n@Resolver('User')\n// @UseGuards(GqlGuard)\n@Roles(Role.Admin)\nexport class UserResolver {\n  @ResolveField()\n  async password() {\n    return '';\n  }\n\n  @Query()\n  async findOneUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Query.findOneUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Query()\n  async findManyUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Query.findManyUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Query()\n  async findManyUserCount(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Query.findManyUserCount(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async createOneUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.createOneUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async updateOneUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.updateOneUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async deleteOneUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.deleteOneUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async upsertOneUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.upsertOneUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async deleteManyUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.deleteManyUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async updateManyUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.updateManyUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZenGraphQLModule.html":{"url":"modules/ZenGraphQLModule.html","title":"module - ZenGraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    ZenGraphQLModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ZenGraphQLModule\n\n\n\ncluster_ZenGraphQLModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nZenGraphQLModule -->\n\nAuthModule->ZenGraphQLModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nZenGraphQLModule -->\n\nMailModule->ZenGraphQLModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nZenGraphQLModule -->\n\nPrismaModule->ZenGraphQLModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/graphql/zen-graphql.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\n\nimport { AuthModule } from '../auth';\nimport { MailModule } from '../mail';\nimport { PrismaModule } from '../prisma';\nimport { GqlConfigService } from './gql-config.service';\nimport { NEST_RESOLVERS } from './resolvers';\n\n@Global()\n@Module({\n  imports: [\n    AuthModule,\n    PrismaModule,\n    MailModule,\n    GraphQLModule.forRootAsync({\n      useClass: GqlConfigService,\n    }),\n  ],\n  providers: [...NEST_RESOLVERS],\n})\nexport class ZenGraphQLModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/gql/gql-user.decorator.ts\n            \n            variable\n            GqlUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/gql/gql.guard.ts\n            \n            injectable\n            GqlGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/http-user.decorator.ts\n            \n            variable\n            HttpUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/request-user.ts\n            \n            interface\n            RequestUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            function\n            createContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/gql-config.service.ts\n            \n            injectable\n            GqlConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/auth-login-input.ts\n            \n            class\n            AuthLoginInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/auth-password-change-input.ts\n            \n            class\n            AuthPasswordChangeInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/auth-password-reset-confirmation-input.ts\n            \n            class\n            AuthPasswordResetConfirmationInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/auth-password-reset-request-input.ts\n            \n            class\n            AuthPasswordResetRequestInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/auth-register-input.ts\n            \n            class\n            AuthRegisterInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/auth-resend-verification-input.ts\n            \n            class\n            AuthResendVerificationInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/context.ts\n            \n            interface\n            IContext\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/user-session.ts\n            \n            interface\n            AuthSession\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/prisma-select-args.ts\n            \n            function\n            PrismaSelectArgs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Auth.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Auth.ts\n            \n            variable\n            AuthTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Role.ts\n            \n            class\n            RoleResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Role.ts\n            \n            variable\n            RoleTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/User.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/User.ts\n            \n            variable\n            UserTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            ALL_TYPE_DEFS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            GRAPHQL_SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            NEST_RESOLVERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            NEST_TYPE_DEFS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            PRISMA_SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/write-schema.ts\n            \n            function\n            WriteGraphQLSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/write-schema.ts\n            \n            variable\n            execWriteFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/mail/templates/password-reset.context.ts\n            \n            interface\n            PasswordResetContext\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.base.ts\n            \n            class\n            EnvironmentBase\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nest-modules/mailer : ^1.3.22\n        \n            @nestjs/common : ^7.4.4\n        \n            @nestjs/core : ^7.4.4\n        \n            @nestjs/graphql : ^7.6.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.4.4\n        \n            @paljs/plugins : ^1.3.2\n        \n            @prisma/client : ^2.6.2\n        \n            apollo-server-express : ^2.16.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            cookie-parser : ^1.4.5\n        \n            date-fns : ^2.16.1\n        \n            dotenv : 6.2.0\n        \n            graphql : ^15.3.0\n        \n            graphql-tools : ^6.2.2\n        \n            helmet : ^4.1.1\n        \n            lodash-es : ^4.17.15\n        \n            nodemailer : ^6.4.11\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~6.5.5\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createContext   (apps/.../context.ts)\n                        \n                        \n                            PrismaSelectArgs   (apps/.../prisma-select-args.ts)\n                        \n                        \n                            WriteGraphQLSchema   (apps/.../write-schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/api/src/app/graphql/context.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createContext\n                        \n                        \n                    \n                \n            \n            \n                \ncreateContext()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         Context\n\n                    \n                \n            \n        \n    \n    apps/api/src/app/graphql/prisma-select-args.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PrismaSelectArgs\n                        \n                        \n                    \n                \n            \n            \n                \nPrismaSelectArgs(info, args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/api/src/app/graphql/write-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            WriteGraphQLSchema\n                        \n                        \n                    \n                \n            \n            \n                \nWriteGraphQLSchema(outPath, schema)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n⛩ Zen ⛩\nModern Full Stack Web Portal built with Nest and Angular\nZen Docs\nGitHub repo ZenSoftware/Zen\n&#x1F939; Currently under development - New contributors are welcome!&#x1F331;\n&#x1F367; You may open a git issue if you are interested in contributing! &#x1F370;\n\nProject Setup Instructions\nRequirements\n\nNode v14\nDocker\n\ngit clone https://github.com/ZenSoftware/Zen.git --depth=1\ncd Zen\nnpm i\ndocker-compose up -d\nnpm run prisma:save\nnpm run start:api\n\nnpm run apollo:watch\nnpm run startReload GraphQL schema for Apollo extension via VSCode command palette after the api server has started: >Apollo: Reload schema\n\nGraphQL Ambitions\n\n Nest GraphQL resolvers as a gateway to Prisma Client.\n Prisma Case Insensitive Filtering For case-insensitive querying of text.\n PrismaSelect to solve the N+1 problem for all queries for free.\n PrismaDelete to add CASCADE and SET_NULL deletion capabilities to Prisma. These features have yet to be implemented by the core Prisma team. This project will convert to the approach directly supported by Prisma when the official feature becomes available.\n Nest GraphQL SDL generation to enable auto-completion using a tool like Apollo extension for VS Code\n Code generation of apollo-angular services to enable simple, type safe access to the GraphQL API within Angular. &#x1F380;\n An Angular GraphQLModule to simplify the configuration of the ApolloClient to enable/disable the varying ApolloLink features.\n HttpBatchLink for batching several GraphQL requests that occur within a short debounce interval. This really helps to alleviate network congestion.\n UploadLink to give ApolloClient HTTP multi-part form requests capabilities. Enabling the uploading of files via GraphQLUpload.\n WebSocketLink for GraphQL subscriptions over websockets.\n\n\nAPI Authentication, Performance & Scaling Ambitions\n\n Nest authentication integration, user creation, and login system designed specifically to work for an Angular SPA (single page application). This project will provide responsive, \"mobile first\" interfaces for the standard set of authentication features (sign up, login, password change).\n Angular route guards and Angular directives to show/hide content depending on user permissions.\n Nest authorization directives for server side role-based access control to allow for declarative, fine grained security control over all GraphQL queries and mutations.\n 100% stateless web server authentication via JWT (Javascript Web Tokens). Keeping the API stateless will enable horizontal scaling of container replicas of the api in production.\n\n\nModern Web Components and Styling Ambitions\n\n SASS chosen as the css transpiler of choice\n Angular Material components & theme.\n Directly import Bootstrap reset, utilities, & grid features through SASS imports, and exclude the Bootstrap theme and component styles. These features are missing from Angular Material, and greatly simplify the creation of responsive, mobile first applications.\n\n\nProject & Dev Tools Ambitions\n\n Nx for project management to allow for the use of Nx Console extensions for VSCode. Nx Console is a GUI interface for monorepos that adds a lot of modern developer conveniences. It also helps to simplify the use of the various Angular & Nest code generation schematics available in the ecosystem.\n Angular Language Service for VSCode for modern IDE tooling.\n NPM scripts for versioned releases of the api server as a containerized Docker image. node:14-alpine is used as the Docker container base image, and the appropriate tsconfig.app.json configurations are being applied for the Node v14 Nest app.\n Enforced code formatting via Prettier & import-sort, guaranteeing all contributions to the project are standardized with predictable structure, and clear legibility.\n Compodoc to generate Nest & Angular documentation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZenGraphQLModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAppModule -->\n\nJwtModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtModule->AuthModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nJwtModule->MailModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nZenGraphQLModule -->\n\nPrismaModule->ZenGraphQLModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nZenGraphQLModule->AppModule\n\n\n\nZenGraphQLModule -->\n\nAuthModule->ZenGraphQLModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nGqlGuard \n\nGqlGuard \n\nGqlGuard  -->\n\nAuthModule->GqlGuard \n\n\n\n\n\nJwtModule \n\nJwtModule \n\nJwtModule  -->\n\nAuthModule->JwtModule \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGqlGuard\n\nGqlGuard\n\nAuthModule -->\n\nGqlGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\nZenGraphQLModule -->\n\nMailModule->ZenGraphQLModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Context   (apps/.../context.ts)\n                        \n                        \n                            MailOptions   (apps/.../mail.service.ts)\n                        \n                        \n                            MailTemplate   (apps/.../mail.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/graphql/context.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            IContext\n\n                \n            \n        \n    \n    apps/api/src/app/mail/mail.service.ts\n    \n    \n        \n            \n                \n                    \n                    MailOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MailTemplate\n                \n            \n            \n                \n                        \"verify-email\" | \"password-reset\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_TYPE_DEFS   (apps/.../index.ts)\n                        \n                        \n                            AuthTypeDef   (apps/.../Auth.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            execWriteFile   (apps/.../write-schema.ts)\n                        \n                        \n                            GqlUser   (apps/.../gql-user.decorator.ts)\n                        \n                        \n                            GRAPHQL_SCHEMA   (apps/.../index.ts)\n                        \n                        \n                            HttpUser   (apps/.../http-user.decorator.ts)\n                        \n                        \n                            NEST_RESOLVERS   (apps/.../index.ts)\n                        \n                        \n                            NEST_TYPE_DEFS   (apps/.../index.ts)\n                        \n                        \n                            PRISMA_SCHEMA   (apps/.../index.ts)\n                        \n                        \n                            Roles   (apps/.../roles.decorator.ts)\n                        \n                        \n                            RoleTypeDef   (apps/.../Role.ts)\n                        \n                        \n                            UserTypeDef   (apps/.../User.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/graphql/resolvers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_TYPE_DEFS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mergeTypeDefs([PRISMA_TYPE_DEFS, ...NEST_TYPE_DEFS])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GRAPHQL_SCHEMA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : makeExecutableSchema({ typeDefs: ALL_TYPE_DEFS })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NEST_RESOLVERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  AuthResolver,\n  RoleResolver,\n  UserResolver\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NEST_TYPE_DEFS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : [\n  AuthTypeDef,\n  RoleTypeDef,\n  UserTypeDef\n].filter(x => x)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PRISMA_SCHEMA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : makeExecutableSchema({ typeDefs: PRISMA_TYPE_DEFS })\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  extend type Query {\n    authLogin(data: AuthLoginInput!): AuthSession!\n    authExchangeToken: AuthSession!\n    authPasswordResetRequest(data: AuthPasswordResetRequestInput!): Boolean\n  }\n\n  extend type Mutation {\n    authPasswordChange(data: AuthPasswordChangeInput!): Boolean\n    authPasswordResetConfirmation(data: AuthPasswordResetConfirmationInput!): Boolean\n    authRegister(data: AuthRegisterInput): User!\n  }\n\n  type AuthSession {\n    id: Int!\n    maxAge: String!\n    roles: [String!]!\n    rememberMe: Boolean!\n  }\n\n  input AuthLoginInput {\n    email: String!\n    password: String!\n    rememberMe: Boolean!\n  }\n\n  input AuthPasswordChangeInput {\n    oldPassword: String!\n    newPassword: String!\n  }\n\n  input AuthPasswordResetConfirmationInput {\n    newPassword: String!\n    token: String!\n  }\n\n  input AuthPasswordResetRequestInput {\n    email: String!\n  }\n\n  input AuthRegisterInput {\n    email: String!\n    firstName: String!\n    password: String!\n  }\n`\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  expressPort: process.env.PORT,\n  graphql: {\n    playground: false,\n  },\n  postgres: {\n    host: 'postgres-svc',\n    port: 5432,\n    user: process.env.PGUSER,\n    password: process.env.PGPASSWORD,\n    database: 'prisma',\n  },\n  jwtOptions: {\n    privateKey: process.env.JWT_PRIVATE_KEY,\n    publicKey: process.env.JWT_PUBLIC_KEY,\n    signOptions: {\n      algorithm: 'RS256',\n      expiresIn: 3600, // 1 hour (in seconds)\n    },\n  },\n  rememberMeExpiresIn: 2592000, // 30 days (in seconds)\n  cookieDomain: 'zensoftware.ca',\n  smtp: {\n    server: process.env.SMTP_SERVER,\n    login: process.env.SMTP_LOGIN,\n    password: process.env.SMTP_PASSWORD,\n    fromEmail: process.env.SMTP_FROM_EMAIL,\n    fromName: 'Zen',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  expressPort: 7080,\n  graphql: {\n    playground: true,\n  },\n  postgres: {\n    host: 'localhost',\n    port: 5445,\n    user: 'ZenAdmin',\n    password: 'temp',\n    database: 'zen',\n  },\n  jwtOptions: {\n    secret: 'dev secret',\n    signOptions: {\n      algorithm: 'HS256',\n      expiresIn: 3600, // 1 hour (in seconds)\n    },\n  },\n  rememberMeExpiresIn: 2592000, // 30 days (in seconds)\n  cookieDomain: undefined,\n  smtp: {\n    server: 'localhost/nowhere', //process.env.SMTP_SERVER,\n    login: process.env.SMTP_LOGIN,\n    password: process.env.SMTP_PASSWORD,\n    fromEmail: process.env.SMTP_FROM_EMAIL,\n    fromName: 'Zen',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/write-schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            execWriteFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : promisify(fs.writeFile)\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/auth/gql/gql-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GqlUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, context: ExecutionContext) => {\n  const user = GqlExecutionContext.create(context).getContext().req.user;\n  if (!user) {\n    throw new UnauthorizedException('No user found for request');\n  }\n  return user as RequestUser;\n})\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/auth/http-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HttpUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, context: ExecutionContext) => {\n  const req = context.switchToHttp().getRequest();\n  if (!req.user) {\n    throw new UnauthorizedException('No user found for request');\n  }\n  return req.user as RequestUser;\n})\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/auth/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: Array) => SetMetadata('roles', roles)\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Role.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RoleTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/User.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
