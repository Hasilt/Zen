var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.673,1,1.646]],["body/modules/AppModule.html",[0,1.137,1,3.282,2,1.186,3,1.52,4,1.979,5,1.979,6,1.342,7,1.729,8,1.729,9,2.712,10,2.712,11,2.705,12,0.049,13,2.705,14,2.705,15,2.705,16,2.526,17,1.729,18,1.979,19,0.437,20,0.52,21,0.437,22,3.349,23,2.526,24,0.668,25,1.047,26,2.712,27,0.922,28,2.712,29,0.922,30,0.52,31,0.15,32,0.029,33,0.037,34,0.029]],["title/classes/CommentResolver.html",[31,0.125,35,1.646]],["body/classes/CommentResolver.html",[12,0.049,19,0.721,20,0.254,21,0.213,24,0.466,27,0.45,29,0.45,30,0.49,31,0.073,32,0.014,33,0.022,34,0.014,35,1.512,36,0.742,37,1.118,38,0.344,39,1.162,40,2.78,41,2.559,42,2.559,43,2.559,44,2.559,45,2.559,46,2.559,47,2.559,48,2.559,49,2.559,50,1.633,51,2.541,52,1.748,53,2.705,54,2.941,55,1.621,56,1.633,57,1.834,58,1.834,59,1.621,60,3.069,61,1.834,62,1.633,63,1.633,64,1.633,65,1.633,66,1.633,67,2.631,68,1.633,69,1.633,70,1.633,71,1.633,72,1.633,73,1.633,74,1.633,75,1.633,76,1.633,77,1.633,78,1.633,79,0.965,80,0.655,81,1.321,82,0.965,83,0.742,84,0.742,85,0.655,86,1.633,87,1.162,88,1.752,89,0.843,90,1.865,91,0.664,92,1.633,93,2.559,94,1.633,95,0.965,96,0.742,97,1.633,98,0.742,99,1.633,100,1.633,101,2.078,102,1.633,103,2.363,104,1.633,105,1.633,106,1.633,107,1.633,108,1.633,109,1.633,110,1.633,111,1.633,112,1.633,113,1.633,114,1.633,115,1.633,116,1.633,117,1.633,118,1.633,119,1.633]],["title/modules/ConfigModule.html",[0,0.673,11,1.437]],["body/modules/ConfigModule.html",[0,1.177,2,1.277,3,1.637,4,2.131,5,2.131,6,1.445,7,2.312,8,2.515,11,2.705,12,0.048,16,2.647,17,1.862,18,2.131,19,0.47,20,0.56,21,0.47,24,0.635,25,1.128,30,0.56,31,0.162,32,0.031,33,0.038,34,0.031,120,2.921,121,2.921,122,2.484,123,3.607,124,2.647,125,2.647,126,2.921,127,2.921,128,2.921,129,3.607]],["title/injectables/ConfigService.html",[122,1.264,130,1.116]],["body/injectables/ConfigService.html",[12,0.048,19,0.427,20,0.508,21,0.427,24,0.549,25,1.024,27,1.16,30,0.508,31,0.147,32,0.028,33,0.036,34,0.028,38,0.689,55,1.876,91,1.13,96,1.486,98,1.913,122,1.913,130,1.688,131,1.934,132,2.651,133,3.412,134,2.823,135,2.884,136,2.884,137,2.884,138,2.884,139,2.884,140,2.49,141,2.884,142,5.299,143,3.274,144,3.412,145,3.274,146,2.651,147,3.274,148,2.651,149,3.274,150,2.651,151,3.274,152,3.274,153,3.274,154,3.274]],["title/interfaces/Context.html",[52,0.871,155,1.437]],["body/interfaces/Context.html",[12,0.048,19,0.47,20,0.56,21,0.47,24,0.47,29,1.491,30,0.695,32,0.031,33,0.038,34,0.031,38,0.759,52,1.523,59,1.891,87,1.637,91,1.026,101,1.637,135,3.066,155,1.862,156,2.921,157,2.131,158,4.126,159,5.095,160,1.855,161,1.637,162,2.921,163,2.469]],["title/classes/EnvironmentBase.html",[31,0.125,134,1.437]],["body/classes/EnvironmentBase.html",[12,0.048,19,0.425,20,0.505,21,0.425,24,0.547,27,1.28,30,0.505,31,0.146,32,0.028,33,0.036,34,0.028,36,1.478,38,0.685,55,1.874,91,1.129,96,2.109,98,2.228,134,2.167,135,2.873,136,3.18,137,3.18,138,3.18,139,3.18,140,2.746,141,3.18,144,3.975,146,2.636,148,3.762,150,3.762,164,2.636,165,3.255,166,3.255,167,3.255,168,3.255,169,3.255,170,3.255,171,3.255,172,2.228,173,3.255,174,3.255,175,2.228]],["title/injectables/GqlConfigService.html",[130,1.116,176,1.646]],["body/injectables/GqlConfigService.html",[12,0.049,19,0.384,20,0.457,21,0.384,24,0.641,25,0.921,26,3.582,29,1.218,30,0.457,31,0.132,32,0.025,33,0.034,34,0.025,38,0.62,39,1.784,52,0.921,55,1.392,57,1.18,58,1.18,59,1.043,61,1.18,80,1.18,85,1.18,91,0.62,101,1.784,122,2.143,130,1.575,131,1.74,158,2.384,160,1.566,161,1.784,175,2.015,176,2.322,177,3.582,178,2.384,179,4.72,180,2.384,181,2.944,182,2.944,183,2.944,184,4.424,185,3.93,186,2.69,187,2.384,188,2.944,189,2.944,190,2.384,191,2.944,192,3.582,193,2.944,194,3.93,195,4.424,196,2.944,197,2.944,198,2.944,199,2.384,200,2.944,201,2.944,202,4.424,203,2.944,204,2.944,205,2.944,206,2.944,207,2.944,208,2.944,209,2.944,210,2.944,211,2.384]],["title/classes/GroupResolver.html",[31,0.125,212,1.646]],["body/classes/GroupResolver.html",[12,0.049,19,0.721,20,0.254,21,0.213,24,0.466,27,0.45,29,0.45,30,0.49,31,0.073,32,0.014,33,0.022,34,0.014,36,0.742,38,0.344,39,1.162,40,2.78,51,2.541,52,1.748,53,2.705,54,2.941,55,1.621,57,1.834,58,1.834,59,1.621,60,3.069,61,1.834,67,2.631,79,0.965,80,0.655,81,1.321,82,0.965,83,0.742,84,0.742,85,0.655,87,1.162,89,0.843,90,1.865,91,0.664,95,0.965,96,0.742,98,0.742,101,2.078,103,2.363,212,1.512,213,1.118,214,2.559,215,2.559,216,2.559,217,2.559,218,2.559,219,2.559,220,2.559,221,2.559,222,2.559,223,1.633,224,1.633,225,1.633,226,1.633,227,1.633,228,1.633,229,1.633,230,1.633,231,1.633,232,1.633,233,1.633,234,1.633,235,1.633,236,1.633,237,1.633,238,1.633,239,1.633,240,1.633,241,1.633,242,1.752,243,1.633,244,2.559,245,1.633,246,1.633,247,1.633,248,1.633,249,1.633,250,1.633,251,1.633,252,1.633,253,1.633,254,1.633,255,1.633,256,1.633,257,1.633,258,1.633,259,1.633,260,1.633,261,1.633,262,1.633,263,1.633,264,1.633,265,1.633]],["title/modules/JwtModule.html",[0,0.673,13,1.437]],["body/modules/JwtModule.html",[0,1.141,2,1.393,8,2.031,12,0.048,13,2.613,19,0.513,20,0.611,21,0.513,23,2.325,24,0.66,25,1.23,30,0.611,31,0.177,32,0.034,33,0.04,34,0.034,124,2.791,125,2.325,126,3.186,172,2.693,266,3.934,267,4.723,268,3.934]],["title/classes/PostResolver.html",[31,0.125,269,1.646]],["body/classes/PostResolver.html",[12,0.049,19,0.721,20,0.254,21,0.213,24,0.466,27,0.45,29,0.45,30,0.49,31,0.073,32,0.014,33,0.022,34,0.014,36,0.742,38,0.344,39,1.162,40,2.78,51,2.541,52,1.748,53,2.705,54,2.941,55,1.621,57,1.834,58,1.834,59,1.621,60,3.069,61,1.834,67,2.631,79,0.965,80,0.655,81,1.321,82,0.965,83,0.742,84,0.742,85,0.655,87,1.162,89,0.843,90,1.865,91,0.664,95,0.965,96,0.742,98,0.742,101,2.078,103,2.363,269,1.512,270,1.118,271,2.559,272,2.559,273,2.559,274,2.559,275,2.559,276,2.559,277,2.559,278,2.559,279,2.559,280,1.633,281,1.633,282,1.633,283,1.633,284,1.633,285,1.633,286,1.633,287,1.633,288,1.633,289,1.633,290,1.633,291,1.633,292,1.633,293,1.633,294,1.633,295,1.633,296,1.633,297,1.633,298,1.633,299,1.752,300,1.633,301,2.559,302,1.633,303,1.633,304,1.633,305,1.633,306,1.633,307,1.633,308,1.633,309,1.633,310,1.633,311,1.633,312,1.633,313,1.633,314,1.633,315,1.633,316,1.633,317,1.633,318,1.633,319,1.633,320,1.633,321,1.633,322,1.633]],["title/modules/PrismaModule.html",[0,0.673,14,1.437]],["body/modules/PrismaModule.html",[0,1.178,2,1.281,3,1.642,4,2.138,5,2.138,6,1.45,7,2.518,8,2.518,12,0.048,14,2.797,16,2.652,17,1.867,18,2.138,19,0.472,20,0.562,21,0.472,24,0.585,25,1.131,30,0.562,31,0.162,32,0.031,33,0.038,34,0.031,124,2.652,160,1.987,323,2.93,324,2.93,325,2.93,326,3.618,327,3.618]],["title/injectables/PrismaService.html",[130,1.116,160,0.986]],["body/injectables/PrismaService.html",[12,0.049,19,0.394,20,0.469,21,0.394,24,0.584,25,0.944,30,0.469,31,0.136,32,0.026,33,0.034,34,0.026,38,0.636,39,1.815,40,2.757,51,1.371,55,1.688,57,1.602,58,1.602,59,1.586,61,1.795,87,1.371,91,0.841,130,1.602,131,1.785,133,3.237,160,1.415,161,1.371,180,2.446,187,2.446,328,2.446,329,4.48,330,3.997,331,5.096,332,5.096,333,3.02,334,4.768,335,3.02,336,3.997,337,3.02,338,3.997,339,4.768,340,3.02,341,3.02,342,3.02,343,3.997,344,3.237,345,2.446,346,2.446,347,3.02,348,3.02,349,3.02,350,3.02,351,4.48,352,3.02,353,3.02,354,3.02]],["title/classes/UserResolver.html",[31,0.125,355,1.646]],["body/classes/UserResolver.html",[12,0.049,19,0.721,20,0.254,21,0.213,24,0.466,27,0.45,29,0.45,30,0.49,31,0.073,32,0.014,33,0.022,34,0.014,36,0.742,38,0.344,39,1.162,40,2.78,51,2.541,52,1.748,53,2.705,54,2.941,55,1.621,57,1.834,58,1.834,59,1.621,60,3.069,61,1.834,67,2.631,79,0.965,80,0.655,81,1.321,82,0.965,83,0.742,84,0.742,85,0.655,87,1.162,89,0.843,90,1.865,91,0.664,95,0.965,96,0.742,98,0.742,101,2.078,103,2.363,355,1.512,356,1.118,357,2.559,358,2.559,359,2.559,360,2.559,361,2.559,362,2.559,363,2.559,364,2.559,365,2.559,366,1.633,367,1.633,368,1.633,369,1.633,370,1.633,371,1.633,372,1.633,373,1.633,374,1.633,375,1.633,376,1.633,377,1.633,378,1.633,379,1.633,380,1.633,381,1.633,382,1.633,383,1.633,384,1.633,385,1.752,386,1.633,387,1.752,388,1.633,389,1.633,390,1.633,391,1.633,392,1.633,393,1.633,394,1.633,395,1.633,396,1.633,397,1.633,398,1.633,399,1.633,400,1.633,401,1.633,402,1.633,403,1.633,404,1.633,405,1.633,406,1.633,407,1.633,408,1.633]],["title/modules/ZenGraphQLModule.html",[0,0.673,15,1.437]],["body/modules/ZenGraphQLModule.html",[0,1.116,2,1.343,7,1.958,12,0.049,15,2.385,19,0.495,20,0.589,21,0.495,23,2.242,24,0.676,25,1.186,30,0.589,31,0.17,32,0.032,33,0.04,34,0.032,80,1.52,81,1.958,85,1.52,124,2.73,127,3.072,176,2.73,409,3.794,410,3.794,411,3.072,412,3.163,413,3.794,414,3.794]],["title/coverage.html",[415,3.065]],["body/coverage.html",[6,1.082,12,0.049,21,0.352,29,0.744,31,0.214,32,0.023,33,0.032,34,0.023,35,1.595,37,2.537,52,0.844,83,1.226,84,1.226,88,1.848,91,0.568,122,1.226,125,2.19,130,1.696,132,2.186,134,1.394,155,1.394,157,2.501,160,0.956,161,1.226,162,3.689,163,1.848,164,2.186,176,1.595,177,2.186,178,2.186,186,1.848,212,1.595,213,2.537,242,1.848,269,1.595,270,2.537,299,1.848,328,2.186,355,1.595,356,2.537,385,1.848,412,1.848,415,2.186,416,2.186,417,2.7,418,2.7,419,5.65,420,3.706,421,2.7,422,5.522,423,5.413,424,2.7,425,2.186,426,2.186,427,4.555,428,3.866,429,2.186,430,2.186,431,2.186,432,2.537,433,2.537,434,2.186,435,2.186,436,2.7,437,2.186,438,2.186,439,2.186,440,2.7,441,2.7]],["title/dependencies.html",[3,1.519,442,2.333]],["body/dependencies.html",[3,1.695,12,0.049,25,1.167,27,1.363,32,0.032,33,0.039,34,0.032,80,1.496,172,2.555,345,3.023,346,3.023,443,4.947,444,3.733,445,3.733,446,3.733,447,3.733,448,4.575,449,3.733,450,3.733,451,3.023,452,3.023,453,3.733,454,3.733,455,3.733,456,3.733,457,3.023,458,3.733,459,3.733,460,3.733,461,3.733,462,3.733,463,3.733,464,3.733,465,3.733,466,3.733]],["title/miscellaneous/functions.html",[467,1.379,468,2.709]],["body/miscellaneous/functions.html",[6,1.994,12,0.045,19,0.493,32,0.032,33,0.039,34,0.032,38,0.796,51,2.094,52,1.182,57,1.848,58,1.848,59,1.633,61,1.515,83,2.094,84,2.094,103,1.952,157,2.234,163,3.406,425,3.062,426,3.734,432,2.588,433,3.156,434,3.734,439,3.062,467,2.234,468,3.062,469,3.781,470,3.062,471,3.781,472,3.062,473,3.781,474,3.734,475,3.781]],["title/index.html",[38,0.491,476,2.333,477,1.889]],["body/index.html",[6,1.081,12,0.042,17,0.902,23,1.033,24,0.352,27,1.254,28,1.416,29,1.103,32,0.015,33,0.023,34,0.015,85,0.7,91,0.368,128,1.416,140,1.033,155,0.902,156,1.416,161,0.794,344,1.416,387,1.847,411,1.416,416,1.416,451,3,452,3,457,1.416,474,2.185,477,1.416,478,2.668,479,3.704,480,1.748,481,1.748,482,3.704,483,1.748,484,1.748,485,4.554,486,4.93,487,1.748,488,1.748,489,1.748,490,1.748,491,1.748,492,1.748,493,1.748,494,1.748,495,1.748,496,1.748,497,1.748,498,1.748,499,2.698,500,1.748,501,1.748,502,1.748,503,1.748,504,4.23,505,1.748,506,1.748,507,1.748,508,2.698,509,2.698,510,3.704,511,1.748,512,1.748,513,1.748,514,1.748,515,4.23,516,1.748,517,2.698,518,1.748,519,3.704,520,1.748,521,1.748,522,1.748,523,1.748,524,2.698,525,3.704,526,3.295,527,1.748,528,1.748,529,4.23,530,1.748,531,3.704,532,1.748,533,1.748,534,2.698,535,2.698,536,1.748,537,1.748,538,1.748,539,1.748,540,1.748,541,1.748,542,1.748,543,2.698,544,1.748,545,1.748,546,1.748,547,1.748,548,1.748,549,2.698,550,4.003,551,1.748,552,1.748,553,1.748,554,1.748,555,1.748,556,2.698,557,1.748,558,1.748,559,1.748,560,1.748,561,2.185,562,1.748,563,3.295,564,3.295,565,1.748,566,1.748,567,1.748,568,1.748,569,1.748,570,3.704,571,1.748,572,1.748,573,1.748,574,2.698,575,2.698,576,1.748,577,3.295,578,1.748,579,2.698,580,1.748,581,1.748,582,1.748,583,1.748,584,1.748,585,1.748,586,2.698,587,1.748,588,1.748,589,1.748,590,1.748,591,1.748,592,2.698,593,1.748,594,1.748,595,1.748,596,1.748,597,1.748,598,1.748,599,1.748,600,1.748,601,1.748,602,1.748,603,1.748,604,1.748,605,1.748,606,1.748,607,1.748,608,2.698,609,1.748,610,3.704,611,1.748,612,2.698,613,1.748,614,2.698,615,2.698,616,1.748,617,1.748,618,1.748,619,1.748,620,1.748,621,1.748,622,1.748,623,1.748,624,2.698,625,2.698,626,2.698,627,1.748,628,1.748,629,1.748,630,1.416,631,1.748,632,1.748,633,1.748,634,2.698,635,1.748,636,1.748,637,1.748,638,1.748,639,1.748,640,1.748,641,1.748,642,1.748,643,2.698,644,2.698,645,1.748,646,1.748,647,1.748,648,1.748,649,1.748,650,1.748,651,2.698,652,1.748,653,1.748,654,1.748,655,1.748,656,2.698,657,1.748,658,2.698,659,1.748,660,2.698,661,1.748,662,1.748,663,1.748,664,1.748,665,2.698,666,2.698,667,1.748,668,1.748,669,1.748,670,1.748,671,1.748,672,1.748,673,1.748,674,1.748,675,1.748,676,1.416,677,3.295,678,1.748,679,2.698,680,2.698,681,1.748,682,1.748,683,1.748,684,1.748,685,1.748,686,1.748,687,1.748,688,1.748,689,1.748,690,1.748,691,1.748,692,1.748,693,1.748,694,1.748,695,1.748,696,1.748,697,1.748,698,1.748,699,2.698,700,1.748,701,1.748,702,1.748,703,1.748,704,1.748,705,1.748,706,1.748,707,1.748,708,1.748,709,1.748,710,1.748,711,1.748,712,1.748,713,1.748,714,1.748,715,1.748,716,1.748,717,1.748,718,1.748,719,1.748,720,1.748,721,1.748,722,1.748]],["title/modules.html",[2,1.34]],["body/modules.html",[1,2.405,2,1.441,11,2.101,12,0.041,13,2.101,14,2.101,15,2.101,32,0.035,33,0.041,34,0.035,561,3.903,723,5.135,724,5.135,725,5.135,726,5.419,727,4.82]],["title/overview.html",[728,3.065]],["body/overview.html",[0,0.845,1,3.266,2,1.239,3,1.588,4,2.067,5,2.067,6,1.402,7,1.806,8,1.806,9,2.833,10,2.833,11,2.602,12,0.047,13,2.48,14,2.736,15,2.48,16,2.597,17,1.806,18,2.067,32,0.03,33,0.038,34,0.03,36,1.588,120,2.833,121,2.833,122,2.288,131,2.067,155,1.806,160,1.905,211,3.559,323,2.833,324,2.833,325,2.833,728,2.833,729,3.499,730,2.833]],["title/miscellaneous/variables.html",[467,1.379,731,2.709]],["body/miscellaneous/variables.html",[12,0.049,27,0.914,29,1.07,32,0.02,33,0.028,34,0.02,35,1.363,37,1.579,38,0.485,88,2.659,89,2.552,91,1.017,125,2.511,134,1.712,136,2.271,137,2.271,138,2.271,139,2.659,140,1.96,141,2.271,157,1.363,160,0.817,161,1.047,175,2.271,186,2.659,190,2.686,192,2.686,199,1.867,212,1.363,213,1.579,242,2.659,269,1.363,270,1.579,299,2.659,355,1.363,356,1.579,385,2.659,387,2.271,412,2.271,428,1.867,429,2.686,430,3.146,431,2.686,432,1.579,433,2.271,435,2.686,437,1.867,438,1.867,467,1.363,470,1.867,472,1.867,478,1.867,630,2.686,676,1.867,730,2.686,731,1.867,732,4.502,733,2.306,734,2.306,735,2.306,736,2.306,737,2.306,738,2.306,739,5.275,740,5.275,741,2.306,742,3.317,743,2.306,744,2.306,745,2.306,746,2.306,747,3.317,748,3.317,749,2.306,750,3.317,751,2.306,752,2.306,753,2.306,754,3.317,755,2.306,756,2.306,757,2.306,758,2.306,759,3.317,760,3.317,761,2.306,762,3.317,763,3.317,764,3.317,765,4.249,766,3.317,767,3.317,768,3.317,769,2.306,770,2.306,771,2.306,772,2.306,773,2.306,774,2.306,775,3.317,776,2.306,777,2.306]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":730,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1.2.6",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["1.7.8",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":650,"title":{},"body":{"index.html":{}}}],["15.3.0",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["2.16.1",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":208,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["20_000_000",{"_index":207,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["2592000",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":729,"title":{},"body":{"overview.html":{}}}],["30",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3600",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":211,"title":{},"body":{"injectables/GqlConfigService.html":{},"overview.html":{}}}],["5432",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5445",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.2.0",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["7.4.4",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["7.6.0",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["7080",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":574,"title":{},"body":{"index.html":{}}}],["add",{"_index":545,"title":{},"body":{"index.html":{}}}],["adds",{"_index":684,"title":{},"body":{"index.html":{}}}],["algorithm",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["all_type_defs",{"_index":186,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alleviate",{"_index":593,"title":{},"body":{"index.html":{}}}],["allow",{"_index":644,"title":{},"body":{"index.html":{}}}],["alpine",{"_index":701,"title":{},"body":{"index.html":{}}}],["ambitions",{"_index":531,"title":{},"body":{"index.html":{}}}],["angular",{"_index":486,"title":{},"body":{"index.html":{}}}],["api",{"_index":529,"title":{},"body":{"index.html":{}}}],["apollo",{"_index":451,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["apollo:watch",{"_index":522,"title":{},"body":{"index.html":{}}}],["apolloclient",{"_index":579,"title":{},"body":{"index.html":{}}}],["apollolink",{"_index":582,"title":{},"body":{"index.html":{}}}],["app",{"_index":709,"title":{},"body":{"index.html":{}}}],["application",{"_index":623,"title":{},"body":{"index.html":{}}}],["applications",{"_index":675,"title":{},"body":{"index.html":{}}}],["applied",{"_index":708,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":555,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":704,"title":{},"body":{"index.html":{}}}],["apps/.../comment.ts",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../context.ts",{"_index":470,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../group.ts",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../index.ts",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../post.ts",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../prisma",{"_index":471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../user.ts",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../write",{"_index":472,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app/config/config.module.ts",{"_index":123,"title":{},"body":{"modules/ConfigModule.html":{}}}],["apps/api/src/app/config/config.service.ts",{"_index":132,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/context.ts",{"_index":157,"title":{},"body":{"interfaces/Context.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/gql",{"_index":177,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/prisma",{"_index":425,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts",{"_index":37,"title":{},"body":{"classes/CommentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:23",{"_index":72,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:28",{"_index":68,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:33",{"_index":70,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:38",{"_index":56,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:43",{"_index":76,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:48",{"_index":65,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:53",{"_index":78,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:58",{"_index":63,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:63",{"_index":74,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts",{"_index":213,"title":{},"body":{"classes/GroupResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:23",{"_index":234,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:28",{"_index":230,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:33",{"_index":232,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:38",{"_index":224,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:43",{"_index":238,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:48",{"_index":228,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:53",{"_index":240,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:58",{"_index":226,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:63",{"_index":236,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/index.ts",{"_index":428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts",{"_index":270,"title":{},"body":{"classes/PostResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:23",{"_index":291,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:28",{"_index":287,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:33",{"_index":289,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:38",{"_index":281,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:43",{"_index":295,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:48",{"_index":285,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:53",{"_index":297,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:58",{"_index":283,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:63",{"_index":293,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts",{"_index":356,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:23",{"_index":377,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:28",{"_index":373,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:33",{"_index":375,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:38",{"_index":367,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:43",{"_index":381,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:48",{"_index":371,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:53",{"_index":383,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:58",{"_index":369,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:63",{"_index":379,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/write",{"_index":432,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/zen",{"_index":409,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["apps/api/src/app/jwt/jwt.module.ts",{"_index":266,"title":{},"body":{"modules/JwtModule.html":{}}}],["apps/api/src/app/prisma/prisma.module.ts",{"_index":326,"title":{},"body":{"modules/PrismaModule.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts",{"_index":328,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:11",{"_index":340,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:16",{"_index":342,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:20",{"_index":341,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:6",{"_index":335,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/environments/environment.base.ts",{"_index":164,"title":{},"body":{"classes/EnvironmentBase.html":{},"coverage.html":{}}}],["apps/api/src/environments/environment.base.ts:10",{"_index":169,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:11",{"_index":168,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:12",{"_index":171,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:13",{"_index":165,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:5",{"_index":170,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:6",{"_index":166,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:7",{"_index":167,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":439,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["args",{"_index":51,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["args.ts",{"_index":426,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["async",{"_index":40,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["authentication",{"_index":610,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":639,"title":{},"body":{"index.html":{}}}],["auto",{"_index":565,"title":{},"body":{"index.html":{}}}],["available",{"_index":561,"title":{},"body":{"index.html":{},"modules.html":{}}}],["await",{"_index":351,"title":{},"body":{"injectables/PrismaService.html":{}}}],["base",{"_index":703,"title":{},"body":{"index.html":{}}}],["based",{"_index":642,"title":{},"body":{"index.html":{}}}],["batching",{"_index":584,"title":{},"body":{"index.html":{}}}],["becomes",{"_index":560,"title":{},"body":{"index.html":{}}}],["being",{"_index":707,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":96,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{}}}],["browse",{"_index":726,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":723,"title":{},"body":{"modules.html":{}}}],["built",{"_index":484,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":549,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":546,"title":{},"body":{"index.html":{}}}],["case",{"_index":534,"title":{},"body":{"index.html":{}}}],["cd",{"_index":514,"title":{},"body":{"index.html":{}}}],["change",{"_index":631,"title":{},"body":{"index.html":{}}}],["choice",{"_index":664,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":661,"title":{},"body":{"index.html":{}}}],["class",{"_index":31,"title":{"classes/CommentResolver.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["classes",{"_index":36,"title":{},"body":{"classes/CommentResolver.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["clear",{"_index":719,"title":{},"body":{"index.html":{}}}],["client",{"_index":533,"title":{},"body":{"index.html":{}}}],["clone",{"_index":511,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":120,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":121,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":323,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":324,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":325,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["code",{"_index":570,"title":{},"body":{"index.html":{}}}],["command",{"_index":527,"title":{},"body":{"index.html":{}}}],["comment",{"_index":93,"title":{},"body":{"classes/CommentResolver.html":{}}}],["commentresolver",{"_index":35,"title":{"classes/CommentResolver.html":{}},"body":{"classes/CommentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commenttypedef",{"_index":88,"title":{},"body":{"classes/CommentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["completion",{"_index":566,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":721,"title":{},"body":{"index.html":{}}}],["component",{"_index":671,"title":{},"body":{"index.html":{}}}],["components",{"_index":658,"title":{},"body":{"index.html":{}}}],["compose",{"_index":516,"title":{},"body":{"index.html":{}}}],["config",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"injectables/GqlConfigService.html":{}}}],["config.service",{"_index":127,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ZenGraphQLModule.html":{}}}],["config.service.ts",{"_index":178,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{}}}],["config.service.ts:12",{"_index":183,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["config.service.ts:9",{"_index":182,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["configmodule",{"_index":11,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":122,"title":{"injectables/ConfigService.html":{}},"body":{"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["configuration",{"_index":578,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":706,"title":{},"body":{"index.html":{}}}],["congestion",{"_index":595,"title":{},"body":{"index.html":{}}}],["console",{"_index":680,"title":{},"body":{"index.html":{}}}],["const",{"_index":87,"title":{},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["constructor",{"_index":180,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}}}],["constructor(@optional",{"_index":348,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(config",{"_index":181,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["constructor(options",{"_index":333,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(private",{"_index":188,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["container",{"_index":656,"title":{},"body":{"index.html":{}}}],["containerized",{"_index":698,"title":{},"body":{"index.html":{}}}],["content",{"_index":636,"title":{},"body":{"index.html":{}}}],["context",{"_index":52,"title":{"interfaces/Context.html":{}},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["contributing",{"_index":502,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":715,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":495,"title":{},"body":{"index.html":{}}}],["control",{"_index":643,"title":{},"body":{"index.html":{}}}],["conveniences",{"_index":687,"title":{},"body":{"index.html":{}}}],["convert",{"_index":554,"title":{},"body":{"index.html":{}}}],["cookiedomain",{"_index":136,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":552,"title":{},"body":{"index.html":{}}}],["cors",{"_index":198,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["coverage",{"_index":415,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcontext",{"_index":163,"title":{},"body":{"interfaces/Context.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["creategqloptions",{"_index":179,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["createonecomment",{"_index":41,"title":{},"body":{"classes/CommentResolver.html":{}}}],["createonecomment(@parent",{"_index":108,"title":{},"body":{"classes/CommentResolver.html":{}}}],["createonecomment(parent",{"_index":50,"title":{},"body":{"classes/CommentResolver.html":{}}}],["createonegroup",{"_index":214,"title":{},"body":{"classes/GroupResolver.html":{}}}],["createonegroup(@parent",{"_index":254,"title":{},"body":{"classes/GroupResolver.html":{}}}],["createonegroup(parent",{"_index":223,"title":{},"body":{"classes/GroupResolver.html":{}}}],["createonepost",{"_index":271,"title":{},"body":{"classes/PostResolver.html":{}}}],["createonepost(@parent",{"_index":311,"title":{},"body":{"classes/PostResolver.html":{}}}],["createonepost(parent",{"_index":280,"title":{},"body":{"classes/PostResolver.html":{}}}],["createoneuser",{"_index":357,"title":{},"body":{"classes/UserResolver.html":{}}}],["createoneuser(@parent",{"_index":397,"title":{},"body":{"classes/UserResolver.html":{}}}],["createoneuser(parent",{"_index":366,"title":{},"body":{"classes/UserResolver.html":{}}}],["creation",{"_index":614,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":200,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["css",{"_index":662,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":202,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["ctx.connection",{"_index":203,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["ctx.connection.context",{"_index":204,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["currently",{"_index":492,"title":{},"body":{"index.html":{}}}],["d",{"_index":518,"title":{},"body":{"index.html":{}}}],["database",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debounce",{"_index":589,"title":{},"body":{"index.html":{}}}],["debug",{"_index":193,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["declarative",{"_index":645,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":53,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["default",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":55,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["deletemanycomment",{"_index":42,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deletemanycomment(@parent",{"_index":116,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deletemanycomment(parent",{"_index":62,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deletemanygroup",{"_index":215,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deletemanygroup(@parent",{"_index":262,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deletemanygroup(parent",{"_index":225,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deletemanypost",{"_index":272,"title":{},"body":{"classes/PostResolver.html":{}}}],["deletemanypost(@parent",{"_index":319,"title":{},"body":{"classes/PostResolver.html":{}}}],["deletemanypost(parent",{"_index":282,"title":{},"body":{"classes/PostResolver.html":{}}}],["deletemanyuser",{"_index":358,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletemanyuser(@parent",{"_index":405,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletemanyuser(parent",{"_index":368,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteonecomment",{"_index":43,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deleteonecomment(@parent",{"_index":112,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deleteonecomment(parent",{"_index":64,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deleteonegroup",{"_index":216,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deleteonegroup(@parent",{"_index":258,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deleteonegroup(parent",{"_index":227,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deleteonepost",{"_index":273,"title":{},"body":{"classes/PostResolver.html":{}}}],["deleteonepost(@parent",{"_index":315,"title":{},"body":{"classes/PostResolver.html":{}}}],["deleteonepost(parent",{"_index":284,"title":{},"body":{"classes/PostResolver.html":{}}}],["deleteoneuser",{"_index":359,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteoneuser(@parent",{"_index":401,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteoneuser(parent",{"_index":370,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletion",{"_index":548,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":637,"title":{},"body":{"index.html":{}}}],["depth=1",{"_index":513,"title":{},"body":{"index.html":{}}}],["designed",{"_index":617,"title":{},"body":{"index.html":{}}}],["dev",{"_index":676,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["developer",{"_index":686,"title":{},"body":{"index.html":{}}}],["development",{"_index":494,"title":{},"body":{"index.html":{}}}],["directives",{"_index":634,"title":{},"body":{"index.html":{}}}],["directly",{"_index":556,"title":{},"body":{"index.html":{}}}],["docker",{"_index":510,"title":{},"body":{"index.html":{}}}],["docs",{"_index":487,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":416,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["ecosystem",{"_index":690,"title":{},"body":{"index.html":{}}}],["enable",{"_index":564,"title":{},"body":{"index.html":{}}}],["enable/disable",{"_index":580,"title":{},"body":{"index.html":{}}}],["enabling",{"_index":602,"title":{},"body":{"index.html":{}}}],["enforced",{"_index":710,"title":{},"body":{"index.html":{}}}],["environment",{"_index":125,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentbase",{"_index":134,"title":{"classes/EnvironmentBase.html":{}},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentbase:10",{"_index":151,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:11",{"_index":149,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:12",{"_index":153,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:13",{"_index":143,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:5",{"_index":152,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:6",{"_index":145,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:7",{"_index":147,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environments/environment",{"_index":126,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{}}}],["environments/environment.base",{"_index":154,"title":{},"body":{"injectables/ConfigService.html":{}}}],["exclude",{"_index":670,"title":{},"body":{"index.html":{}}}],["execwritefile",{"_index":435,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["express",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["expressport",{"_index":137,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["extend",{"_index":90,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["extends",{"_index":133,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PrismaService.html":{}}}],["extension",{"_index":524,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":681,"title":{},"body":{"index.html":{}}}],["false",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feature",{"_index":559,"title":{},"body":{"index.html":{}}}],["features",{"_index":550,"title":{},"body":{"index.html":{}}}],["file",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["files",{"_index":604,"title":{},"body":{"index.html":{}}}],["filter(x",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtering",{"_index":536,"title":{},"body":{"index.html":{}}}],["findmanycomment",{"_index":44,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycomment(@parent",{"_index":104,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycomment(parent",{"_index":66,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycommentcount",{"_index":45,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycommentcount(@parent",{"_index":106,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycommentcount(parent",{"_index":69,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanygroup",{"_index":217,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroup(@parent",{"_index":250,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroup(parent",{"_index":229,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroupcount",{"_index":218,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroupcount(@parent",{"_index":252,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroupcount(parent",{"_index":231,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanypost",{"_index":274,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypost(@parent",{"_index":307,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypost(parent",{"_index":286,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypostcount",{"_index":275,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypostcount(@parent",{"_index":309,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypostcount(parent",{"_index":288,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanyuser",{"_index":360,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyuser(@parent",{"_index":393,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyuser(parent",{"_index":372,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount",{"_index":361,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount(@parent",{"_index":395,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount(parent",{"_index":374,"title":{},"body":{"classes/UserResolver.html":{}}}],["findonecomment",{"_index":46,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findonecomment(@parent",{"_index":100,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findonecomment(parent",{"_index":71,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findonegroup",{"_index":219,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findonegroup(@parent",{"_index":248,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findonegroup(parent",{"_index":233,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findonepost",{"_index":276,"title":{},"body":{"classes/PostResolver.html":{}}}],["findonepost(@parent",{"_index":305,"title":{},"body":{"classes/PostResolver.html":{}}}],["findonepost(parent",{"_index":290,"title":{},"body":{"classes/PostResolver.html":{}}}],["findoneuser",{"_index":362,"title":{},"body":{"classes/UserResolver.html":{}}}],["findoneuser(@parent",{"_index":391,"title":{},"body":{"classes/UserResolver.html":{}}}],["findoneuser(parent",{"_index":376,"title":{},"body":{"classes/UserResolver.html":{}}}],["fine",{"_index":646,"title":{},"body":{"index.html":{}}}],["first",{"_index":626,"title":{},"body":{"index.html":{}}}],["form",{"_index":601,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":711,"title":{},"body":{"index.html":{}}}],["free",{"_index":544,"title":{},"body":{"index.html":{}}}],["full",{"_index":480,"title":{},"body":{"index.html":{}}}],["function",{"_index":162,"title":{},"body":{"interfaces/Context.html":{},"coverage.html":{}}}],["functions",{"_index":468,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":532,"title":{},"body":{"index.html":{}}}],["generate",{"_index":722,"title":{},"body":{"index.html":{}}}],["generation",{"_index":563,"title":{},"body":{"index.html":{}}}],["getting",{"_index":476,"title":{"index.html":{}},"body":{}}],["git",{"_index":499,"title":{},"body":{"index.html":{}}}],["github",{"_index":488,"title":{},"body":{"index.html":{}}}],["give",{"_index":597,"title":{},"body":{"index.html":{}}}],["global",{"_index":124,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{}}}],["gql",{"_index":81,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["gqlconfigservice",{"_index":176,"title":{"injectables/GqlConfigService.html":{}},"body":{"injectables/GqlConfigService.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["gqlmoduleoptions",{"_index":184,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["gqloptionsfactory",{"_index":185,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["grained",{"_index":647,"title":{},"body":{"index.html":{}}}],["graph",{"_index":727,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["graphql.module.ts",{"_index":410,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["graphql_schema",{"_index":429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":411,"title":{},"body":{"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["graphqlmodule.forrootasync",{"_index":413,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["graphqlupload",{"_index":605,"title":{},"body":{"index.html":{}}}],["greatly",{"_index":674,"title":{},"body":{"index.html":{}}}],["grid",{"_index":668,"title":{},"body":{"index.html":{}}}],["group",{"_index":244,"title":{},"body":{"classes/GroupResolver.html":{}}}],["groupresolver",{"_index":212,"title":{"classes/GroupResolver.html":{}},"body":{"classes/GroupResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grouptypedef",{"_index":242,"title":{},"body":{"classes/GroupResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["guaranteeing",{"_index":714,"title":{},"body":{"index.html":{}}}],["guards",{"_index":633,"title":{},"body":{"index.html":{}}}],["gui",{"_index":682,"title":{},"body":{"index.html":{}}}],["helps",{"_index":592,"title":{},"body":{"index.html":{}}}],["horizontal",{"_index":655,"title":{},"body":{"index.html":{}}}],["host",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hs256",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":598,"title":{},"body":{"index.html":{}}}],["httpbatchlink",{"_index":583,"title":{},"body":{"index.html":{}}}],["https://github.com/zensoftware/zen.git",{"_index":512,"title":{},"body":{"index.html":{}}}],["ide",{"_index":693,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":699,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":551,"title":{},"body":{"index.html":{}}}],["implements",{"_index":187,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/JwtModule.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["index",{"_index":38,"title":{"index.html":{}},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["inherited",{"_index":142,"title":{},"body":{"injectables/ConfigService.html":{}}}],["injectable",{"_index":130,"title":{"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["injectables",{"_index":131,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{},"overview.html":{}}}],["insensitive",{"_index":535,"title":{},"body":{"index.html":{}}}],["installsubscriptionhandlers",{"_index":191,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["instructions",{"_index":506,"title":{},"body":{"index.html":{}}}],["int",{"_index":95,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["integration",{"_index":613,"title":{},"body":{"index.html":{}}}],["interested",{"_index":501,"title":{},"body":{"index.html":{}}}],["interface",{"_index":155,"title":{"interfaces/Context.html":{}},"body":{"interfaces/Context.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaces",{"_index":156,"title":{},"body":{"interfaces/Context.html":{},"index.html":{}}}],["interval",{"_index":590,"title":{},"body":{"index.html":{}}}],["introspection",{"_index":196,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["issue",{"_index":500,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":652,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["jwtmodule",{"_index":13,"title":{"modules/JwtModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JwtModule.html":{},"modules.html":{},"overview.html":{}}}],["jwtmoduleoptions",{"_index":148,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["jwtoptions",{"_index":138,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["keeping",{"_index":654,"title":{},"body":{"index.html":{}}}],["language",{"_index":691,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["legibility",{"_index":720,"title":{},"body":{"index.html":{}}}],["literal",{"_index":146,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["localhost",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":615,"title":{},"body":{"index.html":{}}}],["lot",{"_index":685,"title":{},"body":{"index.html":{}}}],["makeexecutableschema",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management",{"_index":678,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":665,"title":{},"body":{"index.html":{}}}],["maxfiles",{"_index":210,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["maxfilesize",{"_index":206,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["mb",{"_index":209,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["merge",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["mergetypes([prisma_type_defs",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":39,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["miscellaneous",{"_index":467,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":673,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":625,"title":{},"body":{"index.html":{}}}],["modern",{"_index":479,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["monorepos",{"_index":683,"title":{},"body":{"index.html":{}}}],["multi",{"_index":599,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":54,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["mutations",{"_index":649,"title":{},"body":{"index.html":{}}}],["n+1",{"_index":541,"title":{},"body":{"index.html":{}}}],["name",{"_index":58,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":485,"title":{},"body":{"index.html":{}}}],["nest_resolvers",{"_index":412,"title":{},"body":{"modules/ZenGraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nest_type_defs",{"_index":430,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":80,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":172,"title":{},"body":{"classes/EnvironmentBase.html":{},"modules/JwtModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["nestjwtmodule",{"_index":267,"title":{},"body":{"modules/JwtModule.html":{}}}],["nestjwtmodule.register(environment.jwtoptions",{"_index":268,"title":{},"body":{"modules/JwtModule.html":{}}}],["network",{"_index":594,"title":{},"body":{"index.html":{}}}],["new",{"_index":161,"title":{},"body":{"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":508,"title":{},"body":{"index.html":{}}}],["node:14",{"_index":700,"title":{},"body":{"index.html":{}}}],["npm",{"_index":515,"title":{},"body":{"index.html":{}}}],["null",{"_index":89,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":144,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["nx",{"_index":677,"title":{},"body":{"index.html":{}}}],["occur",{"_index":587,"title":{},"body":{"index.html":{}}}],["official",{"_index":558,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":330,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ondelete(args",{"_index":338,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ondeleteargs",{"_index":339,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduledestroy",{"_index":331,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":332,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":498,"title":{},"body":{"index.html":{}}}],["optional",{"_index":59,"title":{},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":336,"title":{},"body":{"injectables/PrismaService.html":{}}}],["origin",{"_index":201,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["out",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["outpath",{"_index":475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["over",{"_index":608,"title":{},"body":{"index.html":{}}}],["overview",{"_index":728,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":442,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":622,"title":{},"body":{"index.html":{}}}],["palette",{"_index":528,"title":{},"body":{"index.html":{}}}],["paljs/plugins",{"_index":345,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["parameters",{"_index":57,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":60,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["part",{"_index":600,"title":{},"body":{"index.html":{}}}],["password",{"_index":630,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":611,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":638,"title":{},"body":{"index.html":{}}}],["pg",{"_index":174,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["playground",{"_index":175,"title":{},"body":{"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["poolconfig",{"_index":173,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["port",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portal",{"_index":483,"title":{},"body":{"index.html":{}}}],["post",{"_index":301,"title":{},"body":{"classes/PostResolver.html":{}}}],["postgres",{"_index":139,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["postgresqlconfig",{"_index":150,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["postresolver",{"_index":269,"title":{"classes/PostResolver.html":{}},"body":{"classes/PostResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["posttypedef",{"_index":299,"title":{},"body":{"classes/PostResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["predictable",{"_index":717,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":712,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":327,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":346,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/comment/resolvers",{"_index":86,"title":{},"body":{"classes/CommentResolver.html":{}}}],["prisma/group/resolvers",{"_index":241,"title":{},"body":{"classes/GroupResolver.html":{}}}],["prisma/post/resolvers",{"_index":298,"title":{},"body":{"classes/PostResolver.html":{}}}],["prisma/user/resolvers",{"_index":384,"title":{},"body":{"classes/UserResolver.html":{}}}],["prisma:save",{"_index":520,"title":{},"body":{"index.html":{}}}],["prisma_schema",{"_index":431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma_type_defs",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":329,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientoptions",{"_index":334,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete",{"_index":344,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prismadelete(this",{"_index":350,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete.ondelete(args",{"_index":352,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":14,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaselect",{"_index":539,"title":{},"body":{"index.html":{}}}],["prismaselectargs",{"_index":83,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["prismaselectargs(info",{"_index":103,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["prismaservice",{"_index":160,"title":{"injectables/PrismaService.html":{}},"body":{"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["privatekey",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["problem",{"_index":542,"title":{},"body":{"index.html":{}}}],["process.env.jwt_private_key",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_public_key",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.pgpassword",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.pguser",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":140,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":504,"title":{},"body":{"index.html":{}}}],["promisify(fs.writefile",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":135,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{}}}],["provide",{"_index":128,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["publickey",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queries",{"_index":543,"title":{},"body":{"index.html":{}}}],["query",{"_index":67,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["querying",{"_index":537,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":189,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["really",{"_index":591,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["releases",{"_index":697,"title":{},"body":{"index.html":{}}}],["reload",{"_index":530,"title":{},"body":{"index.html":{}}}],["remembermeexpiresin",{"_index":141,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["replicas",{"_index":657,"title":{},"body":{"index.html":{}}}],["repo",{"_index":489,"title":{},"body":{"index.html":{}}}],["req",{"_index":158,"title":{},"body":{"interfaces/Context.html":{},"injectables/GqlConfigService.html":{}}}],["requests",{"_index":586,"title":{},"body":{"index.html":{}}}],["requirements",{"_index":507,"title":{},"body":{"index.html":{}}}],["res",{"_index":159,"title":{},"body":{"interfaces/Context.html":{}}}],["reset",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"index.html":{},"overview.html":{}}}],["resolver",{"_index":79,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["resolver('comment",{"_index":99,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolver('group",{"_index":247,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolver('post",{"_index":304,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolver('user",{"_index":390,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers",{"_index":85,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["resolvers.mutation.createonecomment(parent",{"_index":109,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.createonegroup(parent",{"_index":255,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.createonepost(parent",{"_index":312,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.createoneuser(parent",{"_index":398,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.deletemanycomment(parent",{"_index":117,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.deletemanygroup(parent",{"_index":263,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.deletemanypost(parent",{"_index":320,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.deletemanyuser(parent",{"_index":406,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.deleteonecomment(parent",{"_index":113,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.deleteonegroup(parent",{"_index":259,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.deleteonepost(parent",{"_index":316,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.deleteoneuser(parent",{"_index":402,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.updatemanycomment(parent",{"_index":119,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.updatemanygroup(parent",{"_index":265,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.updatemanypost(parent",{"_index":322,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.updatemanyuser(parent",{"_index":408,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.updateonecomment(parent",{"_index":111,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.updateonegroup(parent",{"_index":257,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.updateonepost(parent",{"_index":314,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.updateoneuser(parent",{"_index":400,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.upsertonecomment(parent",{"_index":115,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.upsertonegroup(parent",{"_index":261,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.upsertonepost(parent",{"_index":318,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.upsertoneuser(parent",{"_index":404,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findmanycomment(parent",{"_index":105,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.query.findmanycommentcount(parent",{"_index":107,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.query.findmanygroup(parent",{"_index":251,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.query.findmanygroupcount(parent",{"_index":253,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.query.findmanypost(parent",{"_index":308,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.query.findmanypostcount(parent",{"_index":310,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.query.findmanyuser(parent",{"_index":394,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findmanyusercount(parent",{"_index":396,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findonecomment(parent",{"_index":102,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.query.findonegroup(parent",{"_index":249,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.query.findonepost(parent",{"_index":306,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.query.findoneuser(parent",{"_index":392,"title":{},"body":{"classes/UserResolver.html":{}}}],["responsive",{"_index":624,"title":{},"body":{"index.html":{}}}],["result",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":101,"title":{},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["returns",{"_index":61,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":641,"title":{},"body":{"index.html":{}}}],["route",{"_index":632,"title":{},"body":{"index.html":{}}}],["rs256",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":519,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["safe",{"_index":573,"title":{},"body":{"index.html":{}}}],["samplecommentfield",{"_index":97,"title":{},"body":{"classes/CommentResolver.html":{}}}],["samplecommentmutation(args",{"_index":94,"title":{},"body":{"classes/CommentResolver.html":{}}}],["samplecommentquery",{"_index":92,"title":{},"body":{"classes/CommentResolver.html":{}}}],["samplegroupfield",{"_index":246,"title":{},"body":{"classes/GroupResolver.html":{}}}],["samplegroupmutation(args",{"_index":245,"title":{},"body":{"classes/GroupResolver.html":{}}}],["samplegroupquery",{"_index":243,"title":{},"body":{"classes/GroupResolver.html":{}}}],["samplepostfield",{"_index":303,"title":{},"body":{"classes/PostResolver.html":{}}}],["samplepostmutation(args",{"_index":302,"title":{},"body":{"classes/PostResolver.html":{}}}],["samplepostquery",{"_index":300,"title":{},"body":{"classes/PostResolver.html":{}}}],["sampleuserfield",{"_index":389,"title":{},"body":{"classes/UserResolver.html":{}}}],["sampleusermutation(args",{"_index":388,"title":{},"body":{"classes/UserResolver.html":{}}}],["sampleuserquery",{"_index":386,"title":{},"body":{"classes/UserResolver.html":{}}}],["sass",{"_index":660,"title":{},"body":{"index.html":{}}}],["scaling",{"_index":612,"title":{},"body":{"index.html":{}}}],["schema",{"_index":474,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["schema.ts",{"_index":433,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["schematics",{"_index":689,"title":{},"body":{"index.html":{}}}],["scope",{"_index":343,"title":{},"body":{"injectables/PrismaService.html":{}}}],["scope.request",{"_index":347,"title":{},"body":{"injectables/PrismaService.html":{}}}],["scripts",{"_index":695,"title":{},"body":{"index.html":{}}}],["sdl",{"_index":562,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["security",{"_index":648,"title":{},"body":{"index.html":{}}}],["select",{"_index":84,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":452,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":692,"title":{},"body":{"index.html":{}}}],["services",{"_index":571,"title":{},"body":{"index.html":{}}}],["set",{"_index":628,"title":{},"body":{"index.html":{}}}],["set_null",{"_index":547,"title":{},"body":{"index.html":{}}}],["setup",{"_index":505,"title":{},"body":{"index.html":{}}}],["several",{"_index":585,"title":{},"body":{"index.html":{}}}],["short",{"_index":588,"title":{},"body":{"index.html":{}}}],["show/hide",{"_index":635,"title":{},"body":{"index.html":{}}}],["side",{"_index":640,"title":{},"body":{"index.html":{}}}],["sign",{"_index":629,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":572,"title":{},"body":{"index.html":{}}}],["simplify",{"_index":577,"title":{},"body":{"index.html":{}}}],["single",{"_index":621,"title":{},"body":{"index.html":{}}}],["solve",{"_index":540,"title":{},"body":{"index.html":{}}}],["sort",{"_index":713,"title":{},"body":{"index.html":{}}}],["source",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["spa",{"_index":620,"title":{},"body":{"index.html":{}}}],["specifically",{"_index":618,"title":{},"body":{"index.html":{}}}],["stack",{"_index":481,"title":{},"body":{"index.html":{}}}],["standard",{"_index":627,"title":{},"body":{"index.html":{}}}],["standardized",{"_index":716,"title":{},"body":{"index.html":{}}}],["start:api",{"_index":521,"title":{},"body":{"index.html":{}}}],["started",{"_index":477,"title":{"index.html":{}},"body":{"index.html":{}}}],["startreload",{"_index":523,"title":{},"body":{"index.html":{}}}],["stateless",{"_index":651,"title":{},"body":{"index.html":{}}}],["statements",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":98,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["structure",{"_index":718,"title":{},"body":{"index.html":{}}}],["styles",{"_index":672,"title":{},"body":{"index.html":{}}}],["styling",{"_index":659,"title":{},"body":{"index.html":{}}}],["subscriptions",{"_index":607,"title":{},"body":{"index.html":{}}}],["super(options",{"_index":349,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":724,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":557,"title":{},"body":{"index.html":{}}}],["svc",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":725,"title":{},"body":{"modules.html":{}}}],["system",{"_index":616,"title":{},"body":{"index.html":{}}}],["table",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":82,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["team",{"_index":553,"title":{},"body":{"index.html":{}}}],["temp",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":538,"title":{},"body":{"index.html":{}}}],["theme",{"_index":666,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":353,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":354,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.config.graphql.playground",{"_index":195,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["this.config.production",{"_index":194,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["through",{"_index":669,"title":{},"body":{"index.html":{}}}],["tokens",{"_index":653,"title":{},"body":{"index.html":{}}}],["tool",{"_index":568,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":694,"title":{},"body":{"index.html":{}}}],["tools",{"_index":457,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["tracing",{"_index":197,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["transpiler",{"_index":663,"title":{},"body":{"index.html":{}}}],["true",{"_index":192,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.app.json",{"_index":705,"title":{},"body":{"index.html":{}}}],["type",{"_index":91,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typedefs",{"_index":190,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":199,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":493,"title":{},"body":{"index.html":{}}}],["up",{"_index":517,"title":{},"body":{"index.html":{}}}],["updatemanycomment",{"_index":47,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updatemanycomment(@parent",{"_index":118,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updatemanycomment(parent",{"_index":73,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updatemanygroup",{"_index":220,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updatemanygroup(@parent",{"_index":264,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updatemanygroup(parent",{"_index":235,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updatemanypost",{"_index":277,"title":{},"body":{"classes/PostResolver.html":{}}}],["updatemanypost(@parent",{"_index":321,"title":{},"body":{"classes/PostResolver.html":{}}}],["updatemanypost(parent",{"_index":292,"title":{},"body":{"classes/PostResolver.html":{}}}],["updatemanyuser",{"_index":363,"title":{},"body":{"classes/UserResolver.html":{}}}],["updatemanyuser(@parent",{"_index":407,"title":{},"body":{"classes/UserResolver.html":{}}}],["updatemanyuser(parent",{"_index":378,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateonecomment",{"_index":48,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updateonecomment(@parent",{"_index":110,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updateonecomment(parent",{"_index":75,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updateonegroup",{"_index":221,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updateonegroup(@parent",{"_index":256,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updateonegroup(parent",{"_index":237,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updateonepost",{"_index":278,"title":{},"body":{"classes/PostResolver.html":{}}}],["updateonepost(@parent",{"_index":313,"title":{},"body":{"classes/PostResolver.html":{}}}],["updateonepost(parent",{"_index":294,"title":{},"body":{"classes/PostResolver.html":{}}}],["updateoneuser",{"_index":364,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateoneuser(@parent",{"_index":399,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateoneuser(parent",{"_index":380,"title":{},"body":{"classes/UserResolver.html":{}}}],["uploading",{"_index":603,"title":{},"body":{"index.html":{}}}],["uploadlink",{"_index":596,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":205,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["upsertonecomment",{"_index":49,"title":{},"body":{"classes/CommentResolver.html":{}}}],["upsertonecomment(@parent",{"_index":114,"title":{},"body":{"classes/CommentResolver.html":{}}}],["upsertonecomment(parent",{"_index":77,"title":{},"body":{"classes/CommentResolver.html":{}}}],["upsertonegroup",{"_index":222,"title":{},"body":{"classes/GroupResolver.html":{}}}],["upsertonegroup(@parent",{"_index":260,"title":{},"body":{"classes/GroupResolver.html":{}}}],["upsertonegroup(parent",{"_index":239,"title":{},"body":{"classes/GroupResolver.html":{}}}],["upsertonepost",{"_index":279,"title":{},"body":{"classes/PostResolver.html":{}}}],["upsertonepost(@parent",{"_index":317,"title":{},"body":{"classes/PostResolver.html":{}}}],["upsertonepost(parent",{"_index":296,"title":{},"body":{"classes/PostResolver.html":{}}}],["upsertoneuser",{"_index":365,"title":{},"body":{"classes/UserResolver.html":{}}}],["upsertoneuser(@parent",{"_index":403,"title":{},"body":{"classes/UserResolver.html":{}}}],["upsertoneuser(parent",{"_index":382,"title":{},"body":{"classes/UserResolver.html":{}}}],["use",{"_index":679,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":414,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["used",{"_index":702,"title":{},"body":{"index.html":{}}}],["user",{"_index":387,"title":{},"body":{"classes/UserResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userresolver",{"_index":355,"title":{"classes/UserResolver.html":{}},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usertypedef",{"_index":385,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":129,"title":{},"body":{"modules/ConfigModule.html":{}}}],["using",{"_index":567,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":667,"title":{},"body":{"index.html":{}}}],["v14",{"_index":509,"title":{},"body":{"index.html":{}}}],["value",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":731,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":688,"title":{},"body":{"index.html":{}}}],["varying",{"_index":581,"title":{},"body":{"index.html":{}}}],["versioned",{"_index":696,"title":{},"body":{"index.html":{}}}],["via",{"_index":525,"title":{},"body":{"index.html":{}}}],["vs",{"_index":569,"title":{},"body":{"index.html":{}}}],["vscode",{"_index":526,"title":{},"body":{"index.html":{}}}],["web",{"_index":482,"title":{},"body":{"index.html":{}}}],["websocketlink",{"_index":606,"title":{},"body":{"index.html":{}}}],["websockets",{"_index":609,"title":{},"body":{"index.html":{}}}],["welcome!&#x1f331",{"_index":496,"title":{},"body":{"index.html":{}}}],["within",{"_index":575,"title":{},"body":{"index.html":{}}}],["work",{"_index":619,"title":{},"body":{"index.html":{}}}],["writegraphqlschema",{"_index":434,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["writegraphqlschema(outpath",{"_index":473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["x",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f367",{"_index":497,"title":{},"body":{"index.html":{}}}],["x1f370",{"_index":503,"title":{},"body":{"index.html":{}}}],["x1f380",{"_index":576,"title":{},"body":{"index.html":{}}}],["x1f939",{"_index":491,"title":{},"body":{"index.html":{}}}],["yes",{"_index":337,"title":{},"body":{"injectables/PrismaService.html":{}}}],["zen",{"_index":478,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["zenadmin",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zengraphqlmodule",{"_index":15,"title":{"modules/ZenGraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["zensoftware.ca",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zensoftware/zen",{"_index":490,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAppModule -->\n\nJwtModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nAppModule -->\n\nZenGraphQLModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            JwtModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ZenGraphQLModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigModule } from './config';\nimport { ZenGraphQLModule } from './graphql';\nimport { JwtModule } from './jwt';\nimport { PrismaModule } from './prisma';\n\n@Module({\n  imports: [ConfigModule, JwtModule, ZenGraphQLModule, PrismaModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentResolver.html":{"url":"classes/CommentResolver.html","title":"class - CommentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Comment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneComment\n                            \n                            \n                                    Async\n                                deleteManyComment\n                            \n                            \n                                    Async\n                                deleteOneComment\n                            \n                            \n                                    Async\n                                findManyComment\n                            \n                            \n                                    Async\n                                findManyCommentCount\n                            \n                            \n                                    Async\n                                findOneComment\n                            \n                            \n                                    Async\n                                updateManyComment\n                            \n                            \n                                    Async\n                                updateOneComment\n                            \n                            \n                                    Async\n                                upsertOneComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyCommentCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyCommentCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/Comment/resolvers';\n\nexport const CommentTypeDef = null;\n// export const CommentTypeDef = gql`\n//   extend type Query {\n//     sampleCommentQuery: Comment!\n//   }\n//   extend type Mutation {\n//     sampleCommentMutation(args: Int!): Boolean\n//   }\n//   extend type Comment {\n//     sampleCommentField: String\n//   }\n// `;\n\n@Resolver('Comment')\nexport class CommentResolver {\n  @Query()\n  async findOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyCommentCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyCommentCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyComment(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\nimport { environment } from '../../environments/environment';\nimport { ConfigService } from './config.service';\n\n@Global()\n@Module({\n  providers: [{ provide: ConfigService, useValue: environment }],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/config/config.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EnvironmentBase\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieDomain\n                            \n                            \n                                expressPort\n                            \n                            \n                                graphql\n                            \n                            \n                                jwtOptions\n                            \n                            \n                                postgres\n                            \n                            \n                                production\n                            \n                            \n                                rememberMeExpiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookieDomain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JwtModuleOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postgres\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PostgreSQLConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            production\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rememberMeExpiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:12\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { EnvironmentBase } from '../../environments/environment.base';\n\n@Injectable()\nexport class ConfigService extends EnvironmentBase {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Context.html":{"url":"interfaces/Context.html","title":"interface - Context","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Context\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/context.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        prisma\n                                \n                                \n                                            Optional\n                                        req\n                                \n                                \n                                            Optional\n                                        res\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        prisma\n                                    \n                                \n                                \n                                    \n                                        prisma:         PrismaService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PrismaService\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                    \n                                \n                                \n                                    \n                                        req:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        res\n                                    \n                                \n                                \n                                    \n                                        res:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PrismaService } from '../prisma';\n\nconst prisma = new PrismaService();\n\nexport interface Context {\n  req?: any;\n  res?: any;\n  prisma?: PrismaService;\n}\n\nexport function createContext(): Context {\n  return {\n    prisma,\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentBase.html":{"url":"classes/EnvironmentBase.html","title":"class - EnvironmentBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/environments/environment.base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieDomain\n                            \n                            \n                                expressPort\n                            \n                            \n                                graphql\n                            \n                            \n                                jwtOptions\n                            \n                            \n                                postgres\n                            \n                            \n                                production\n                            \n                            \n                                rememberMeExpiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookieDomain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JwtModuleOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postgres\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PostgreSQLConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            production\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rememberMeExpiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { JwtModuleOptions } from '@nestjs/jwt';\nimport { PoolConfig as PostgreSQLConfig } from 'pg';\n\nexport class EnvironmentBase {\n  production: boolean;\n  expressPort: string | number;\n  graphql: {\n    playground: boolean;\n  };\n  postgres: PostgreSQLConfig;\n  jwtOptions: JwtModuleOptions;\n  rememberMeExpiresIn: number;\n  cookieDomain: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlConfigService.html":{"url":"injectables/GqlConfigService.html","title":"injectable - GqlConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GqlConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/gql-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGqlOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/graphql/gql-config.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGqlOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGqlOptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/graphql/gql-config.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     GqlModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { GqlModuleOptions, GqlOptionsFactory } from '@nestjs/graphql';\n\nimport { ConfigService } from '../config';\nimport { PrismaService } from '../prisma';\nimport { ALL_TYPE_DEFS } from './resolvers';\n\n@Injectable()\nexport class GqlConfigService implements GqlOptionsFactory {\n  constructor(private readonly config: ConfigService) {}\n\n  createGqlOptions(): GqlModuleOptions {\n    return {\n      typeDefs: ALL_TYPE_DEFS,\n      installSubscriptionHandlers: true,\n      debug: !this.config.production,\n      playground: this.config.graphql.playground,\n      introspection: this.config.graphql.playground,\n      tracing: this.config.graphql.playground,\n      cors: this.config.production ? undefined : { credentials: true, origin: true },\n      context: ctx => {\n        return ctx.connection\n          ? { ...ctx, req: ctx.connection.context, prisma: new PrismaService() }\n          : { ...ctx, prisma: new PrismaService() };\n      },\n      uploads: {\n        maxFileSize: 20_000_000, // 20 MB\n        maxFiles: 5,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupResolver.html":{"url":"classes/GroupResolver.html","title":"class - GroupResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Group.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneGroup\n                            \n                            \n                                    Async\n                                deleteManyGroup\n                            \n                            \n                                    Async\n                                deleteOneGroup\n                            \n                            \n                                    Async\n                                findManyGroup\n                            \n                            \n                                    Async\n                                findManyGroupCount\n                            \n                            \n                                    Async\n                                findOneGroup\n                            \n                            \n                                    Async\n                                updateManyGroup\n                            \n                            \n                                    Async\n                                updateOneGroup\n                            \n                            \n                                    Async\n                                upsertOneGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyGroupCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyGroupCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/Group/resolvers';\n\nexport const GroupTypeDef = null;\n// export const GroupTypeDef = gql`\n//   extend type Query {\n//     sampleGroupQuery: Group!\n//   }\n//   extend type Mutation {\n//     sampleGroupMutation(args: Int!): Boolean\n//   }\n//   extend type Group {\n//     sampleGroupField: String\n//   }\n// `;\n\n@Resolver('Group')\nexport class GroupResolver {\n  @Query()\n  async findOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyGroupCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyGroupCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtModule.html":{"url":"modules/JwtModule.html","title":"module - JwtModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/jwt/jwt.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { JwtModule as NestJwtModule } from '@nestjs/jwt';\n\nimport { environment } from '../../environments/environment';\n\n@Global()\n@Module({\n  imports: [NestJwtModule.register(environment.jwtOptions)],\n  exports: [NestJwtModule],\n})\nexport class JwtModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PostResolver.html":{"url":"classes/PostResolver.html","title":"class - PostResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PostResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Post.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOnePost\n                            \n                            \n                                    Async\n                                deleteManyPost\n                            \n                            \n                                    Async\n                                deleteOnePost\n                            \n                            \n                                    Async\n                                findManyPost\n                            \n                            \n                                    Async\n                                findManyPostCount\n                            \n                            \n                                    Async\n                                findOnePost\n                            \n                            \n                                    Async\n                                updateManyPost\n                            \n                            \n                                    Async\n                                updateOnePost\n                            \n                            \n                                    Async\n                                upsertOnePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyPost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyPost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyPostCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyPostCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyPost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/Post/resolvers';\n\nexport const PostTypeDef = null;\n// export const PostTypeDef = gql`\n//   extend type Query {\n//     samplePostQuery: Post!\n//   }\n//   extend type Mutation {\n//     samplePostMutation(args: Int!): Boolean\n//   }\n//   extend type Post {\n//     samplePostField: String\n//   }\n// `;\n\n@Resolver('Post')\nexport class PostResolver {\n  @Query()\n  async findOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyPost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyPost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyPostCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyPostCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyPost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyPost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyPost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyPost(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/prisma/prisma.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/prisma/prisma.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onDelete\n                            \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: PrismaClientOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    PrismaClientOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDelete(args: onDeleteArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            onDeleteArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleDestroy, OnModuleInit, Optional, Scope } from '@nestjs/common';\nimport { PrismaDelete, onDeleteArgs } from '@paljs/plugins';\nimport { PrismaClient, PrismaClientOptions } from '@prisma/client';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n  constructor(@Optional() options?: PrismaClientOptions) {\n    super(options);\n  }\n\n  async onDelete(args: onDeleteArgs) {\n    const prismaDelete = new PrismaDelete(this);\n    await prismaDelete.onDelete(args);\n  }\n\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async onModuleDestroy() {\n    await this.$disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/User.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneUser\n                            \n                            \n                                    Async\n                                deleteManyUser\n                            \n                            \n                                    Async\n                                deleteOneUser\n                            \n                            \n                                    Async\n                                findManyUser\n                            \n                            \n                                    Async\n                                findManyUserCount\n                            \n                            \n                                    Async\n                                findOneUser\n                            \n                            \n                                    Async\n                                updateManyUser\n                            \n                            \n                                    Async\n                                updateOneUser\n                            \n                            \n                                    Async\n                                upsertOneUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyUserCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyUserCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/User/resolvers';\n\nexport const UserTypeDef = null;\n// export const UserTypeDef = gql`\n//   extend type Query {\n//     sampleUserQuery: User!\n//   }\n//   extend type Mutation {\n//     sampleUserMutation(args: Int!): Boolean\n//   }\n//   extend type User {\n//     sampleUserField: String\n//   }\n// `;\n\n@Resolver('User')\nexport class UserResolver {\n  @Query()\n  async findOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyUserCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyUserCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyUser(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZenGraphQLModule.html":{"url":"modules/ZenGraphQLModule.html","title":"module - ZenGraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    ZenGraphQLModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/graphql/zen-graphql.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\n\nimport { GqlConfigService } from './gql-config.service';\nimport { NEST_RESOLVERS } from './resolvers';\n\n@Global()\n@Module({\n  imports: [\n    GraphQLModule.forRootAsync({\n      useClass: GqlConfigService,\n    }),\n  ],\n  providers: [...NEST_RESOLVERS],\n})\nexport class ZenGraphQLModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            interface\n            Context\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            function\n            createContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/gql-config.service.ts\n            \n            injectable\n            GqlConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/prisma-select-args.ts\n            \n            function\n            PrismaSelectArgs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Comment.ts\n            \n            class\n            CommentResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Comment.ts\n            \n            variable\n            CommentTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Group.ts\n            \n            class\n            GroupResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Group.ts\n            \n            variable\n            GroupTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Post.ts\n            \n            class\n            PostResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Post.ts\n            \n            variable\n            PostTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/User.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/User.ts\n            \n            variable\n            UserTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            ALL_TYPE_DEFS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            GRAPHQL_SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            NEST_RESOLVERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            NEST_TYPE_DEFS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            PRISMA_SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/write-schema.ts\n            \n            function\n            WriteGraphQLSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/write-schema.ts\n            \n            variable\n            execWriteFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.base.ts\n            \n            class\n            EnvironmentBase\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.4.4\n        \n            @nestjs/core : ^7.4.4\n        \n            @nestjs/graphql : ^7.6.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/platform-express : ^7.4.4\n        \n            @paljs/plugins : ^1.2.6\n        \n            @prisma/client : ^2.6.2\n        \n            apollo-server-express : ^2.16.1\n        \n            dotenv : 6.2.0\n        \n            graphql : ^15.3.0\n        \n            graphql-tools : ^6.2.1\n        \n            merge-graphql-schemas : ^1.7.8\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~6.5.5\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createContext   (apps/.../context.ts)\n                        \n                        \n                            PrismaSelectArgs   (apps/.../prisma-select-args.ts)\n                        \n                        \n                            WriteGraphQLSchema   (apps/.../write-schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/api/src/app/graphql/context.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createContext\n                        \n                        \n                    \n                \n            \n            \n                \ncreateContext()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         Context\n\n                    \n                \n            \n        \n    \n    apps/api/src/app/graphql/prisma-select-args.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PrismaSelectArgs\n                        \n                        \n                    \n                \n            \n            \n                \nPrismaSelectArgs(info, args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/api/src/app/graphql/write-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            WriteGraphQLSchema\n                        \n                        \n                    \n                \n            \n            \n                \nWriteGraphQLSchema(outPath, schema)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n⛩ Zen ⛩\nModern Full Stack Web Portal built with Nest and Angular\nZen Docs\nGitHub repo ZenSoftware/Zen\n&#x1F939; Currently under development - New contributors are welcome!&#x1F331;\n&#x1F367; You may open a git issue if you are interested in contributing! &#x1F370;\n\nProject Setup Instructions\nRequirements\n\nNode v14\nDocker\n\ngit clone https://github.com/ZenSoftware/Zen.git --depth=1\ncd Zen\nnpm i\ndocker-compose up -d\nnpm run prisma:save\nnpm run start:api\n\nnpm run apollo:watch\nnpm run startReload GraphQL schema for Apollo extension via VSCode command palette after the api server has started: >Apollo: Reload schema\n\nGraphQL Ambitions\n\n Nest GraphQL resolvers as a gateway to Prisma Client.\n Prisma Case Insensitive Filtering For case-insensitive querying of text.\n PrismaSelect to solve the N+1 problem for all queries for free.\n PrismaDelete to add CASCADE and SET_NULL deletion capabilities to Prisma. These features have yet to be implemented by the core Prisma team. This project will convert to the approach directly supported by Prisma when the official feature becomes available.\n Nest GraphQL SDL generation to enable auto-completion using a tool like Apollo extension for VS Code\n Code generation of apollo-angular services to enable simple, type safe access to the GraphQL API within Angular. &#x1F380;\n An Angular GraphQLModule to simplify the configuration of the ApolloClient to enable/disable the varying ApolloLink features.\n HttpBatchLink for batching several GraphQL requests that occur within a short debounce interval. This really helps to alleviate network congestion.\n UploadLink to give ApolloClient HTTP multi-part form requests capabilities. Enabling the uploading of files via GraphQLUpload.\n WebSocketLink for GraphQL subscriptions over websockets.\n\n\nAPI Authentication, Performance & Scaling Ambitions\n\n Nest authentication integration, user creation, and login system designed specifically to work for an Angular SPA (single page application). This project will provide responsive, \"mobile first\" interfaces for the standard set of authentication features (sign up, login, password change).\n Angular route guards and Angular directives to show/hide content depending on user permissions.\n Nest authorization directives for server side role-based access control to allow for declarative, fine grained security control over all GraphQL queries and mutations.\n 100% stateless web server authentication via JWT (Javascript Web Tokens). Keeping the API stateless will enable horizontal scaling of container replicas of the api in production.\n\n\nModern Web Components and Styling Ambitions\n\n SASS chosen as the css transpiler of choice\n Angular Material components & theme.\n Directly import Bootstrap reset, utilities, & grid features through SASS imports, and exclude the Bootstrap theme and component styles. These features are missing from Angular Material, and greatly simplify the creation of responsive, mobile first applications.\n\n\nProject & Dev Tools Ambitions\n\n Nx for project management to allow for the use of Nx Console extensions for VSCode. Nx Console is a GUI interface for monorepos that adds a lot of modern developer conveniences. It also helps to simplify the use of the various Angular & Nest code generation schematics available in the ecosystem.\n Angular Language Service for VSCode for modern IDE tooling.\n NPM scripts for versioned releases of the api server as a containerized Docker image. node:14-alpine is used as the Docker container base image, and the appropriate tsconfig.app.json configurations are being applied for the Node v14 Nest app.\n Enforced code formatting via Prettier & import-sort, guaranteeing all contributions to the project are standardized with predictable structure, and clear legibility.\n Compodoc to generate Nest & Angular documentation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZenGraphQLModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAppModule -->\n\nJwtModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nAppModule -->\n\nZenGraphQLModule->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_TYPE_DEFS   (apps/.../index.ts)\n                        \n                        \n                            CommentTypeDef   (apps/.../Comment.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            execWriteFile   (apps/.../write-schema.ts)\n                        \n                        \n                            GRAPHQL_SCHEMA   (apps/.../index.ts)\n                        \n                        \n                            GroupTypeDef   (apps/.../Group.ts)\n                        \n                        \n                            NEST_RESOLVERS   (apps/.../index.ts)\n                        \n                        \n                            NEST_TYPE_DEFS   (apps/.../index.ts)\n                        \n                        \n                            PostTypeDef   (apps/.../Post.ts)\n                        \n                        \n                            prisma   (apps/.../context.ts)\n                        \n                        \n                            PRISMA_SCHEMA   (apps/.../index.ts)\n                        \n                        \n                            UserTypeDef   (apps/.../User.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/graphql/resolvers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_TYPE_DEFS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mergeTypes([PRISMA_TYPE_DEFS, ...NEST_TYPE_DEFS])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GRAPHQL_SCHEMA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : makeExecutableSchema({ typeDefs: ALL_TYPE_DEFS })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NEST_RESOLVERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  CommentResolver,\n  GroupResolver,\n  PostResolver,\n  UserResolver\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NEST_TYPE_DEFS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : [\n  CommentTypeDef,\n  GroupTypeDef,\n  PostTypeDef,\n  UserTypeDef\n].filter(x => x)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PRISMA_SCHEMA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : makeExecutableSchema({ typeDefs: PRISMA_TYPE_DEFS })\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Comment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CommentTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  expressPort: process.env.PORT,\n  graphql: {\n    playground: false,\n  },\n  postgres: {\n    host: 'postgres-svc',\n    port: 5432,\n    user: process.env.PGUSER,\n    password: process.env.PGPASSWORD,\n    database: 'prisma',\n  },\n  jwtOptions: {\n    privateKey: process.env.JWT_PRIVATE_KEY,\n    publicKey: process.env.JWT_PUBLIC_KEY,\n    signOptions: {\n      algorithm: 'RS256',\n      expiresIn: 3600, // 1 hour (in seconds)\n    },\n  },\n  rememberMeExpiresIn: 2592000, // 30 days (in seconds)\n  cookieDomain: 'zensoftware.ca',\n}\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  expressPort: 7080,\n  graphql: {\n    playground: true,\n  },\n  postgres: {\n    host: 'localhost',\n    port: 5445,\n    user: 'ZenAdmin',\n    password: 'temp',\n    database: 'zen',\n  },\n  jwtOptions: {\n    secret: 'dev secret',\n    signOptions: {\n      algorithm: 'HS256',\n      expiresIn: 3600, // 1 hour (in seconds)\n    },\n  },\n  rememberMeExpiresIn: 2592000, // 30 days (in seconds)\n  cookieDomain: undefined,\n}\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/write-schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            execWriteFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : promisify(fs.writeFile)\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Group.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GroupTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Post.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PostTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/context.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            prisma\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PrismaService()\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/User.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
