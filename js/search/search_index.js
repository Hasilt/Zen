var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.673,1,1.646]],["body/modules/AppModule.html",[0,1.14,1,3.284,2,1.191,3,1.527,4,1.988,5,1.988,6,1.348,7,1.736,8,1.736,9,2.724,10,2.724,11,2.708,12,0.049,13,2.708,14,2.708,15,2.708,16,2.533,17,1.736,18,1.988,19,0.439,20,0.522,21,0.439,22,3.364,23,2.533,24,0.669,25,1.052,26,2.724,27,0.926,28,2.724,29,0.926,30,0.522,31,0.151,32,0.029,33,0.037,34,0.029]],["title/classes/CommentResolver.html",[31,0.125,35,1.646]],["body/classes/CommentResolver.html",[12,0.049,19,0.722,20,0.256,21,0.215,24,0.469,27,0.455,29,0.455,30,0.493,31,0.074,32,0.014,33,0.022,34,0.014,35,1.526,36,0.75,37,1.131,38,0.348,39,1.172,40,2.784,41,2.582,42,2.582,43,2.582,44,2.582,45,2.582,46,2.582,47,2.582,48,2.582,49,2.582,50,1.652,51,2.543,52,1.749,53,2.714,54,2.949,55,1.626,56,1.652,57,1.841,58,1.841,59,1.626,60,3.074,61,1.841,62,1.652,63,1.652,64,1.652,65,1.652,66,1.652,67,2.641,68,1.652,69,1.652,70,1.652,71,1.652,72,1.652,73,1.652,74,1.652,75,1.652,76,1.652,77,1.652,78,1.652,79,0.976,80,0.662,81,1.333,82,0.976,83,0.75,84,0.75,85,0.662,86,1.652,87,1.172,88,1.767,89,0.853,90,1.878,91,0.669,92,1.652,93,2.582,94,1.652,95,0.976,96,0.75,97,1.652,98,0.75,99,1.652,100,1.652,101,2.085,102,1.652,103,2.371,104,1.652,105,1.652,106,1.652,107,1.652,108,1.652,109,1.652,110,1.652,111,1.652,112,1.652,113,1.652,114,1.652,115,1.652,116,1.652,117,1.652,118,1.652,119,1.652]],["title/modules/ConfigModule.html",[0,0.673,11,1.437]],["body/modules/ConfigModule.html",[0,1.179,2,1.282,3,1.643,4,2.139,5,2.139,6,1.45,7,2.317,8,2.519,11,2.707,12,0.048,16,2.653,17,1.868,18,2.139,19,0.472,20,0.562,21,0.472,24,0.636,25,1.132,30,0.562,31,0.163,32,0.031,33,0.038,34,0.031,120,2.931,121,2.931,122,2.486,123,3.619,124,2.653,125,2.653,126,2.931,127,2.931,128,2.931,129,3.619]],["title/injectables/ConfigService.html",[122,1.264,130,1.116]],["body/injectables/ConfigService.html",[12,0.048,19,0.429,20,0.511,21,0.429,24,0.551,25,1.029,27,1.164,30,0.511,31,0.148,32,0.028,33,0.036,34,0.028,38,0.692,55,1.879,91,1.131,96,1.493,98,1.919,122,1.919,130,1.693,131,1.944,132,2.664,133,3.422,134,2.825,135,2.893,136,2.893,137,2.893,138,2.893,139,2.893,140,2.497,141,2.893,142,5.305,143,3.29,144,3.422,145,3.29,146,2.664,147,3.29,148,2.664,149,3.29,150,2.664,151,3.29,152,3.29,153,3.29,154,3.29]],["title/interfaces/Context.html",[52,0.871,155,1.437]],["body/interfaces/Context.html",[12,0.048,19,0.472,20,0.562,21,0.472,24,0.472,29,1.492,30,0.697,32,0.031,33,0.038,34,0.031,38,0.762,52,1.526,59,1.893,87,1.643,91,1.027,101,1.643,135,3.073,155,1.868,156,2.931,157,2.139,158,4.131,159,5.102,160,1.857,161,1.643,162,2.931,163,2.478]],["title/classes/EnvironmentBase.html",[31,0.125,134,1.437]],["body/classes/EnvironmentBase.html",[12,0.049,19,0.427,20,0.508,21,0.427,24,0.549,27,1.283,30,0.508,31,0.147,32,0.028,33,0.036,34,0.028,36,1.485,38,0.689,55,1.876,91,1.13,96,2.114,98,2.232,134,2.174,135,2.883,136,3.188,137,3.188,138,3.188,139,3.188,140,2.752,141,3.188,144,3.982,146,2.649,148,3.771,150,3.771,164,2.649,165,3.271,166,3.271,167,3.271,168,3.271,169,3.271,170,3.271,171,3.271,172,2.239,173,3.271,174,3.271,175,2.239]],["title/injectables/GqlConfigService.html",[130,1.116,176,1.646]],["body/injectables/GqlConfigService.html",[12,0.049,19,0.386,20,0.46,21,0.386,24,0.643,25,0.926,26,3.593,29,1.222,30,0.46,31,0.133,32,0.025,33,0.034,34,0.025,38,0.624,39,1.792,52,0.926,55,1.397,57,1.187,58,1.187,59,1.049,61,1.187,80,1.187,85,1.187,91,0.624,101,1.792,122,2.148,130,1.581,131,1.75,158,2.399,160,1.571,161,1.792,175,2.028,176,2.332,177,3.593,178,2.399,179,4.732,180,2.399,181,2.962,182,2.962,183,2.962,184,4.437,185,3.946,186,2.701,187,2.399,188,2.962,189,2.962,190,2.399,191,2.962,192,3.593,193,2.962,194,3.946,195,4.437,196,2.962,197,2.962,198,2.962,199,2.399,200,2.962,201,2.962,202,4.437,203,2.962,204,2.962,205,2.962,206,2.962,207,2.962,208,2.962,209,2.962,210,2.962,211,2.399]],["title/classes/GroupResolver.html",[31,0.125,212,1.646]],["body/classes/GroupResolver.html",[12,0.049,19,0.722,20,0.256,21,0.215,24,0.469,27,0.455,29,0.455,30,0.493,31,0.074,32,0.014,33,0.022,34,0.014,36,0.75,38,0.348,39,1.172,40,2.784,51,2.543,52,1.749,53,2.714,54,2.949,55,1.626,57,1.841,58,1.841,59,1.626,60,3.074,61,1.841,67,2.641,79,0.976,80,0.662,81,1.333,82,0.976,83,0.75,84,0.75,85,0.662,87,1.172,89,0.853,90,1.878,91,0.669,95,0.976,96,0.75,98,0.75,101,2.085,103,2.371,212,1.526,213,1.131,214,2.582,215,2.582,216,2.582,217,2.582,218,2.582,219,2.582,220,2.582,221,2.582,222,2.582,223,1.652,224,1.652,225,1.652,226,1.652,227,1.652,228,1.652,229,1.652,230,1.652,231,1.652,232,1.652,233,1.652,234,1.652,235,1.652,236,1.652,237,1.652,238,1.652,239,1.652,240,1.652,241,1.652,242,1.767,243,1.652,244,2.582,245,1.652,246,1.652,247,1.652,248,1.652,249,1.652,250,1.652,251,1.652,252,1.652,253,1.652,254,1.652,255,1.652,256,1.652,257,1.652,258,1.652,259,1.652,260,1.652,261,1.652,262,1.652,263,1.652,264,1.652,265,1.652]],["title/modules/JwtModule.html",[0,0.673,13,1.437]],["body/modules/JwtModule.html",[0,1.142,2,1.396,8,2.035,12,0.048,13,2.615,19,0.514,20,0.612,21,0.514,23,2.33,24,0.661,25,1.233,30,0.612,31,0.177,32,0.034,33,0.04,34,0.034,124,2.795,125,2.33,126,3.193,172,2.699,266,3.943,267,4.73,268,3.943]],["title/classes/PostResolver.html",[31,0.125,269,1.646]],["body/classes/PostResolver.html",[12,0.049,19,0.722,20,0.256,21,0.215,24,0.469,27,0.455,29,0.455,30,0.493,31,0.074,32,0.014,33,0.022,34,0.014,36,0.75,38,0.348,39,1.172,40,2.784,51,2.543,52,1.749,53,2.714,54,2.949,55,1.626,57,1.841,58,1.841,59,1.626,60,3.074,61,1.841,67,2.641,79,0.976,80,0.662,81,1.333,82,0.976,83,0.75,84,0.75,85,0.662,87,1.172,89,0.853,90,1.878,91,0.669,95,0.976,96,0.75,98,0.75,101,2.085,103,2.371,269,1.526,270,1.131,271,2.582,272,2.582,273,2.582,274,2.582,275,2.582,276,2.582,277,2.582,278,2.582,279,2.582,280,1.652,281,1.652,282,1.652,283,1.652,284,1.652,285,1.652,286,1.652,287,1.652,288,1.652,289,1.652,290,1.652,291,1.652,292,1.652,293,1.652,294,1.652,295,1.652,296,1.652,297,1.652,298,1.652,299,1.767,300,1.652,301,2.582,302,1.652,303,1.652,304,1.652,305,1.652,306,1.652,307,1.652,308,1.652,309,1.652,310,1.652,311,1.652,312,1.652,313,1.652,314,1.652,315,1.652,316,1.652,317,1.652,318,1.652,319,1.652,320,1.652,321,1.652,322,1.652]],["title/modules/PrismaModule.html",[0,0.673,14,1.437]],["body/modules/PrismaModule.html",[0,1.18,2,1.286,3,1.648,4,2.145,5,2.145,6,1.455,7,2.522,8,2.522,12,0.048,14,2.799,16,2.658,17,1.874,18,2.145,19,0.473,20,0.564,21,0.473,24,0.586,25,1.135,30,0.564,31,0.163,32,0.031,33,0.038,34,0.031,124,2.658,160,1.988,323,2.94,324,2.94,325,2.94,326,3.63,327,3.63]],["title/injectables/PrismaService.html",[130,1.116,160,0.986]],["body/injectables/PrismaService.html",[12,0.049,19,0.396,20,0.472,21,0.396,24,0.586,25,0.95,30,0.472,31,0.136,32,0.026,33,0.034,34,0.026,38,0.639,39,1.822,40,2.76,51,1.379,55,1.692,57,1.608,58,1.608,59,1.591,61,1.8,87,1.379,91,0.845,130,1.608,131,1.795,133,3.249,160,1.421,161,1.379,180,2.46,187,2.46,328,2.46,329,4.493,330,4.013,331,5.104,332,5.104,333,3.038,334,4.779,335,3.038,336,4.013,337,3.038,338,4.013,339,4.779,340,3.038,341,3.038,342,3.038,343,4.013,344,4.013,345,2.46,346,2.46,347,3.038,348,3.038,349,3.038,350,3.038,351,4.493,352,3.038,353,3.038,354,3.038]],["title/classes/UserResolver.html",[31,0.125,355,1.646]],["body/classes/UserResolver.html",[12,0.049,19,0.722,20,0.256,21,0.215,24,0.469,27,0.455,29,0.455,30,0.493,31,0.074,32,0.014,33,0.022,34,0.014,36,0.75,38,0.348,39,1.172,40,2.784,51,2.543,52,1.749,53,2.714,54,2.949,55,1.626,57,1.841,58,1.841,59,1.626,60,3.074,61,1.841,67,2.641,79,0.976,80,0.662,81,1.333,82,0.976,83,0.75,84,0.75,85,0.662,87,1.172,89,0.853,90,1.878,91,0.669,95,0.976,96,0.75,98,0.75,101,2.085,103,2.371,355,1.526,356,1.131,357,2.582,358,2.582,359,2.582,360,2.582,361,2.582,362,2.582,363,2.582,364,2.582,365,2.582,366,1.652,367,1.652,368,1.652,369,1.652,370,1.652,371,1.652,372,1.652,373,1.652,374,1.652,375,1.652,376,1.652,377,1.652,378,1.652,379,1.652,380,1.652,381,1.652,382,1.652,383,1.652,384,1.652,385,1.767,386,1.652,387,1.767,388,1.652,389,1.652,390,1.652,391,1.652,392,1.652,393,1.652,394,1.652,395,1.652,396,1.652,397,1.652,398,1.652,399,1.652,400,1.652,401,1.652,402,1.652,403,1.652,404,1.652,405,1.652,406,1.652,407,1.652,408,1.652]],["title/modules/ZenGraphQLModule.html",[0,0.673,15,1.437]],["body/modules/ZenGraphQLModule.html",[0,1.118,2,1.347,7,1.964,12,0.049,15,2.389,19,0.496,20,0.591,21,0.496,23,2.248,24,0.677,25,1.19,30,0.591,31,0.171,32,0.033,33,0.04,34,0.033,80,1.524,81,1.964,85,1.524,124,2.735,127,3.081,176,2.735,409,3.804,410,3.804,411,3.081,412,3.168,413,3.804,414,3.804]],["title/coverage.html",[415,3.065]],["body/coverage.html",[6,1.089,12,0.049,21,0.355,29,0.749,31,0.215,32,0.023,33,0.032,34,0.023,35,1.607,37,2.549,52,0.85,83,1.234,84,1.234,88,1.861,91,0.572,122,1.234,125,2.201,130,1.702,132,2.202,134,1.403,155,1.403,157,2.51,160,0.963,161,1.234,162,3.7,163,1.861,164,2.202,176,1.607,177,2.202,178,2.202,186,1.861,212,1.607,213,2.549,242,1.861,269,1.607,270,2.549,299,1.861,328,2.202,355,1.607,356,2.549,385,1.861,412,1.861,415,2.202,416,2.202,417,2.719,418,2.719,419,5.653,420,3.724,421,2.719,422,5.527,423,5.419,424,2.719,425,2.202,426,2.202,427,4.568,428,3.875,429,2.202,430,2.202,431,2.202,432,2.549,433,2.549,434,2.202,435,2.202,436,2.719,437,2.202,438,2.202,439,2.202,440,2.719,441,2.719]],["title/dependencies.html",[3,1.519,442,2.333]],["body/dependencies.html",[3,1.7,12,0.049,25,1.171,27,1.364,32,0.032,33,0.039,34,0.032,80,1.501,172,2.563,345,3.032,346,3.032,443,4.954,444,3.745,445,3.745,446,3.745,447,3.745,448,4.584,449,3.745,450,3.745,451,3.032,452,3.032,453,3.745,454,3.745,455,3.745,456,3.745,457,3.032,458,3.745,459,3.745,460,3.745,461,3.745,462,3.745,463,3.745,464,3.745,465,3.745,466,3.745]],["title/miscellaneous/functions.html",[467,1.379,468,2.709]],["body/miscellaneous/functions.html",[6,1.996,12,0.045,19,0.495,32,0.032,33,0.04,34,0.032,38,0.798,51,2.097,52,1.186,57,1.851,58,1.851,59,1.636,61,1.52,83,2.097,84,2.097,103,1.958,157,2.241,163,3.41,425,3.071,426,3.741,432,2.596,433,3.162,434,3.741,439,3.071,467,2.241,468,3.071,469,3.792,470,3.071,471,3.792,472,3.071,473,3.792,474,3.741,475,3.792]],["title/index.html",[38,0.491,476,2.333,477,1.889]],["body/index.html",[6,1.252,12,0.046,17,0.831,23,0.951,24,0.408,27,1.178,28,1.303,29,1.061,32,0.014,33,0.022,34,0.014,85,0.645,91,0.339,128,1.303,140,0.951,155,0.831,156,1.303,161,0.731,387,1.732,411,1.303,416,1.303,451,3.118,452,3.118,457,1.303,474,2.048,477,2.048,478,2.531,479,3.543,480,1.609,481,1.609,482,3.543,483,1.609,484,1.609,485,4.429,486,4.901,487,1.609,488,1.609,489,1.609,490,1.609,491,1.609,492,1.609,493,1.609,494,1.609,495,1.609,496,1.609,497,1.609,498,1.609,499,1.609,500,1.609,501,1.609,502,1.609,503,1.609,504,4.088,505,1.609,506,1.609,507,1.609,508,2.53,509,1.609,510,1.609,511,1.609,512,1.609,513,1.609,514,4.088,515,3.125,516,1.609,517,2.53,518,1.609,519,3.543,520,1.609,521,1.609,522,4.276,523,1.609,524,1.609,525,2.53,526,2.53,527,3.543,528,1.609,529,1.609,530,1.609,531,3.543,532,4.135,533,1.609,534,1.609,535,1.609,536,1.609,537,1.609,538,2.53,539,2.53,540,1.609,541,1.609,542,1.609,543,1.609,544,1.609,545,1.609,546,1.609,547,1.609,548,1.609,549,1.609,550,2.53,551,1.609,552,1.609,553,1.609,554,1.609,555,1.609,556,1.609,557,2.53,558,3.851,559,1.609,560,1.609,561,1.609,562,1.609,563,1.609,564,2.53,565,1.609,566,1.609,567,1.609,568,1.609,569,2.048,570,2.53,571,1.609,572,3.125,573,1.609,574,1.609,575,1.609,576,1.609,577,1.609,578,1.609,579,1.609,580,3.543,581,1.609,582,1.609,583,1.609,584,1.609,585,1.609,586,1.609,587,2.53,588,2.53,589,1.609,590,3.125,591,1.609,592,2.53,593,1.609,594,1.609,595,1.609,596,1.609,597,1.609,598,1.102,599,1.609,600,1.609,601,2.53,602,1.609,603,1.609,604,1.609,605,1.609,606,1.609,607,2.53,608,1.609,609,1.609,610,1.609,611,1.609,612,1.609,613,1.609,614,1.609,615,1.609,616,1.609,617,1.609,618,1.609,619,1.609,620,1.609,621,1.609,622,1.609,623,1.609,624,1.609,625,1.609,626,1.609,627,2.53,628,1.609,629,3.125,630,1.609,631,2.53,632,1.609,633,1.609,634,2.53,635,2.53,636,1.609,637,1.609,638,1.609,639,1.609,640,1.609,641,1.609,642,1.609,643,1.609,644,2.53,645,2.53,646,2.53,647,1.609,648,1.609,649,1.609,650,1.303,651,1.609,652,1.609,653,2.53,654,1.609,655,1.609,656,1.609,657,1.609,658,1.609,659,1.609,660,1.609,661,1.609,662,1.609,663,1.609,664,1.609,665,1.609,666,2.53,667,1.609,668,1.609,669,1.609,670,1.609,671,1.609,672,1.609,673,1.609,674,2.53,675,1.609,676,1.609,677,1.609,678,1.609,679,1.609,680,2.53,681,1.609,682,2.53,683,1.609,684,2.53,685,1.609,686,1.609,687,1.609,688,1.609,689,1.609,690,2.53,691,1.609,692,1.609,693,1.609,694,1.609,695,1.609,696,2.53,697,2.53,698,1.609,699,1.609,700,1.609,701,1.609,702,1.609,703,1.609,704,1.609,705,1.303,706,3.125,707,1.609,708,2.53,709,3.125,710,1.609,711,1.609,712,1.609,713,1.609,714,1.609,715,1.609,716,1.609,717,1.609,718,1.609,719,1.609,720,1.609,721,1.609,722,1.609,723,1.609,724,1.609,725,1.609,726,1.609,727,1.609,728,1.609,729,1.609,730,1.609,731,1.609,732,2.53,733,1.609,734,1.609,735,1.609,736,1.609,737,1.609,738,1.609,739,1.609,740,1.609,741,1.609,742,1.609,743,1.609,744,1.609,745,1.609,746,1.609,747,1.609,748,1.609,749,1.609,750,1.609,751,1.609,752,1.609,753,1.609,754,1.609,755,1.609,756,1.609,757,1.609,758,1.609]],["title/modules.html",[2,1.34]],["body/modules.html",[1,2.41,2,1.444,11,2.105,12,0.041,13,2.105,14,2.105,15,2.105,32,0.035,33,0.041,34,0.035,569,3.908,759,5.139,760,5.139,761,5.139,762,5.422,763,4.825]],["title/overview.html",[764,3.065]],["body/overview.html",[0,0.848,1,3.268,2,1.244,3,1.595,4,2.076,5,2.076,6,1.408,7,1.813,8,1.813,9,2.845,10,2.845,11,2.606,12,0.047,13,2.485,14,2.739,15,2.485,16,2.604,17,1.813,18,2.076,32,0.03,33,0.038,34,0.03,36,1.595,120,2.845,121,2.845,122,2.292,131,2.076,155,1.813,160,1.906,211,3.568,323,2.845,324,2.845,325,2.845,598,2.404,764,2.845,765,3.513]],["title/miscellaneous/variables.html",[467,1.379,766,2.709]],["body/miscellaneous/variables.html",[12,0.049,27,0.919,29,1.075,32,0.02,33,0.029,34,0.02,35,1.374,37,1.592,38,0.49,88,2.672,89,2.557,91,1.019,125,2.521,134,1.723,136,2.285,137,2.285,138,2.285,139,2.672,140,1.972,141,2.285,157,1.374,160,0.824,161,1.056,175,2.285,186,2.672,190,2.703,192,2.703,199,1.884,212,1.374,213,1.592,242,2.672,269,1.374,270,1.592,299,2.672,355,1.374,356,1.592,385,2.672,387,2.285,412,2.285,428,1.884,429,2.703,430,3.161,431,2.703,432,1.592,433,2.285,435,2.703,437,1.884,438,1.884,467,1.374,470,1.884,472,1.884,478,1.884,532,1.884,598,2.285,650,2.703,705,1.884,766,1.884,767,4.517,768,2.326,769,2.326,770,2.326,771,2.326,772,2.326,773,2.326,774,5.282,775,5.282,776,2.326,777,3.338,778,2.326,779,2.326,780,3.338,781,2.326,782,3.338,783,2.326,784,3.338,785,2.326,786,2.326,787,2.326,788,3.338,789,3.338,790,3.338,791,3.338,792,2.326,793,3.338,794,3.338,795,3.338,796,4.266,797,3.338,798,3.338,799,3.338,800,2.326,801,2.326,802,2.326,803,2.326,804,2.326,805,2.326,806,2.326,807,2.326,808,2.326,809,2.326,810,2.326,811,2.326]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":598,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.2.6",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["1.7.8",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":673,"title":{},"body":{"index.html":{}}}],["15.3.0",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["2.16.1",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":208,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["20_000_000",{"_index":207,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["2592000",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":765,"title":{},"body":{"overview.html":{}}}],["30",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3600",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":695,"title":{},"body":{"index.html":{}}}],["5",{"_index":211,"title":{},"body":{"injectables/GqlConfigService.html":{},"overview.html":{}}}],["5432",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5445",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.2.0",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["7.4.4",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["7.6.0",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["7080",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":587,"title":{},"body":{"index.html":{}}}],["add",{"_index":553,"title":{},"body":{"index.html":{}}}],["adds",{"_index":714,"title":{},"body":{"index.html":{}}}],["algorithm",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["all_type_defs",{"_index":186,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alleviate",{"_index":608,"title":{},"body":{"index.html":{}}}],["allow",{"_index":666,"title":{},"body":{"index.html":{}}}],["alpine](https://hub.docker.com/_/node?tab=description&ref=hackernoon.com",{"_index":734,"title":{},"body":{"index.html":{}}}],["ambitions",{"_index":531,"title":{},"body":{"index.html":{}}}],["angular",{"_index":486,"title":{},"body":{"index.html":{}}}],["angular.com/docs/data/network#httpclient",{"_index":597,"title":{},"body":{"index.html":{}}}],["angular](https://www.apollographql.com/docs/angular",{"_index":583,"title":{},"body":{"index.html":{}}}],["api",{"_index":522,"title":{},"body":{"index.html":{}}}],["apollo",{"_index":451,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["apollo:watch",{"_index":523,"title":{},"body":{"index.html":{}}}],["apolloclient",{"_index":592,"title":{},"body":{"index.html":{}}}],["apollolink",{"_index":595,"title":{},"body":{"index.html":{}}}],["app",{"_index":743,"title":{},"body":{"index.html":{}}}],["application)](https://angular.io",{"_index":643,"title":{},"body":{"index.html":{}}}],["applications",{"_index":704,"title":{},"body":{"index.html":{}}}],["applied",{"_index":741,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":563,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":737,"title":{},"body":{"index.html":{}}}],["apps/.../comment.ts",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../context.ts",{"_index":470,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../group.ts",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../index.ts",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../post.ts",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../prisma",{"_index":471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../user.ts",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../write",{"_index":472,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app/config/config.module.ts",{"_index":123,"title":{},"body":{"modules/ConfigModule.html":{}}}],["apps/api/src/app/config/config.service.ts",{"_index":132,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/context.ts",{"_index":157,"title":{},"body":{"interfaces/Context.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/gql",{"_index":177,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/prisma",{"_index":425,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts",{"_index":37,"title":{},"body":{"classes/CommentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:23",{"_index":72,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:28",{"_index":68,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:33",{"_index":70,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:38",{"_index":56,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:43",{"_index":76,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:48",{"_index":65,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:53",{"_index":78,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:58",{"_index":63,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:63",{"_index":74,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts",{"_index":213,"title":{},"body":{"classes/GroupResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:23",{"_index":234,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:28",{"_index":230,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:33",{"_index":232,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:38",{"_index":224,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:43",{"_index":238,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:48",{"_index":228,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:53",{"_index":240,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:58",{"_index":226,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:63",{"_index":236,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/index.ts",{"_index":428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts",{"_index":270,"title":{},"body":{"classes/PostResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:23",{"_index":291,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:28",{"_index":287,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:33",{"_index":289,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:38",{"_index":281,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:43",{"_index":295,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:48",{"_index":285,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:53",{"_index":297,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:58",{"_index":283,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:63",{"_index":293,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts",{"_index":356,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:23",{"_index":377,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:28",{"_index":373,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:33",{"_index":375,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:38",{"_index":367,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:43",{"_index":381,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:48",{"_index":371,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:53",{"_index":383,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:58",{"_index":369,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:63",{"_index":379,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/write",{"_index":432,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/zen",{"_index":409,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["apps/api/src/app/jwt/jwt.module.ts",{"_index":266,"title":{},"body":{"modules/JwtModule.html":{}}}],["apps/api/src/app/prisma/prisma.module.ts",{"_index":326,"title":{},"body":{"modules/PrismaModule.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts",{"_index":328,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:11",{"_index":340,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:16",{"_index":342,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:20",{"_index":341,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:6",{"_index":335,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/environments/environment.base.ts",{"_index":164,"title":{},"body":{"classes/EnvironmentBase.html":{},"coverage.html":{}}}],["apps/api/src/environments/environment.base.ts:10",{"_index":169,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:11",{"_index":168,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:12",{"_index":171,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:13",{"_index":165,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:5",{"_index":170,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:6",{"_index":166,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:7",{"_index":167,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":439,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["args",{"_index":51,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["args.ts",{"_index":426,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["async",{"_index":40,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["authentication",{"_index":629,"title":{},"body":{"index.html":{}}}],["authentication](https://docs.nestjs.com/techniques/authentication",{"_index":632,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":659,"title":{},"body":{"index.html":{}}}],["auto",{"_index":573,"title":{},"body":{"index.html":{}}}],["available",{"_index":569,"title":{},"body":{"index.html":{},"modules.html":{}}}],["await",{"_index":351,"title":{},"body":{"injectables/PrismaService.html":{}}}],["base",{"_index":736,"title":{},"body":{"index.html":{}}}],["based",{"_index":663,"title":{},"body":{"index.html":{}}}],["based_access_control?oldformat=true",{"_index":665,"title":{},"body":{"index.html":{}}}],["batching",{"_index":599,"title":{},"body":{"index.html":{}}}],["becomes",{"_index":568,"title":{},"body":{"index.html":{}}}],["being",{"_index":740,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":96,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{}}}],["browse",{"_index":762,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":759,"title":{},"body":{"modules.html":{}}}],["built",{"_index":484,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":557,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":554,"title":{},"body":{"index.html":{}}}],["case",{"_index":538,"title":{},"body":{"index.html":{}}}],["cd",{"_index":513,"title":{},"body":{"index.html":{}}}],["change",{"_index":651,"title":{},"body":{"index.html":{}}}],["choice",{"_index":688,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":685,"title":{},"body":{"index.html":{}}}],["class",{"_index":31,"title":{"classes/CommentResolver.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["classes",{"_index":36,"title":{},"body":{"classes/CommentResolver.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["clear",{"_index":755,"title":{},"body":{"index.html":{}}}],["client",{"_index":613,"title":{},"body":{"index.html":{}}}],["client/case",{"_index":542,"title":{},"body":{"index.html":{}}}],["client](https://www.prisma.io/docs/understand",{"_index":535,"title":{},"body":{"index.html":{}}}],["clone",{"_index":510,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":120,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":121,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":323,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":324,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":325,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["code",{"_index":580,"title":{},"body":{"index.html":{}}}],["code](https://www.apollographql.com/docs/devtools/editor",{"_index":578,"title":{},"body":{"index.html":{}}}],["command",{"_index":529,"title":{},"body":{"index.html":{}}}],["comment",{"_index":93,"title":{},"body":{"classes/CommentResolver.html":{}}}],["commentresolver",{"_index":35,"title":{"classes/CommentResolver.html":{}},"body":{"classes/CommentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commenttypedef",{"_index":88,"title":{},"body":{"classes/CommentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["completion",{"_index":574,"title":{},"body":{"index.html":{}}}],["compodoc](https://compodoc.app",{"_index":757,"title":{},"body":{"index.html":{}}}],["component",{"_index":701,"title":{},"body":{"index.html":{}}}],["components",{"_index":682,"title":{},"body":{"index.html":{}}}],["compose",{"_index":516,"title":{},"body":{"index.html":{}}}],["config",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"injectables/GqlConfigService.html":{}}}],["config.service",{"_index":127,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ZenGraphQLModule.html":{}}}],["config.service.ts",{"_index":178,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{}}}],["config.service.ts:12",{"_index":183,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["config.service.ts:9",{"_index":182,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["configmodule",{"_index":11,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":122,"title":{"injectables/ConfigService.html":{}},"body":{"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["configuration",{"_index":591,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":739,"title":{},"body":{"index.html":{}}}],["congestion",{"_index":610,"title":{},"body":{"index.html":{}}}],["console",{"_index":709,"title":{},"body":{"index.html":{}}}],["const",{"_index":87,"title":{},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["constructor",{"_index":180,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}}}],["constructor(@optional",{"_index":348,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(config",{"_index":181,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["constructor(options",{"_index":333,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(private",{"_index":188,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["container",{"_index":680,"title":{},"body":{"index.html":{}}}],["containerized",{"_index":731,"title":{},"body":{"index.html":{}}}],["content",{"_index":656,"title":{},"body":{"index.html":{}}}],["context",{"_index":52,"title":{"interfaces/Context.html":{}},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["contributing",{"_index":502,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":751,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":495,"title":{},"body":{"index.html":{}}}],["control",{"_index":671,"title":{},"body":{"index.html":{}}}],["control](https://en.wikipedia.org/wiki/role",{"_index":664,"title":{},"body":{"index.html":{}}}],["conveniences",{"_index":717,"title":{},"body":{"index.html":{}}}],["convert",{"_index":562,"title":{},"body":{"index.html":{}}}],["cookiedomain",{"_index":136,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":560,"title":{},"body":{"index.html":{}}}],["cors",{"_index":198,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["coverage",{"_index":415,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcontext",{"_index":163,"title":{},"body":{"interfaces/Context.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["creategqloptions",{"_index":179,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["createonecomment",{"_index":41,"title":{},"body":{"classes/CommentResolver.html":{}}}],["createonecomment(@parent",{"_index":108,"title":{},"body":{"classes/CommentResolver.html":{}}}],["createonecomment(parent",{"_index":50,"title":{},"body":{"classes/CommentResolver.html":{}}}],["createonegroup",{"_index":214,"title":{},"body":{"classes/GroupResolver.html":{}}}],["createonegroup(@parent",{"_index":254,"title":{},"body":{"classes/GroupResolver.html":{}}}],["createonegroup(parent",{"_index":223,"title":{},"body":{"classes/GroupResolver.html":{}}}],["createonepost",{"_index":271,"title":{},"body":{"classes/PostResolver.html":{}}}],["createonepost(@parent",{"_index":311,"title":{},"body":{"classes/PostResolver.html":{}}}],["createonepost(parent",{"_index":280,"title":{},"body":{"classes/PostResolver.html":{}}}],["createoneuser",{"_index":357,"title":{},"body":{"classes/UserResolver.html":{}}}],["createoneuser(@parent",{"_index":397,"title":{},"body":{"classes/UserResolver.html":{}}}],["createoneuser(parent",{"_index":366,"title":{},"body":{"classes/UserResolver.html":{}}}],["creation",{"_index":634,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":200,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["css",{"_index":686,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":202,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["ctx.connection",{"_index":203,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["ctx.connection.context",{"_index":204,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["currently",{"_index":492,"title":{},"body":{"index.html":{}}}],["d",{"_index":518,"title":{},"body":{"index.html":{}}}],["database",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debounce",{"_index":604,"title":{},"body":{"index.html":{}}}],["debug",{"_index":193,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["declarative",{"_index":667,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":53,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["default",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":55,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["deletemanycomment",{"_index":42,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deletemanycomment(@parent",{"_index":116,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deletemanycomment(parent",{"_index":62,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deletemanygroup",{"_index":215,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deletemanygroup(@parent",{"_index":262,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deletemanygroup(parent",{"_index":225,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deletemanypost",{"_index":272,"title":{},"body":{"classes/PostResolver.html":{}}}],["deletemanypost(@parent",{"_index":319,"title":{},"body":{"classes/PostResolver.html":{}}}],["deletemanypost(parent",{"_index":282,"title":{},"body":{"classes/PostResolver.html":{}}}],["deletemanyuser",{"_index":358,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletemanyuser(@parent",{"_index":405,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletemanyuser(parent",{"_index":368,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteonecomment",{"_index":43,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deleteonecomment(@parent",{"_index":112,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deleteonecomment(parent",{"_index":64,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deleteonegroup",{"_index":216,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deleteonegroup(@parent",{"_index":258,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deleteonegroup(parent",{"_index":227,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deleteonepost",{"_index":273,"title":{},"body":{"classes/PostResolver.html":{}}}],["deleteonepost(@parent",{"_index":315,"title":{},"body":{"classes/PostResolver.html":{}}}],["deleteonepost(parent",{"_index":284,"title":{},"body":{"classes/PostResolver.html":{}}}],["deleteoneuser",{"_index":359,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteoneuser(@parent",{"_index":401,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteoneuser(parent",{"_index":370,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletion",{"_index":556,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":657,"title":{},"body":{"index.html":{}}}],["depth=1",{"_index":512,"title":{},"body":{"index.html":{}}}],["designed",{"_index":637,"title":{},"body":{"index.html":{}}}],["dev",{"_index":705,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["developer",{"_index":716,"title":{},"body":{"index.html":{}}}],["development",{"_index":494,"title":{},"body":{"index.html":{}}}],["directives",{"_index":654,"title":{},"body":{"index.html":{}}}],["directives](https://docs.nestjs.com/techniques/authentication#extending",{"_index":660,"title":{},"body":{"index.html":{}}}],["directly",{"_index":564,"title":{},"body":{"index.html":{}}}],["docker",{"_index":515,"title":{},"body":{"index.html":{}}}],["docs",{"_index":487,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":416,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["ecosystem",{"_index":721,"title":{},"body":{"index.html":{}}}],["enable",{"_index":572,"title":{},"body":{"index.html":{}}}],["enable/disable",{"_index":593,"title":{},"body":{"index.html":{}}}],["enabling",{"_index":619,"title":{},"body":{"index.html":{}}}],["enforced",{"_index":744,"title":{},"body":{"index.html":{}}}],["environment",{"_index":125,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentbase",{"_index":134,"title":{"classes/EnvironmentBase.html":{}},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentbase:10",{"_index":151,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:11",{"_index":149,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:12",{"_index":153,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:13",{"_index":143,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:5",{"_index":152,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:6",{"_index":145,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:7",{"_index":147,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environments/environment",{"_index":126,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{}}}],["environments/environment.base",{"_index":154,"title":{},"body":{"injectables/ConfigService.html":{}}}],["exclude",{"_index":700,"title":{},"body":{"index.html":{}}}],["execwritefile",{"_index":435,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["express",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["expressport",{"_index":137,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["extend",{"_index":90,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["extends",{"_index":133,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PrismaService.html":{}}}],["extension",{"_index":526,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":710,"title":{},"body":{"index.html":{}}}],["false",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feature",{"_index":567,"title":{},"body":{"index.html":{}}}],["features",{"_index":558,"title":{},"body":{"index.html":{}}}],["file",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["files",{"_index":621,"title":{},"body":{"index.html":{}}}],["filter(x",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtering](https://www.prisma.io/docs/reference/tools",{"_index":540,"title":{},"body":{"index.html":{}}}],["findmanycomment",{"_index":44,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycomment(@parent",{"_index":104,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycomment(parent",{"_index":66,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycommentcount",{"_index":45,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycommentcount(@parent",{"_index":106,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycommentcount(parent",{"_index":69,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanygroup",{"_index":217,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroup(@parent",{"_index":250,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroup(parent",{"_index":229,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroupcount",{"_index":218,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroupcount(@parent",{"_index":252,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroupcount(parent",{"_index":231,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanypost",{"_index":274,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypost(@parent",{"_index":307,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypost(parent",{"_index":286,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypostcount",{"_index":275,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypostcount(@parent",{"_index":309,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypostcount(parent",{"_index":288,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanyuser",{"_index":360,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyuser(@parent",{"_index":393,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyuser(parent",{"_index":372,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount",{"_index":361,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount(@parent",{"_index":395,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount(parent",{"_index":374,"title":{},"body":{"classes/UserResolver.html":{}}}],["findonecomment",{"_index":46,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findonecomment(@parent",{"_index":100,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findonecomment(parent",{"_index":71,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findonegroup",{"_index":219,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findonegroup(@parent",{"_index":248,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findonegroup(parent",{"_index":233,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findonepost",{"_index":276,"title":{},"body":{"classes/PostResolver.html":{}}}],["findonepost(@parent",{"_index":305,"title":{},"body":{"classes/PostResolver.html":{}}}],["findonepost(parent",{"_index":290,"title":{},"body":{"classes/PostResolver.html":{}}}],["findoneuser",{"_index":362,"title":{},"body":{"classes/UserResolver.html":{}}}],["findoneuser(@parent",{"_index":391,"title":{},"body":{"classes/UserResolver.html":{}}}],["findoneuser(parent",{"_index":376,"title":{},"body":{"classes/UserResolver.html":{}}}],["fine",{"_index":668,"title":{},"body":{"index.html":{}}}],["first",{"_index":646,"title":{},"body":{"index.html":{}}}],["form",{"_index":618,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":745,"title":{},"body":{"index.html":{}}}],["free",{"_index":551,"title":{},"body":{"index.html":{}}}],["full",{"_index":480,"title":{},"body":{"index.html":{}}}],["function",{"_index":162,"title":{},"body":{"interfaces/Context.html":{},"coverage.html":{}}}],["functionality",{"_index":677,"title":{},"body":{"index.html":{}}}],["functions",{"_index":468,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":534,"title":{},"body":{"index.html":{}}}],["generate",{"_index":758,"title":{},"body":{"index.html":{}}}],["generation",{"_index":719,"title":{},"body":{"index.html":{}}}],["generation](https://docs.nestjs.com/graphql/generating",{"_index":571,"title":{},"body":{"index.html":{}}}],["generation](https://graphql",{"_index":581,"title":{},"body":{"index.html":{}}}],["generator.com/docs/plugins/typescript",{"_index":582,"title":{},"body":{"index.html":{}}}],["getting",{"_index":476,"title":{"index.html":{}},"body":{}}],["git",{"_index":499,"title":{},"body":{"index.html":{}}}],["github",{"_index":488,"title":{},"body":{"index.html":{}}}],["give",{"_index":614,"title":{},"body":{"index.html":{}}}],["global",{"_index":124,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{}}}],["good",{"_index":693,"title":{},"body":{"index.html":{}}}],["gql",{"_index":81,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["gqlconfigservice",{"_index":176,"title":{"injectables/GqlConfigService.html":{}},"body":{"injectables/GqlConfigService.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["gqlmoduleoptions",{"_index":184,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["gqloptionsfactory",{"_index":185,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["grained",{"_index":669,"title":{},"body":{"index.html":{}}}],["graph",{"_index":763,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["graphql.module.ts",{"_index":410,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["graphql](https://docs.nestjs.com/graphql/resolvers",{"_index":533,"title":{},"body":{"index.html":{}}}],["graphql_schema",{"_index":429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":411,"title":{},"body":{"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["graphqlmodule.forrootasync",{"_index":413,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["graphqlupload",{"_index":622,"title":{},"body":{"index.html":{}}}],["greatly",{"_index":703,"title":{},"body":{"index.html":{}}}],["grid](https://www.amadousall.com/the",{"_index":692,"title":{},"body":{"index.html":{}}}],["group",{"_index":244,"title":{},"body":{"classes/GroupResolver.html":{}}}],["groupresolver",{"_index":212,"title":{"classes/GroupResolver.html":{}},"body":{"classes/GroupResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grouptypedef",{"_index":242,"title":{},"body":{"classes/GroupResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["guaranteeing",{"_index":750,"title":{},"body":{"index.html":{}}}],["guards",{"_index":653,"title":{},"body":{"index.html":{}}}],["gui",{"_index":712,"title":{},"body":{"index.html":{}}}],["helps",{"_index":607,"title":{},"body":{"index.html":{}}}],["horizontal",{"_index":679,"title":{},"body":{"index.html":{}}}],["host",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hs256",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":615,"title":{},"body":{"index.html":{}}}],["httpbatchlink](https://apollo",{"_index":596,"title":{},"body":{"index.html":{}}}],["https://github.com/zensoftware/zen.git",{"_index":511,"title":{},"body":{"index.html":{}}}],["ide",{"_index":726,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":732,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":559,"title":{},"body":{"index.html":{}}}],["implements",{"_index":187,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/JwtModule.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["index",{"_index":38,"title":{"index.html":{}},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["inherited",{"_index":142,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initialize",{"_index":624,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":130,"title":{"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["injectables",{"_index":131,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{},"overview.html":{}}}],["insensitive",{"_index":539,"title":{},"body":{"index.html":{}}}],["installsubscriptionhandlers",{"_index":191,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["instructions",{"_index":506,"title":{},"body":{"index.html":{}}}],["int",{"_index":95,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["integration",{"_index":633,"title":{},"body":{"index.html":{}}}],["interested",{"_index":501,"title":{},"body":{"index.html":{}}}],["interface",{"_index":155,"title":{"interfaces/Context.html":{}},"body":{"interfaces/Context.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaces",{"_index":156,"title":{},"body":{"interfaces/Context.html":{},"index.html":{}}}],["interfaces/prisma",{"_index":541,"title":{},"body":{"index.html":{}}}],["interval",{"_index":605,"title":{},"body":{"index.html":{}}}],["introspection",{"_index":196,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["issue",{"_index":500,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":675,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["jwtmodule",{"_index":13,"title":{"modules/JwtModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JwtModule.html":{},"modules.html":{},"overview.html":{}}}],["jwtmoduleoptions",{"_index":148,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["jwtoptions",{"_index":138,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["keeping",{"_index":678,"title":{},"body":{"index.html":{}}}],["language",{"_index":722,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["legibility",{"_index":756,"title":{},"body":{"index.html":{}}}],["literal",{"_index":146,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["localhost",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":635,"title":{},"body":{"index.html":{}}}],["lot",{"_index":715,"title":{},"body":{"index.html":{}}}],["makeexecutableschema",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management](https://nx.dev/angular",{"_index":707,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":697,"title":{},"body":{"index.html":{}}}],["material](https://material.angular.io",{"_index":689,"title":{},"body":{"index.html":{}}}],["maxfiles",{"_index":210,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["maxfilesize",{"_index":206,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["mb",{"_index":209,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["merge",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["mergetypes([prisma_type_defs",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":39,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["miscellaneous",{"_index":467,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":696,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":645,"title":{},"body":{"index.html":{}}}],["modern",{"_index":479,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["monorepos",{"_index":713,"title":{},"body":{"index.html":{}}}],["multi",{"_index":616,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":54,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["mutations",{"_index":672,"title":{},"body":{"index.html":{}}}],["n+1",{"_index":548,"title":{},"body":{"index.html":{}}}],["name",{"_index":58,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":485,"title":{},"body":{"index.html":{}}}],["nest_resolvers",{"_index":412,"title":{},"body":{"modules/ZenGraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nest_type_defs",{"_index":430,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":80,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":172,"title":{},"body":{"classes/EnvironmentBase.html":{},"modules/JwtModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["nestjwtmodule",{"_index":267,"title":{},"body":{"modules/JwtModule.html":{}}}],["nestjwtmodule.register(environment.jwtoptions",{"_index":268,"title":{},"body":{"modules/JwtModule.html":{}}}],["network",{"_index":609,"title":{},"body":{"index.html":{}}}],["new",{"_index":161,"title":{},"body":{"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":508,"title":{},"body":{"index.html":{}}}],["node:14",{"_index":733,"title":{},"body":{"index.html":{}}}],["npm",{"_index":514,"title":{},"body":{"index.html":{}}}],["null",{"_index":89,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":144,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["nx",{"_index":706,"title":{},"body":{"index.html":{}}}],["occur",{"_index":602,"title":{},"body":{"index.html":{}}}],["official",{"_index":566,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":330,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ondelete(args",{"_index":338,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ondeleteargs",{"_index":339,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduledestroy",{"_index":331,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":332,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":498,"title":{},"body":{"index.html":{}}}],["optional",{"_index":59,"title":{},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":336,"title":{},"body":{"injectables/PrismaService.html":{}}}],["origin",{"_index":201,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["out",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["outpath",{"_index":475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["over",{"_index":627,"title":{},"body":{"index.html":{}}}],["overview",{"_index":764,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":442,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":642,"title":{},"body":{"index.html":{}}}],["palette",{"_index":530,"title":{},"body":{"index.html":{}}}],["paljs/plugins",{"_index":345,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["parameters",{"_index":57,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":60,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["part",{"_index":617,"title":{},"body":{"index.html":{}}}],["parts",{"_index":694,"title":{},"body":{"index.html":{}}}],["password",{"_index":650,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":630,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":658,"title":{},"body":{"index.html":{}}}],["pg",{"_index":174,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["playground",{"_index":175,"title":{},"body":{"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["plugin",{"_index":748,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":579,"title":{},"body":{"index.html":{}}}],["poolconfig",{"_index":173,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["port",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portal",{"_index":483,"title":{},"body":{"index.html":{}}}],["post",{"_index":301,"title":{},"body":{"classes/PostResolver.html":{}}}],["postgres",{"_index":139,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["postgresqlconfig",{"_index":150,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["postresolver",{"_index":269,"title":{"classes/PostResolver.html":{}},"body":{"classes/PostResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["posttypedef",{"_index":299,"title":{},"body":{"classes/PostResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["predictable",{"_index":753,"title":{},"body":{"index.html":{}}}],["prettier](https://prettier.io",{"_index":746,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":327,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":346,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/comment/resolvers",{"_index":86,"title":{},"body":{"classes/CommentResolver.html":{}}}],["prisma/group/resolvers",{"_index":241,"title":{},"body":{"classes/GroupResolver.html":{}}}],["prisma/post/resolvers",{"_index":298,"title":{},"body":{"classes/PostResolver.html":{}}}],["prisma/prisma",{"_index":536,"title":{},"body":{"index.html":{}}}],["prisma/user/resolvers",{"_index":384,"title":{},"body":{"classes/UserResolver.html":{}}}],["prisma:save",{"_index":520,"title":{},"body":{"index.html":{}}}],["prisma_schema",{"_index":431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma_type_defs",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":329,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientoptions",{"_index":334,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete",{"_index":344,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete(this",{"_index":350,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete.ondelete(args",{"_index":352,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete](https://paljs.com/plugins/delete",{"_index":552,"title":{},"body":{"index.html":{}}}],["prismamodule",{"_index":14,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaselect](https://paljs.com/plugins/select",{"_index":546,"title":{},"body":{"index.html":{}}}],["prismaselectargs",{"_index":83,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["prismaselectargs(info",{"_index":103,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["prismaservice",{"_index":160,"title":{"injectables/PrismaService.html":{}},"body":{"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["privatekey",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["problem",{"_index":549,"title":{},"body":{"index.html":{}}}],["process.env.jwt_private_key",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_public_key",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.pgpassword",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.pguser",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":140,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":504,"title":{},"body":{"index.html":{}}}],["projects",{"_index":698,"title":{},"body":{"index.html":{}}}],["promisify(fs.writefile",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":135,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{}}}],["provide",{"_index":128,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["publickey",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queries",{"_index":550,"title":{},"body":{"index.html":{}}}],["query",{"_index":67,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["querying",{"_index":544,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":189,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["really",{"_index":606,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["releases",{"_index":730,"title":{},"body":{"index.html":{}}}],["reload",{"_index":525,"title":{},"body":{"index.html":{}}}],["remembermeexpiresin",{"_index":141,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["replicas",{"_index":681,"title":{},"body":{"index.html":{}}}],["repo",{"_index":489,"title":{},"body":{"index.html":{}}}],["req",{"_index":158,"title":{},"body":{"interfaces/Context.html":{},"injectables/GqlConfigService.html":{}}}],["requests",{"_index":601,"title":{},"body":{"index.html":{}}}],["requirements",{"_index":507,"title":{},"body":{"index.html":{}}}],["res",{"_index":159,"title":{},"body":{"interfaces/Context.html":{}}}],["reset",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"index.html":{},"overview.html":{}}}],["resolver",{"_index":79,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["resolver('comment",{"_index":99,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolver('group",{"_index":247,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolver('post",{"_index":304,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolver('user",{"_index":390,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers",{"_index":85,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["resolvers.mutation.createonecomment(parent",{"_index":109,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.createonegroup(parent",{"_index":255,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.createonepost(parent",{"_index":312,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.createoneuser(parent",{"_index":398,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.deletemanycomment(parent",{"_index":117,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.deletemanygroup(parent",{"_index":263,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.deletemanypost(parent",{"_index":320,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.deletemanyuser(parent",{"_index":406,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.deleteonecomment(parent",{"_index":113,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.deleteonegroup(parent",{"_index":259,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.deleteonepost(parent",{"_index":316,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.deleteoneuser(parent",{"_index":402,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.updatemanycomment(parent",{"_index":119,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.updatemanygroup(parent",{"_index":265,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.updatemanypost(parent",{"_index":322,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.updatemanyuser(parent",{"_index":408,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.updateonecomment(parent",{"_index":111,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.updateonegroup(parent",{"_index":257,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.updateonepost(parent",{"_index":314,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.updateoneuser(parent",{"_index":400,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.upsertonecomment(parent",{"_index":115,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.upsertonegroup(parent",{"_index":261,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.upsertonepost(parent",{"_index":318,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.upsertoneuser(parent",{"_index":404,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findmanycomment(parent",{"_index":105,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.query.findmanycommentcount(parent",{"_index":107,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.query.findmanygroup(parent",{"_index":251,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.query.findmanygroupcount(parent",{"_index":253,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.query.findmanypost(parent",{"_index":308,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.query.findmanypostcount(parent",{"_index":310,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.query.findmanyuser(parent",{"_index":394,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findmanyusercount(parent",{"_index":396,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findonecomment(parent",{"_index":102,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.query.findonegroup(parent",{"_index":249,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.query.findonepost(parent",{"_index":306,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.query.findoneuser(parent",{"_index":392,"title":{},"body":{"classes/UserResolver.html":{}}}],["responsive",{"_index":644,"title":{},"body":{"index.html":{}}}],["result",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":101,"title":{},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["returns",{"_index":61,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":662,"title":{},"body":{"index.html":{}}}],["route",{"_index":652,"title":{},"body":{"index.html":{}}}],["rs256",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":519,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["safe",{"_index":586,"title":{},"body":{"index.html":{}}}],["samplecommentfield",{"_index":97,"title":{},"body":{"classes/CommentResolver.html":{}}}],["samplecommentmutation(args",{"_index":94,"title":{},"body":{"classes/CommentResolver.html":{}}}],["samplecommentquery",{"_index":92,"title":{},"body":{"classes/CommentResolver.html":{}}}],["samplegroupfield",{"_index":246,"title":{},"body":{"classes/GroupResolver.html":{}}}],["samplegroupmutation(args",{"_index":245,"title":{},"body":{"classes/GroupResolver.html":{}}}],["samplegroupquery",{"_index":243,"title":{},"body":{"classes/GroupResolver.html":{}}}],["samplepostfield",{"_index":303,"title":{},"body":{"classes/PostResolver.html":{}}}],["samplepostmutation(args",{"_index":302,"title":{},"body":{"classes/PostResolver.html":{}}}],["samplepostquery",{"_index":300,"title":{},"body":{"classes/PostResolver.html":{}}}],["sampleuserfield",{"_index":389,"title":{},"body":{"classes/UserResolver.html":{}}}],["sampleusermutation(args",{"_index":388,"title":{},"body":{"classes/UserResolver.html":{}}}],["sampleuserquery",{"_index":386,"title":{},"body":{"classes/UserResolver.html":{}}}],["sass",{"_index":684,"title":{},"body":{"index.html":{}}}],["scaling",{"_index":631,"title":{},"body":{"index.html":{}}}],["schema",{"_index":474,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["schema.ts",{"_index":433,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["schematics",{"_index":720,"title":{},"body":{"index.html":{}}}],["scope",{"_index":343,"title":{},"body":{"injectables/PrismaService.html":{}}}],["scope.request",{"_index":347,"title":{},"body":{"injectables/PrismaService.html":{}}}],["scripts",{"_index":728,"title":{},"body":{"index.html":{}}}],["sdl",{"_index":570,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["security",{"_index":670,"title":{},"body":{"index.html":{}}}],["select",{"_index":84,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sensitivity",{"_index":543,"title":{},"body":{"index.html":{}}}],["server",{"_index":452,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":723,"title":{},"body":{"index.html":{}}}],["services",{"_index":584,"title":{},"body":{"index.html":{}}}],["set",{"_index":648,"title":{},"body":{"index.html":{}}}],["set_null",{"_index":555,"title":{},"body":{"index.html":{}}}],["setup",{"_index":505,"title":{},"body":{"index.html":{}}}],["several",{"_index":600,"title":{},"body":{"index.html":{}}}],["short",{"_index":603,"title":{},"body":{"index.html":{}}}],["show/hide",{"_index":655,"title":{},"body":{"index.html":{}}}],["side",{"_index":661,"title":{},"body":{"index.html":{}}}],["sign",{"_index":649,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":585,"title":{},"body":{"index.html":{}}}],["simplify",{"_index":590,"title":{},"body":{"index.html":{}}}],["single",{"_index":641,"title":{},"body":{"index.html":{}}}],["solve",{"_index":547,"title":{},"body":{"index.html":{}}}],["sort",{"_index":749,"title":{},"body":{"index.html":{}}}],["sort](https://www.npmjs.com/package/prettier",{"_index":747,"title":{},"body":{"index.html":{}}}],["source",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["spa",{"_index":640,"title":{},"body":{"index.html":{}}}],["specifically",{"_index":638,"title":{},"body":{"index.html":{}}}],["stack",{"_index":481,"title":{},"body":{"index.html":{}}}],["stack/graphql",{"_index":537,"title":{},"body":{"index.html":{}}}],["standard",{"_index":647,"title":{},"body":{"index.html":{}}}],["standardized",{"_index":752,"title":{},"body":{"index.html":{}}}],["start",{"_index":524,"title":{},"body":{"index.html":{}}}],["start:api",{"_index":521,"title":{},"body":{"index.html":{}}}],["started",{"_index":477,"title":{"index.html":{}},"body":{"index.html":{}}}],["stateless",{"_index":674,"title":{},"body":{"index.html":{}}}],["statements",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":98,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["structure",{"_index":754,"title":{},"body":{"index.html":{}}}],["styles",{"_index":702,"title":{},"body":{"index.html":{}}}],["styling",{"_index":683,"title":{},"body":{"index.html":{}}}],["subscriptions",{"_index":626,"title":{},"body":{"index.html":{}}}],["super(options",{"_index":349,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":760,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":565,"title":{},"body":{"index.html":{}}}],["svc",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":761,"title":{},"body":{"modules.html":{}}}],["system",{"_index":636,"title":{},"body":{"index.html":{}}}],["table",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":82,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["team",{"_index":561,"title":{},"body":{"index.html":{}}}],["temp",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":725,"title":{},"body":{"index.html":{}}}],["text",{"_index":545,"title":{},"body":{"index.html":{}}}],["theme",{"_index":690,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":353,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":354,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.config.graphql.playground",{"_index":195,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["this.config.production",{"_index":194,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["through",{"_index":699,"title":{},"body":{"index.html":{}}}],["tokens)](https://docs.nestjs.com/techniques/authentication#jwt",{"_index":676,"title":{},"body":{"index.html":{}}}],["tool",{"_index":576,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":727,"title":{},"body":{"index.html":{}}}],["tools",{"_index":457,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["tracing",{"_index":197,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["transpiler",{"_index":687,"title":{},"body":{"index.html":{}}}],["true",{"_index":192,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.app.json",{"_index":738,"title":{},"body":{"index.html":{}}}],["type",{"_index":91,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typedefs",{"_index":190,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":199,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":493,"title":{},"body":{"index.html":{}}}],["up",{"_index":517,"title":{},"body":{"index.html":{}}}],["updatemanycomment",{"_index":47,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updatemanycomment(@parent",{"_index":118,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updatemanycomment(parent",{"_index":73,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updatemanygroup",{"_index":220,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updatemanygroup(@parent",{"_index":264,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updatemanygroup(parent",{"_index":235,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updatemanypost",{"_index":277,"title":{},"body":{"classes/PostResolver.html":{}}}],["updatemanypost(@parent",{"_index":321,"title":{},"body":{"classes/PostResolver.html":{}}}],["updatemanypost(parent",{"_index":292,"title":{},"body":{"classes/PostResolver.html":{}}}],["updatemanyuser",{"_index":363,"title":{},"body":{"classes/UserResolver.html":{}}}],["updatemanyuser(@parent",{"_index":407,"title":{},"body":{"classes/UserResolver.html":{}}}],["updatemanyuser(parent",{"_index":378,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateonecomment",{"_index":48,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updateonecomment(@parent",{"_index":110,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updateonecomment(parent",{"_index":75,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updateonegroup",{"_index":221,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updateonegroup(@parent",{"_index":256,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updateonegroup(parent",{"_index":237,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updateonepost",{"_index":278,"title":{},"body":{"classes/PostResolver.html":{}}}],["updateonepost(@parent",{"_index":313,"title":{},"body":{"classes/PostResolver.html":{}}}],["updateonepost(parent",{"_index":294,"title":{},"body":{"classes/PostResolver.html":{}}}],["updateoneuser",{"_index":364,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateoneuser(@parent",{"_index":399,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateoneuser(parent",{"_index":380,"title":{},"body":{"classes/UserResolver.html":{}}}],["upload",{"_index":612,"title":{},"body":{"index.html":{}}}],["uploading",{"_index":620,"title":{},"body":{"index.html":{}}}],["uploadlink](https://www.npmjs.com/package/apollo",{"_index":611,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":205,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["upsertonecomment",{"_index":49,"title":{},"body":{"classes/CommentResolver.html":{}}}],["upsertonecomment(@parent",{"_index":114,"title":{},"body":{"classes/CommentResolver.html":{}}}],["upsertonecomment(parent",{"_index":77,"title":{},"body":{"classes/CommentResolver.html":{}}}],["upsertonegroup",{"_index":222,"title":{},"body":{"classes/GroupResolver.html":{}}}],["upsertonegroup(@parent",{"_index":260,"title":{},"body":{"classes/GroupResolver.html":{}}}],["upsertonegroup(parent",{"_index":239,"title":{},"body":{"classes/GroupResolver.html":{}}}],["upsertonepost",{"_index":279,"title":{},"body":{"classes/PostResolver.html":{}}}],["upsertonepost(@parent",{"_index":317,"title":{},"body":{"classes/PostResolver.html":{}}}],["upsertonepost(parent",{"_index":296,"title":{},"body":{"classes/PostResolver.html":{}}}],["upsertoneuser",{"_index":365,"title":{},"body":{"classes/UserResolver.html":{}}}],["upsertoneuser(@parent",{"_index":403,"title":{},"body":{"classes/UserResolver.html":{}}}],["upsertoneuser(parent",{"_index":382,"title":{},"body":{"classes/UserResolver.html":{}}}],["use",{"_index":708,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":414,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["used",{"_index":735,"title":{},"body":{"index.html":{}}}],["user",{"_index":387,"title":{},"body":{"classes/UserResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userresolver",{"_index":355,"title":{"classes/UserResolver.html":{}},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usertypedef",{"_index":385,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":129,"title":{},"body":{"modules/ConfigModule.html":{}}}],["using",{"_index":575,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":691,"title":{},"body":{"index.html":{}}}],["v14",{"_index":742,"title":{},"body":{"index.html":{}}}],["v14git",{"_index":509,"title":{},"body":{"index.html":{}}}],["value",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":766,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":718,"title":{},"body":{"index.html":{}}}],["varying",{"_index":594,"title":{},"body":{"index.html":{}}}],["versioned",{"_index":729,"title":{},"body":{"index.html":{}}}],["via",{"_index":527,"title":{},"body":{"index.html":{}}}],["vs",{"_index":577,"title":{},"body":{"index.html":{}}}],["vscode",{"_index":528,"title":{},"body":{"index.html":{}}}],["vscode](https://marketplace.visualstudio.com/items?itemname=angular.ng",{"_index":724,"title":{},"body":{"index.html":{}}}],["vscode](https://marketplace.visualstudio.com/items?itemname=nrwl.angular",{"_index":711,"title":{},"body":{"index.html":{}}}],["web",{"_index":482,"title":{},"body":{"index.html":{}}}],["websocketlink",{"_index":625,"title":{},"body":{"index.html":{}}}],["websocketlink](https://www.apollographql.com/docs/react/data/subscriptions/#2",{"_index":623,"title":{},"body":{"index.html":{}}}],["websockets",{"_index":628,"title":{},"body":{"index.html":{}}}],["welcome!&#x1f331",{"_index":496,"title":{},"body":{"index.html":{}}}],["within",{"_index":588,"title":{},"body":{"index.html":{}}}],["work",{"_index":639,"title":{},"body":{"index.html":{}}}],["writegraphqlschema",{"_index":434,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["writegraphqlschema(outpath",{"_index":473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["x",{"_index":532,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["x1f367",{"_index":497,"title":{},"body":{"index.html":{}}}],["x1f370",{"_index":503,"title":{},"body":{"index.html":{}}}],["x1f380",{"_index":589,"title":{},"body":{"index.html":{}}}],["x1f939",{"_index":491,"title":{},"body":{"index.html":{}}}],["yes",{"_index":337,"title":{},"body":{"injectables/PrismaService.html":{}}}],["zen",{"_index":478,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["zenadmin",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zengraphqlmodule",{"_index":15,"title":{"modules/ZenGraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["zensoftware.ca",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zensoftware/zen",{"_index":490,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAppModule -->\n\nJwtModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nAppModule -->\n\nZenGraphQLModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            JwtModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ZenGraphQLModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigModule } from './config';\nimport { ZenGraphQLModule } from './graphql';\nimport { JwtModule } from './jwt';\nimport { PrismaModule } from './prisma';\n\n@Module({\n  imports: [ConfigModule, JwtModule, ZenGraphQLModule, PrismaModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentResolver.html":{"url":"classes/CommentResolver.html","title":"class - CommentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Comment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneComment\n                            \n                            \n                                    Async\n                                deleteManyComment\n                            \n                            \n                                    Async\n                                deleteOneComment\n                            \n                            \n                                    Async\n                                findManyComment\n                            \n                            \n                                    Async\n                                findManyCommentCount\n                            \n                            \n                                    Async\n                                findOneComment\n                            \n                            \n                                    Async\n                                updateManyComment\n                            \n                            \n                                    Async\n                                updateOneComment\n                            \n                            \n                                    Async\n                                upsertOneComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyCommentCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyCommentCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/Comment/resolvers';\n\nexport const CommentTypeDef = null;\n// export const CommentTypeDef = gql`\n//   extend type Query {\n//     sampleCommentQuery: Comment!\n//   }\n//   extend type Mutation {\n//     sampleCommentMutation(args: Int!): Boolean\n//   }\n//   extend type Comment {\n//     sampleCommentField: String\n//   }\n// `;\n\n@Resolver('Comment')\nexport class CommentResolver {\n  @Query()\n  async findOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyCommentCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyCommentCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyComment(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\nimport { environment } from '../../environments/environment';\nimport { ConfigService } from './config.service';\n\n@Global()\n@Module({\n  providers: [{ provide: ConfigService, useValue: environment }],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/config/config.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EnvironmentBase\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieDomain\n                            \n                            \n                                expressPort\n                            \n                            \n                                graphql\n                            \n                            \n                                jwtOptions\n                            \n                            \n                                postgres\n                            \n                            \n                                production\n                            \n                            \n                                rememberMeExpiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookieDomain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JwtModuleOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postgres\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PostgreSQLConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            production\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rememberMeExpiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:12\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { EnvironmentBase } from '../../environments/environment.base';\n\n@Injectable()\nexport class ConfigService extends EnvironmentBase {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Context.html":{"url":"interfaces/Context.html","title":"interface - Context","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Context\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/context.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        prisma\n                                \n                                \n                                            Optional\n                                        req\n                                \n                                \n                                            Optional\n                                        res\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        prisma\n                                    \n                                \n                                \n                                    \n                                        prisma:         PrismaService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PrismaService\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                    \n                                \n                                \n                                    \n                                        req:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        res\n                                    \n                                \n                                \n                                    \n                                        res:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PrismaService } from '../prisma';\n\nconst prisma = new PrismaService();\n\nexport interface Context {\n  req?: any;\n  res?: any;\n  prisma?: PrismaService;\n}\n\nexport function createContext(): Context {\n  return {\n    prisma,\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentBase.html":{"url":"classes/EnvironmentBase.html","title":"class - EnvironmentBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/environments/environment.base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieDomain\n                            \n                            \n                                expressPort\n                            \n                            \n                                graphql\n                            \n                            \n                                jwtOptions\n                            \n                            \n                                postgres\n                            \n                            \n                                production\n                            \n                            \n                                rememberMeExpiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookieDomain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JwtModuleOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postgres\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PostgreSQLConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            production\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rememberMeExpiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { JwtModuleOptions } from '@nestjs/jwt';\nimport { PoolConfig as PostgreSQLConfig } from 'pg';\n\nexport class EnvironmentBase {\n  production: boolean;\n  expressPort: string | number;\n  graphql: {\n    playground: boolean;\n  };\n  postgres: PostgreSQLConfig;\n  jwtOptions: JwtModuleOptions;\n  rememberMeExpiresIn: number;\n  cookieDomain: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlConfigService.html":{"url":"injectables/GqlConfigService.html","title":"injectable - GqlConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GqlConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/gql-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGqlOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/graphql/gql-config.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGqlOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGqlOptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/graphql/gql-config.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     GqlModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { GqlModuleOptions, GqlOptionsFactory } from '@nestjs/graphql';\n\nimport { ConfigService } from '../config';\nimport { PrismaService } from '../prisma';\nimport { ALL_TYPE_DEFS } from './resolvers';\n\n@Injectable()\nexport class GqlConfigService implements GqlOptionsFactory {\n  constructor(private readonly config: ConfigService) {}\n\n  createGqlOptions(): GqlModuleOptions {\n    return {\n      typeDefs: ALL_TYPE_DEFS,\n      installSubscriptionHandlers: true,\n      debug: !this.config.production,\n      playground: this.config.graphql.playground,\n      introspection: this.config.graphql.playground,\n      tracing: this.config.graphql.playground,\n      cors: this.config.production ? undefined : { credentials: true, origin: true },\n      context: ctx => {\n        return ctx.connection\n          ? { ...ctx, req: ctx.connection.context, prisma: new PrismaService() }\n          : { ...ctx, prisma: new PrismaService() };\n      },\n      uploads: {\n        maxFileSize: 20_000_000, // 20 MB\n        maxFiles: 5,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupResolver.html":{"url":"classes/GroupResolver.html","title":"class - GroupResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Group.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneGroup\n                            \n                            \n                                    Async\n                                deleteManyGroup\n                            \n                            \n                                    Async\n                                deleteOneGroup\n                            \n                            \n                                    Async\n                                findManyGroup\n                            \n                            \n                                    Async\n                                findManyGroupCount\n                            \n                            \n                                    Async\n                                findOneGroup\n                            \n                            \n                                    Async\n                                updateManyGroup\n                            \n                            \n                                    Async\n                                updateOneGroup\n                            \n                            \n                                    Async\n                                upsertOneGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyGroupCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyGroupCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/Group/resolvers';\n\nexport const GroupTypeDef = null;\n// export const GroupTypeDef = gql`\n//   extend type Query {\n//     sampleGroupQuery: Group!\n//   }\n//   extend type Mutation {\n//     sampleGroupMutation(args: Int!): Boolean\n//   }\n//   extend type Group {\n//     sampleGroupField: String\n//   }\n// `;\n\n@Resolver('Group')\nexport class GroupResolver {\n  @Query()\n  async findOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyGroupCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyGroupCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtModule.html":{"url":"modules/JwtModule.html","title":"module - JwtModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/jwt/jwt.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { JwtModule as NestJwtModule } from '@nestjs/jwt';\n\nimport { environment } from '../../environments/environment';\n\n@Global()\n@Module({\n  imports: [NestJwtModule.register(environment.jwtOptions)],\n  exports: [NestJwtModule],\n})\nexport class JwtModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PostResolver.html":{"url":"classes/PostResolver.html","title":"class - PostResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PostResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Post.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOnePost\n                            \n                            \n                                    Async\n                                deleteManyPost\n                            \n                            \n                                    Async\n                                deleteOnePost\n                            \n                            \n                                    Async\n                                findManyPost\n                            \n                            \n                                    Async\n                                findManyPostCount\n                            \n                            \n                                    Async\n                                findOnePost\n                            \n                            \n                                    Async\n                                updateManyPost\n                            \n                            \n                                    Async\n                                updateOnePost\n                            \n                            \n                                    Async\n                                upsertOnePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyPost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyPost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyPostCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyPostCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyPost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/Post/resolvers';\n\nexport const PostTypeDef = null;\n// export const PostTypeDef = gql`\n//   extend type Query {\n//     samplePostQuery: Post!\n//   }\n//   extend type Mutation {\n//     samplePostMutation(args: Int!): Boolean\n//   }\n//   extend type Post {\n//     samplePostField: String\n//   }\n// `;\n\n@Resolver('Post')\nexport class PostResolver {\n  @Query()\n  async findOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyPost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyPost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyPostCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyPostCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyPost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyPost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyPost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyPost(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/prisma/prisma.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/prisma/prisma.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onDelete\n                            \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: PrismaClientOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    PrismaClientOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDelete(args: onDeleteArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            onDeleteArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleDestroy, OnModuleInit, Optional, Scope } from '@nestjs/common';\nimport { PrismaDelete, onDeleteArgs } from '@paljs/plugins';\nimport { PrismaClient, PrismaClientOptions } from '@prisma/client';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n  constructor(@Optional() options?: PrismaClientOptions) {\n    super(options);\n  }\n\n  async onDelete(args: onDeleteArgs) {\n    const prismaDelete = new PrismaDelete(this);\n    await prismaDelete.onDelete(args);\n  }\n\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async onModuleDestroy() {\n    await this.$disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/User.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneUser\n                            \n                            \n                                    Async\n                                deleteManyUser\n                            \n                            \n                                    Async\n                                deleteOneUser\n                            \n                            \n                                    Async\n                                findManyUser\n                            \n                            \n                                    Async\n                                findManyUserCount\n                            \n                            \n                                    Async\n                                findOneUser\n                            \n                            \n                                    Async\n                                updateManyUser\n                            \n                            \n                                    Async\n                                updateOneUser\n                            \n                            \n                                    Async\n                                upsertOneUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyUserCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyUserCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/User/resolvers';\n\nexport const UserTypeDef = null;\n// export const UserTypeDef = gql`\n//   extend type Query {\n//     sampleUserQuery: User!\n//   }\n//   extend type Mutation {\n//     sampleUserMutation(args: Int!): Boolean\n//   }\n//   extend type User {\n//     sampleUserField: String\n//   }\n// `;\n\n@Resolver('User')\nexport class UserResolver {\n  @Query()\n  async findOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyUserCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyUserCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyUser(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZenGraphQLModule.html":{"url":"modules/ZenGraphQLModule.html","title":"module - ZenGraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    ZenGraphQLModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/graphql/zen-graphql.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\n\nimport { GqlConfigService } from './gql-config.service';\nimport { NEST_RESOLVERS } from './resolvers';\n\n@Global()\n@Module({\n  imports: [\n    GraphQLModule.forRootAsync({\n      useClass: GqlConfigService,\n    }),\n  ],\n  providers: [...NEST_RESOLVERS],\n})\nexport class ZenGraphQLModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            interface\n            Context\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            function\n            createContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/gql-config.service.ts\n            \n            injectable\n            GqlConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/prisma-select-args.ts\n            \n            function\n            PrismaSelectArgs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Comment.ts\n            \n            class\n            CommentResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Comment.ts\n            \n            variable\n            CommentTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Group.ts\n            \n            class\n            GroupResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Group.ts\n            \n            variable\n            GroupTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Post.ts\n            \n            class\n            PostResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Post.ts\n            \n            variable\n            PostTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/User.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/User.ts\n            \n            variable\n            UserTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            ALL_TYPE_DEFS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            GRAPHQL_SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            NEST_RESOLVERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            NEST_TYPE_DEFS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            PRISMA_SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/write-schema.ts\n            \n            function\n            WriteGraphQLSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/write-schema.ts\n            \n            variable\n            execWriteFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.base.ts\n            \n            class\n            EnvironmentBase\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.4.4\n        \n            @nestjs/core : ^7.4.4\n        \n            @nestjs/graphql : ^7.6.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/platform-express : ^7.4.4\n        \n            @paljs/plugins : ^1.2.6\n        \n            @prisma/client : ^2.6.2\n        \n            apollo-server-express : ^2.16.1\n        \n            dotenv : 6.2.0\n        \n            graphql : ^15.3.0\n        \n            graphql-tools : ^6.2.1\n        \n            merge-graphql-schemas : ^1.7.8\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~6.5.5\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createContext   (apps/.../context.ts)\n                        \n                        \n                            PrismaSelectArgs   (apps/.../prisma-select-args.ts)\n                        \n                        \n                            WriteGraphQLSchema   (apps/.../write-schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/api/src/app/graphql/context.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createContext\n                        \n                        \n                    \n                \n            \n            \n                \ncreateContext()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         Context\n\n                    \n                \n            \n        \n    \n    apps/api/src/app/graphql/prisma-select-args.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PrismaSelectArgs\n                        \n                        \n                    \n                \n            \n            \n                \nPrismaSelectArgs(info, args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/api/src/app/graphql/write-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            WriteGraphQLSchema\n                        \n                        \n                    \n                \n            \n            \n                \nWriteGraphQLSchema(outPath, schema)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n⛩ Zen ⛩\nModern Full Stack Web Portal built with Nest and Angular\nZen Docs\nGitHub repo ZenSoftware/Zen\n&#x1F939; Currently under development - New contributors are welcome!&#x1F331;\n&#x1F367; You may open a git issue if you are interested in contributing! &#x1F370;\n\nProject Setup Instructions\nRequirements\n\nNode v14git clone https://github.com/ZenSoftware/Zen.git --depth=1\ncd Zen\nnpm i\ndocker-compose up -d\nnpm run prisma:save\nnpm run start:api\n\n\nAfter api server has started\nnpm run apollo:watch\nnpm run start\n\nReload GraphQL schema for Apollo extension via VSCode command palette after the api server has started: `>Apollo: Reload schema`\n\n---\n\n## GraphQL Ambitions\n- [X] [Nest GraphQL](https://docs.nestjs.com/graphql/resolvers) resolvers as a gateway to [Prisma Client](https://www.prisma.io/docs/understand-prisma/prisma-in-your-stack/graphql).\n- [X] [Prisma Case Insensitive Filtering](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/case-sensitivity) For case-insensitive querying of text.\n- [X] [PrismaSelect](https://paljs.com/plugins/select/) to solve the N+1 problem for all queries for free.\n- [X] [PrismaDelete](https://paljs.com/plugins/delete) to add `CASCADE` and `SET_NULL` deletion capabilities to Prisma. These features have yet to be implemented by the core Prisma team.  This project will convert to the approach directly supported by Prisma when the official feature becomes available.\n- [X] [Nest GraphQL SDL generation](https://docs.nestjs.com/graphql/generating-sdl) to enable auto-completion using a tool like [Apollo extension for VS Code](https://www.apollographql.com/docs/devtools/editor-plugins/)\n- [X] [Code generation](https://graphql-code-generator.com/docs/plugins/typescript-apollo-angular) of [apollo-angular](https://www.apollographql.com/docs/angular/) services to enable simple, type safe access to the GraphQL API within Angular. &#x1F380;\n- [X] An Angular `GraphQLModule` to simplify the configuration of the `ApolloClient` to enable/disable the varying `ApolloLink` features.\n- [X] [HttpBatchLink](https://apollo-angular.com/docs/data/network#httpclient-1) for batching several GraphQL requests that occur within a short debounce interval. This really helps to alleviate network congestion.\n- [X] [UploadLink](https://www.npmjs.com/package/apollo-upload-client) to give `ApolloClient` HTTP multi-part form requests capabilities.  Enabling the uploading of files via `GraphQLUpload`.\n- [X] [WebSocketLink](https://www.apollographql.com/docs/react/data/subscriptions/#2-initialize-a-websocketlink) for GraphQL subscriptions over websockets.\n---\n\n## API Authentication, Performance & Scaling Ambitions\n- [ ] [Nest authentication](https://docs.nestjs.com/techniques/authentication) integration, user creation, and login system designed specifically to work for an [Angular SPA (single page application)](https://angular.io/).  This project will provide responsive, \"mobile first\" interfaces for the standard set of authentication features (sign up, login, password change).  \n- [ ] Angular route guards and Angular directives to show/hide content depending on user permissions.\n- [ ] [Nest authorization directives](https://docs.nestjs.com/techniques/authentication#extending-guards) for server side [role-based access control](https://en.wikipedia.org/wiki/Role-based_access_control?oldformat=true) to allow for declarative, fine grained security control over all GraphQL queries and mutations.\n- [x] 100% stateless web server authentication via [JWT (Javascript Web Tokens)](https://docs.nestjs.com/techniques/authentication#jwt-functionality). Keeping the API stateless will enable horizontal scaling of container replicas of the api in production.\n\n---\n\n## Modern Web Components and Styling Ambitions\n- [x] SASS chosen as the css transpiler of choice\n- [ ] [Angular Material](https://material.angular.io/) components & theme.\n- [ ] Directly import [Bootstrap reset, utilities, & grid](https://www.amadousall.com/the-good-parts-of-bootstrap-4-you-are-missing-in-your-angular-material-projects/) features through SASS imports, and exclude the Bootstrap theme and component styles. These features are missing from Angular Material, and greatly simplify the creation of responsive, mobile first applications.\n\n---\n\n## Project & Dev Tools Ambitions\n\n- [x] [Nx for project management](https://nx.dev/angular) to allow for the use of [Nx Console extensions for VSCode](https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console).  Nx Console is a GUI interface for monorepos that adds a lot of modern developer conveniences.  It also helps to simplify the use of the various Angular & Nest code generation schematics available in the ecosystem.\n- [x] [Angular Language Service for VSCode](https://marketplace.visualstudio.com/items?itemName=Angular.ng-template) for modern IDE tooling.\n- [x] NPM scripts for versioned releases of the **api** server as a containerized Docker image.  [node:14-alpine](https://hub.docker.com/_/node?tab=description&ref=hackernoon.com) is used as the Docker container base image, and the appropriate `tsconfig.app.json` configurations are being applied for the Node v14 Nest app.\n- [x] Enforced code formatting via [Prettier](https://prettier.io/) & [import-sort](https://www.npmjs.com/package/prettier-plugin-import-sort), guaranteeing all contributions to the project are standardized with predictable structure, and clear legibility.\n- [X] [Compodoc](https://compodoc.app/) to generate Nest & Angular documentation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZenGraphQLModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAppModule -->\n\nJwtModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nAppModule -->\n\nZenGraphQLModule->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_TYPE_DEFS   (apps/.../index.ts)\n                        \n                        \n                            CommentTypeDef   (apps/.../Comment.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            execWriteFile   (apps/.../write-schema.ts)\n                        \n                        \n                            GRAPHQL_SCHEMA   (apps/.../index.ts)\n                        \n                        \n                            GroupTypeDef   (apps/.../Group.ts)\n                        \n                        \n                            NEST_RESOLVERS   (apps/.../index.ts)\n                        \n                        \n                            NEST_TYPE_DEFS   (apps/.../index.ts)\n                        \n                        \n                            PostTypeDef   (apps/.../Post.ts)\n                        \n                        \n                            prisma   (apps/.../context.ts)\n                        \n                        \n                            PRISMA_SCHEMA   (apps/.../index.ts)\n                        \n                        \n                            UserTypeDef   (apps/.../User.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/graphql/resolvers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_TYPE_DEFS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mergeTypes([PRISMA_TYPE_DEFS, ...NEST_TYPE_DEFS])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GRAPHQL_SCHEMA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : makeExecutableSchema({ typeDefs: ALL_TYPE_DEFS })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NEST_RESOLVERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  CommentResolver,\n  GroupResolver,\n  PostResolver,\n  UserResolver\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NEST_TYPE_DEFS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : [\n  CommentTypeDef,\n  GroupTypeDef,\n  PostTypeDef,\n  UserTypeDef\n].filter(x => x)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PRISMA_SCHEMA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : makeExecutableSchema({ typeDefs: PRISMA_TYPE_DEFS })\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Comment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CommentTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  expressPort: 7080,\n  graphql: {\n    playground: true,\n  },\n  postgres: {\n    host: 'localhost',\n    port: 5445,\n    user: 'ZenAdmin',\n    password: 'temp',\n    database: 'zen',\n  },\n  jwtOptions: {\n    secret: 'dev secret',\n    signOptions: {\n      algorithm: 'HS256',\n      expiresIn: 3600, // 1 hour (in seconds)\n    },\n  },\n  rememberMeExpiresIn: 2592000, // 30 days (in seconds)\n  cookieDomain: undefined,\n}\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  expressPort: process.env.PORT,\n  graphql: {\n    playground: false,\n  },\n  postgres: {\n    host: 'postgres-svc',\n    port: 5432,\n    user: process.env.PGUSER,\n    password: process.env.PGPASSWORD,\n    database: 'prisma',\n  },\n  jwtOptions: {\n    privateKey: process.env.JWT_PRIVATE_KEY,\n    publicKey: process.env.JWT_PUBLIC_KEY,\n    signOptions: {\n      algorithm: 'RS256',\n      expiresIn: 3600, // 1 hour (in seconds)\n    },\n  },\n  rememberMeExpiresIn: 2592000, // 30 days (in seconds)\n  cookieDomain: 'zensoftware.ca',\n}\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/write-schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            execWriteFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : promisify(fs.writeFile)\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Group.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GroupTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Post.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PostTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/context.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            prisma\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PrismaService()\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/User.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
