var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.894,1,2.164]],["body/modules/AppModule.html",[0,1.488,1,4.325,2,1.49,3,1.609,4,1.889,5,1.889,6,1.49,7,1.889,8,1.741,9,3.189,10,3.189,11,3.668,12,0.029,13,3.071,14,3.071,15,3.668,16,2.456,17,1.193,18,1.889,19,0.268,20,0.309,21,0.268,22,3.793,23,2.676,24,0.699,25,0.886,26,2.058,27,1.609,28,1.609,29,1.741,30,0.309,31,0.083,32,0.016,33,0.021,34,0.016]],["title/classes/AuthLoginInput.html",[31,0.072,35,1.958]],["body/classes/AuthLoginInput.html",[12,0.028,19,0.266,20,0.307,21,0.266,24,0.57,30,0.307,31,0.107,32,0.016,33,0.021,34,0.016,35,2.921,36,1.481,37,2.883,38,3.443,39,1.876,40,0.438,41,1.436,42,2.022,43,2.508,44,1.719,45,3.25,46,0.635,47,1.252,48,2.508,49,2.477,50,1.377,51,3.168,52,4.912,53,3.614,54,3.769,55,2.254,56,5.465,57,3.769,58,2.477,59,2.477,60,1.374,61,3.229,62,2.477,63,2.477,64,1.876,65,2.477]],["title/modules/AuthModule.html",[0,0.894,66,1.958]],["body/modules/AuthModule.html",[0,1.373,2,1.27,3,1.371,4,1.61,5,1.61,6,1.27,7,2.519,8,2.322,12,0.029,13,3.197,14,2.934,16,2.207,17,1.017,18,1.61,19,0.228,20,0.263,21,0.228,23,2.405,24,0.701,25,0.755,28,1.88,29,1.483,30,0.263,31,0.071,32,0.014,33,0.019,34,0.014,66,3.921,67,2.718,68,3.233,69,2.718,70,2.718,71,3.483,72,3.197,73,3.504,74,3.233,75,4.433,76,2.125,77,3.233,78,1.923,79,3.233,80,3.233,81,3.233]],["title/classes/AuthPasswordChangeInput.html",[31,0.072,82,1.958]],["body/classes/AuthPasswordChangeInput.html",[12,0.028,19,0.283,20,0.326,21,0.283,24,0.593,30,0.326,31,0.111,32,0.017,33,0.022,34,0.017,36,1.573,37,2.8,39,1.993,40,0.465,41,1.492,42,1.968,44,1.769,46,0.593,47,1.281,48,2.343,50,1.287,53,3.757,58,2.631,59,2.631,60,1.459,62,2.631,64,1.993,82,3.037,83,4.137,84,3.696,85,4.137,86,3.757,87,2.945,88,4.137,89,2.631]],["title/classes/AuthPasswordResetConfirmationInput.html",[31,0.072,90,1.958]],["body/classes/AuthPasswordResetConfirmationInput.html",[12,0.028,17,1.76,19,0.28,20,0.323,21,0.28,24,0.589,30,0.323,31,0.111,32,0.017,33,0.022,34,0.017,36,1.557,37,2.787,39,1.972,40,0.46,41,1.483,42,1.963,44,1.76,46,0.589,47,1.276,48,2.328,50,1.278,53,3.732,58,2.604,59,2.604,60,1.444,62,2.604,64,1.972,84,3.678,86,3.732,87,2.914,88,4.117,89,2.604,90,3.017,91,4.705,92,3.036]],["title/classes/AuthPasswordResetRequestInput.html",[31,0.072,93,1.958]],["body/classes/AuthPasswordResetRequestInput.html",[12,0.028,17,1.696,19,0.308,20,0.355,21,0.308,24,0.507,30,0.355,31,0.118,32,0.019,33,0.023,34,0.019,36,1.715,37,2.684,39,2.173,40,0.507,41,1.576,42,1.84,43,2.685,44,1.696,46,0.507,47,1.166,48,2.002,49,2.868,50,1.099,61,3.544,63,2.868,64,2.173,65,2.868,89,2.868,93,3.206,94,3.544]],["title/classes/AuthRegisterInput.html",[31,0.072,95,1.958]],["body/classes/AuthRegisterInput.html",[12,0.028,19,0.255,20,0.294,21,0.255,24,0.554,30,0.294,31,0.104,32,0.015,33,0.02,34,0.015,36,1.416,37,2.947,39,1.795,40,0.419,41,1.394,42,2.054,43,2.454,44,1.682,46,0.661,47,1.362,48,2.189,49,2.369,50,1.434,51,3.03,58,2.369,59,2.369,60,1.314,61,3.136,62,2.369,63,2.369,64,1.795,65,2.369,86,3.51,87,2.652,88,2.652,95,2.837,96,4.976,97,1.927,98,3.934,99,4.495,100,3.605,101,4.01,102,3.605]],["title/classes/AuthResendVerificationInput.html",[31,0.072,103,2.423]],["body/classes/AuthResendVerificationInput.html",[12,0.028,19,0.311,20,0.358,21,0.311,24,0.511,30,0.358,31,0.118,32,0.019,33,0.023,34,0.019,36,1.728,37,2.697,39,2.189,40,0.511,41,1.583,42,1.846,43,2.694,46,0.511,47,1.171,48,2.018,49,2.89,50,1.108,61,3.56,63,2.89,64,2.189,65,2.89,89,2.89,103,3.985,104,4.553,105,4.553]],["title/classes/AuthResolver.html",[31,0.072,106,2.164]],["body/classes/AuthResolver.html",[12,0.029,19,0.086,20,0.099,21,0.086,24,0.569,25,0.283,26,1.734,27,0.513,28,0.513,30,0.168,31,0.026,32,0.005,33,0.009,34,0.005,35,2.324,36,0.475,40,0.141,41,0.604,42,1.005,43,1.915,44,1.128,45,1.228,46,0.584,47,1.171,48,1.793,50,1.156,55,1.646,71,1.734,72,0.602,78,1.228,82,2.324,84,1.358,85,0.89,90,2.324,92,0.657,93,2.324,95,2.324,97,1.489,98,1.52,99,1.017,106,1.358,107,0.89,108,3.126,109,2.703,110,0.948,111,3.111,112,2.272,113,2.066,114,2.703,115,2.703,116,2.703,117,2.066,118,2.066,119,1.029,120,1.21,121,1.256,122,3.07,123,2.686,124,1.734,125,1.21,126,1.865,127,1.865,128,1.776,129,2.272,130,0.89,131,0.89,132,1.776,133,1.52,134,1.736,135,2.351,136,1.736,137,1.358,138,1.736,139,1.21,140,1.21,141,3.138,142,3.908,143,1.915,144,1.21,145,1.21,146,3.696,147,1.77,148,1.21,149,5.561,150,3.07,151,1.21,152,1.21,153,1.21,154,1.21,155,1.21,156,3.07,157,1.21,158,1.21,159,1.21,160,1.21,161,1.21,162,2.066,163,1.21,164,4.756,165,1.017,166,0.795,167,1.466,168,1.017,169,0.657,170,1.21,171,1.017,172,0.795,173,1.017,174,1.776,175,0.795,176,1.21,177,1.017,178,2.181,179,0.89,180,1.52,181,1.017,182,1.466,183,1.017,184,1.017,185,1.017,186,1.017,187,2.56,188,1.786,189,0.876,190,3.016,191,1.21,192,1.21,193,3.925,194,1.21,195,1.21,196,1.017,197,1.21,198,1.466,199,1.21,200,1.21,201,3.588,202,2.703,203,3.858,204,2.49,205,3.858,206,3.588,207,4.59,208,3.195,209,1.21,210,2.066,211,1.21,212,2.066,213,1.21,214,1.736,215,1.21,216,2.066,217,2.066,218,1.21,219,1.21,220,2.066,221,1.21,222,1.21,223,1.21,224,2.066,225,1.21,226,3.908,227,1.21,228,2.703,229,1.21,230,1.21,231,1.21,232,1.21,233,1.017,234,1.21,235,2.066,236,1.21,237,1.21,238,1.21,239,1.21,240,1.21,241,2.066,242,2.066,243,1.736,244,1.21,245,1.21]],["title/injectables/AuthService.html",[71,1.787,246,0.894]],["body/injectables/AuthService.html",[12,0.029,19,0.196,20,0.226,21,0.196,24,0.652,25,0.649,26,2.763,28,1.178,30,0.226,31,0.061,32,0.012,33,0.017,34,0.012,40,0.322,42,1.253,45,3.581,46,0.463,47,1.101,50,1.004,55,2.138,71,2.162,92,2.162,97,1.349,108,1.825,110,1.828,119,1.382,121,2.001,122,4.128,126,1.69,127,1.69,128,1.825,129,4.532,130,2.043,131,2.043,132,3.063,134,2.334,135,2.931,136,2.334,137,1.825,138,2.334,143,2.336,147,1.178,172,1.825,178,2.38,182,2.162,187,2.32,188,1.984,189,1.69,198,1.274,243,3.349,246,1.082,247,1.274,248,2.334,249,3.984,250,2.777,251,2.777,252,3.984,253,5.612,254,2.777,255,2.334,256,2.931,257,2.777,258,2.777,259,1.825,260,2.777,261,1.651,262,1.651,263,3.349,264,2.777,265,2.043,266,3.428,267,2.777,268,2.777,269,1.825,270,2.777,271,2.777,272,2.777,273,2.777,274,2.777,275,2.777,276,2.777]],["title/interfaces/AuthSession.html",[182,1.787,277,1.115]],["body/interfaces/AuthSession.html",[12,0.028,19,0.303,20,0.349,21,0.303,30,0.349,32,0.018,33,0.023,34,0.018,40,0.497,41,1.557,45,3.61,46,0.705,47,1.423,55,2.662,60,1.561,132,3.99,182,2.891,188,3.023,189,2.575,277,1.45,278,3.601,279,3.601]],["title/modules/ConfigModule.html",[0,0.894,11,1.958]],["body/modules/ConfigModule.html",[0,1.549,2,1.623,3,1.752,4,2.057,5,2.057,6,1.623,7,2.594,8,2.619,11,3.674,12,0.028,16,2.594,17,1.299,18,2.057,19,0.292,20,0.336,21,0.292,24,0.663,25,0.965,30,0.336,31,0.09,32,0.018,33,0.022,34,0.018,121,2.546,280,3.472,281,3.472,282,4.131,283,4.38,284,3.098,285,3.039,286,3.472,287,3.472,288,4.131]],["title/injectables/ConfigService.html",[121,1.294,246,0.894]],["body/injectables/ConfigService.html",[12,0.028,19,0.253,20,0.292,21,0.253,24,0.552,25,0.837,27,2.015,30,0.292,31,0.078,32,0.015,33,0.02,34,0.015,40,0.416,41,1.388,46,0.747,47,1.027,50,1.585,55,1.644,121,1.867,246,1.29,247,1.644,269,3.123,289,3.011,290,3.123,291,3.854,292,3.495,293,3.495,294,3.495,295,3.495,296,3.123,297,3.495,298,3.495,299,6.29,300,3.582,301,3.582,302,3.994,303,3.582,304,3.011,305,3.582,306,3.011,307,3.582,308,3.582,309,3.582,310,3.582,311,3.582]],["title/classes/EnvironmentBase.html",[31,0.072,291,1.958]],["body/classes/EnvironmentBase.html",[12,0.029,19,0.243,20,0.28,21,0.243,24,0.537,27,2.217,30,0.28,31,0.075,32,0.015,33,0.02,34,0.015,36,1.353,38,2.048,40,0.4,41,1.352,44,1.083,46,0.741,47,1.366,50,1.571,55,2.398,269,3.673,291,2.752,292,3.845,293,3.845,294,3.845,295,3.845,296,3.435,297,3.845,298,3.845,302,3.89,304,4.394,306,4.394,312,2.895,313,3.444,314,3.444,315,3.444,316,3.444,317,3.444,318,3.444,319,3.444,320,3.444,321,2.534,322,3.444,323,3.444,324,2.534,325,2.264,326,2.895,327,2.895]],["title/injectables/GqlConfigService.html",[246,0.894,328,2.164]],["body/injectables/GqlConfigService.html",[12,0.029,19,0.218,20,0.251,21,0.218,24,0.691,25,0.719,26,2.675,27,1.306,29,2.446,30,0.251,31,0.067,32,0.013,33,0.018,34,0.013,40,0.358,42,0.968,46,0.358,50,1.08,97,1.042,108,2.023,110,1.967,111,1.67,119,1.533,121,2.095,126,1.306,127,1.306,135,3.153,137,2.023,146,3.241,147,1.306,167,1.413,169,1.67,178,1.306,198,1.967,246,1.163,247,1.413,256,2.265,259,2.023,261,2.932,265,2.265,324,2.265,328,2.817,329,4.145,330,2.588,331,5.332,332,2.588,333,5.954,334,3.079,335,3.079,336,4.931,337,3.079,338,2.265,339,4.286,340,3.079,341,1.533,342,2.265,343,2.023,344,2.588,345,2.588,346,3.079,347,3.079,348,3.079,349,4.931,350,3.079,351,3.079,352,3.079,353,3.079,354,3.079,355,3.079,356,3.079,357,2.023,358,3.079,359,3.079,360,3.079,361,3.079,362,3.079,363,3.079,364,3.079,365,2.588]],["title/injectables/GqlGuard.html",[72,1.64,246,0.894]],["body/injectables/GqlGuard.html",[12,0.029,19,0.219,20,0.253,21,0.219,24,0.653,25,0.725,30,0.253,31,0.068,32,0.013,33,0.018,34,0.013,40,0.36,42,0.976,46,0.575,50,1.248,72,2.146,76,2.04,97,1.676,110,1.978,111,2.687,119,1.545,126,2.1,127,2.1,133,2.283,146,2.833,147,1.828,167,1.978,169,1.684,175,3.255,178,2.384,187,1.545,193,2.283,198,2.272,246,1.17,247,1.424,259,2.04,261,1.845,263,2.609,290,2.04,338,2.283,366,2.609,367,4.31,368,4.31,369,3.103,370,5.818,371,3.103,372,4.31,373,5.016,374,3.103,375,4.31,376,3.103,377,3.103,378,3.103,379,2.283,380,3.103,381,2.609,382,3.103,383,4.31,384,3.103,385,4.952,386,4.31,387,3.103,388,4.31,389,3.103,390,4.952,391,3.103,392,3.103,393,3.103,394,3.103,395,3.103]],["title/interfaces/IContext.html",[141,1.787,277,1.115]],["body/interfaces/IContext.html",[12,0.028,19,0.308,20,0.355,21,0.308,24,0.507,29,2.881,30,0.355,32,0.019,33,0.023,34,0.019,40,0.507,41,1.576,46,0.679,60,1.591,97,2.165,141,2.925,255,5.137,277,1.477,341,3.043,357,4.016,396,3.668]],["title/modules/JwtModule.html",[0,0.894,13,1.64]],["body/modules/JwtModule.html",[0,1.513,2,1.81,8,2.114,12,0.028,13,2.983,19,0.326,20,0.375,21,0.326,23,2.499,24,0.696,25,1.076,30,0.375,31,0.101,32,0.02,33,0.024,34,0.02,284,2.739,285,3.389,321,3.389,397,4.606,398,5.573,399,4.606]],["title/interfaces/JwtPayload.html",[262,1.958,277,1.115]],["body/interfaces/JwtPayload.html",[12,0.028,19,0.26,20,0.3,21,0.26,30,0.3,32,0.016,33,0.021,34,0.016,40,0.428,41,1.415,42,1.962,46,0.724,47,1.437,60,1.343,97,2.188,188,2.858,189,2.435,262,2.878,269,4.022,277,1.247,400,3.098,401,3.098,402,5.741,403,5.741,404,5.741,405,5.741,406,5.741]],["title/injectables/JwtStrategy.html",[73,1.958,246,0.894]],["body/injectables/JwtStrategy.html",[12,0.029,19,0.22,20,0.253,21,0.22,24,0.693,25,0.727,26,2.69,28,2.103,30,0.253,31,0.068,32,0.013,33,0.018,34,0.013,40,0.361,42,0.979,46,0.501,47,0.673,50,1.088,73,2.568,76,2.045,92,1.688,94,3.259,97,1.462,110,1.981,111,2.69,119,1.549,121,2.105,126,1.832,127,1.832,143,1.981,147,1.32,172,2.045,178,1.32,187,2.469,188,1.549,189,2.103,198,2.275,246,1.172,247,1.428,259,2.045,262,3.185,290,2.045,332,2.616,357,2.045,381,2.616,407,2.616,408,4.318,409,3.112,410,4.318,411,3.112,412,4.318,413,3.112,414,3.112,415,4.318,416,3.112,417,2.616,418,3.112,419,3.112,420,3.112,421,3.112,422,3.112,423,3.112,424,4.318,425,3.112,426,2.616,427,3.112,428,3.112,429,3.112,430,3.112,431,3.112]],["title/modules/MailModule.html",[0,0.894,432,1.958]],["body/modules/MailModule.html",[0,1.415,2,1.345,3,1.452,4,1.705,5,1.705,6,1.345,7,2.595,8,2.391,12,0.029,13,2.984,16,2.295,17,1.077,18,1.705,19,0.242,20,0.279,21,0.242,23,2.501,24,0.696,25,0.8,28,1.452,30,0.279,31,0.075,32,0.015,33,0.02,34,0.015,124,3.516,137,2.25,204,1.858,261,2.036,284,2.036,285,2.519,432,3.752,433,2.878,434,3.424,435,2.878,436,2.878,437,3.424,438,4.61,439,4.61,440,3.424,441,2.25,442,2.519,443,3.424,444,3.424,445,3.424,446,3.424,447,3.424,448,3.424,449,3.424,450,2.878,451,3.424,452,3.424,453,3.424,454,3.424,455,2.519]],["title/injectables/MailService.html",[124,1.787,246,0.894]],["body/injectables/MailService.html",[12,0.029,17,1.662,19,0.213,20,0.245,21,0.213,24,0.646,25,0.704,26,2.866,28,1.279,30,0.245,31,0.066,32,0.013,33,0.018,34,0.013,40,0.35,42,1.534,43,1.938,44,1.534,46,0.646,47,1.054,50,1.228,92,1.636,97,1.651,108,3.204,110,1.938,119,2.103,121,2.076,122,4.355,124,2.292,126,2.068,127,2.068,147,1.792,167,1.938,178,1.792,198,1.383,246,1.146,247,1.383,266,2.218,441,1.981,442,2.218,450,3.551,455,2.218,456,2.218,457,4.224,458,4.224,459,3.015,460,5.283,461,3.015,462,4.224,463,4.224,464,4.441,465,3.015,466,4.224,467,3.015,468,3.015,469,4.224,470,2.776,471,3.015,472,3.551,473,2.534,474,3.015,475,3.015,476,3.015,477,2.534,478,3.015,479,3.015,480,3.015,481,3.015,482,3.015,483,3.015]],["title/interfaces/PasswordResetContext.html",[277,1.115,470,2.164]],["body/interfaces/PasswordResetContext.html",[12,0.027,19,0.336,20,0.387,21,0.336,30,0.387,32,0.02,33,0.024,34,0.02,40,0.552,41,1.66,46,0.552,47,1.314,60,1.734,277,1.611,470,3.734,477,5.29,484,3.999,485,3.999]],["title/modules/PrismaModule.html",[0,0.894,14,1.64]],["body/modules/PrismaModule.html",[0,1.557,2,1.641,3,1.771,4,2.079,5,2.079,6,1.641,7,2.855,8,2.632,12,0.028,14,3.197,16,2.612,17,1.313,18,2.079,19,0.295,20,0.34,21,0.295,24,0.609,25,0.975,30,0.34,31,0.091,32,0.018,33,0.022,34,0.018,341,3.321,486,3.51,487,3.51,488,3.51,489,4.175,490,4.175]],["title/injectables/PrismaService.html",[246,0.894,341,1.64]],["body/injectables/PrismaService.html",[12,0.029,19,0.241,20,0.277,21,0.241,24,0.603,25,0.795,30,0.277,31,0.074,32,0.014,33,0.019,34,0.014,40,0.395,46,0.533,50,1.401,97,1.759,110,2.107,111,3.419,119,1.695,126,1.947,127,1.947,147,2.204,166,2.237,178,1.444,193,3.822,204,1.847,246,1.246,247,1.562,290,3.018,341,2.286,344,2.861,379,2.504,455,3.378,491,2.861,492,5.196,493,4.591,494,5.983,495,5.983,496,3.404,497,5.562,498,3.404,499,3.404,500,4.591,501,5.562,502,3.404,503,3.404,504,3.404,505,3.404,506,3.86,507,2.861,508,3.404,509,3.404,510,3.404,511,3.404,512,3.404,513,3.404]],["title/interfaces/RequestUser.html",[143,1.511,277,1.115]],["body/interfaces/RequestUser.html",[12,0.027,19,0.324,20,0.374,21,0.324,30,0.374,32,0.019,33,0.024,34,0.019,40,0.533,41,1.625,46,0.646,47,1.4,60,1.673,143,2.551,188,3.096,189,2.637,277,1.553,514,3.857,515,3.857]],["title/classes/UserResolver.html",[31,0.072,516,2.164]],["body/classes/UserResolver.html",[12,0.029,19,0.459,20,0.125,21,0.108,24,0.541,25,0.359,27,0.651,29,0.704,30,0.261,31,0.034,32,0.007,33,0.011,34,0.007,36,0.603,40,0.178,44,1.168,46,0.373,47,0.332,48,2.439,50,1.339,55,0.704,72,0.764,78,1.499,97,1.756,110,1.157,111,3.45,126,2.2,127,2.2,128,1.009,141,0.833,143,0.704,146,4.253,147,2.255,150,3.816,156,4.128,165,1.29,166,4.335,167,2.439,168,1.29,169,0.833,173,1.29,174,1.009,175,1.009,177,1.29,178,1.069,180,2.36,187,1.255,189,0.651,198,2.439,214,1.29,343,1.009,516,1.657,517,1.129,518,2.521,519,2.521,520,2.521,521,2.521,522,2.521,523,2.521,524,2.521,525,2.521,526,2.521,527,2.521,528,1.535,529,1.535,530,6.021,531,1.535,532,1.535,533,1.535,534,1.535,535,1.535,536,1.535,537,1.535,538,1.535,539,1.535,540,1.535,541,1.535,542,1.535,543,3.208,544,1.535,545,1.535,546,1.535,547,1.535,548,1.535,549,1.535,550,1.535,551,1.129,552,1.129,553,1.535,554,1.855,555,1.29,556,1.535,557,1.535,558,1.535,559,1.535,560,1.535,561,1.535,562,1.535,563,1.535,564,4.361,565,1.535,566,1.535,567,1.535,568,1.535,569,1.535,570,1.535,571,1.535,572,1.535,573,1.535,574,1.535,575,1.535,576,1.535,577,1.535,578,1.535,579,1.535,580,1.535,581,1.535,582,1.535]],["title/modules/ZenGraphQLModule.html",[0,0.894,15,1.958]],["body/modules/ZenGraphQLModule.html",[0,1.456,2,1.425,3,1.538,4,1.806,5,1.806,6,1.425,7,2.385,8,1.664,12,0.029,14,3.034,15,3.832,16,2.385,17,1.141,18,1.806,19,0.256,20,0.295,21,0.256,23,2.599,24,0.722,25,0.847,29,1.664,30,0.295,31,0.079,32,0.015,33,0.02,34,0.015,66,3.623,78,2.157,123,3.049,128,2.384,169,1.968,283,4.027,286,3.049,328,3.149,343,2.384,432,3.623,583,3.627,584,3.627,585,3.627,586,3.627,587,3.049,588,3.524,589,3.627,590,3.627]],["title/coverage.html",[591,3.774]],["body/coverage.html",[6,0.938,12,0.029,17,1.122,21,0.169,31,0.126,32,0.01,33,0.015,34,0.01,35,1.42,37,2.649,38,1.42,39,2.649,44,1.343,46,0.277,71,1.296,72,1.189,73,1.42,82,1.42,83,1.757,90,1.42,91,2.007,93,1.42,94,1.57,95,1.42,96,2.007,103,1.757,104,2.007,105,2.007,106,1.57,107,2.625,121,0.938,124,1.296,133,4.934,141,1.296,143,1.096,174,1.57,179,1.757,182,1.296,189,1.013,204,1.296,246,1.497,248,2.007,262,1.42,277,1.717,278,2.007,279,2.007,284,2.122,289,2.007,291,1.42,312,2.007,328,1.57,329,2.007,330,2.007,341,1.189,342,1.757,366,2.007,396,2.007,400,2.007,401,2.007,407,2.007,456,1.757,470,1.57,484,2.007,485,2.007,491,2.007,514,2.007,515,2.007,516,1.57,517,2.625,551,1.757,552,1.757,554,1.757,588,1.757,591,2.007,592,2.007,593,2.388,594,2.388,595,5.32,596,2.007,597,2.999,598,6.131,599,6.325,600,4.738,601,2.007,602,2.007,603,2.388,604,2.007,605,3.568,606,1.757,607,4.738,608,2.007,609,4.271,610,4.271,611,2.007,612,2.007,613,2.388,614,2.388,615,4.263,616,2.007,617,2.007,618,2.007,619,2.625,620,2.625,621,2.007,622,2.007,623,2.007,624,2.007,625,2.007,626,2.388,627,2.388]],["title/dependencies.html",[3,1.679,628,2.752]],["body/dependencies.html",[3,1.598,12,0.029,25,0.88,27,2.084,28,1.598,31,0.107,32,0.016,33,0.021,34,0.016,64,1.876,76,2.477,169,2.045,171,3.168,172,3.229,321,2.772,325,2.477,338,2.772,379,2.772,417,4.129,441,2.477,442,2.772,507,3.168,629,3.769,630,5.465,631,3.769,632,4.912,633,3.769,634,3.769,635,3.769,636,3.168,637,3.769,638,3.769,639,3.769,640,3.769,641,3.769,642,3.769,643,3.769,644,3.769,645,3.769,646,3.769,647,3.769,648,3.769,649,3.769,650,3.769,651,3.168,652,3.769,653,3.769,654,3.769,655,3.769,656,3.769,657,3.769,658,3.769,659,3.769,660,3.769,661,3.769,662,3.769,663,3.769,664,3.769,665,3.769,666,3.769]],["title/miscellaneous/functions.html",[667,1.493,668,3.328]],["body/miscellaneous/functions.html",[6,2.299,12,0.027,19,0.308,32,0.019,33,0.023,34,0.019,40,0.507,97,1.825,126,2.287,127,2.287,147,1.851,166,3.544,167,2.002,551,3.966,552,3.966,564,3.668,606,3.21,608,4.918,611,3.668,612,4.532,619,3.21,620,3.966,621,4.532,625,3.668,667,2.368,668,3.668,669,4.364,670,3.668,671,4.364,672,3.668,673,4.364,674,4.532,675,4.364]],["title/index.html",[40,0.32,676,2.752,677,2.314]],["body/index.html",[6,1.154,12,0.024,17,0.583,23,1.006,24,0.341,27,2.215,28,0.786,29,2.073,32,0.008,33,0.012,34,0.008,38,1.746,44,0.583,46,0.215,60,0.676,83,1.364,101,1.558,175,1.218,187,1.462,196,2.468,204,1.006,205,3.485,233,1.558,277,0.628,287,1.558,296,1.218,325,2.725,343,1.218,426,1.558,441,3.432,506,1.558,587,1.558,592,1.558,636,3.485,651,1.558,674,2.468,677,1.558,678,3.064,679,4.146,680,1.854,681,1.854,682,4.146,683,1.854,684,1.854,685,5.716,686,1.854,687,1.854,688,1.854,689,1.854,690,1.854,691,1.854,692,1.854,693,1.854,694,1.854,695,1.854,696,1.854,697,1.854,698,2.936,699,1.854,700,1.854,701,1.854,702,1.854,703,4.806,704,1.854,705,1.854,706,1.854,707,2.936,708,2.936,709,4.146,710,1.854,711,1.854,712,1.854,713,1.854,714,4.806,715,1.854,716,2.936,717,1.854,718,4.146,719,1.854,720,1.854,721,1.854,722,1.854,723,2.936,724,4.146,725,3.645,726,1.854,727,1.854,728,4.806,729,1.854,730,4.146,731,1.854,732,1.854,733,2.936,734,1.854,735,1.854,736,1.854,737,1.854,738,1.854,739,1.854,740,1.854,741,2.936,742,1.854,743,1.854,744,1.854,745,1.854,746,1.854,747,2.936,748,4.518,749,1.854,750,1.854,751,1.854,752,1.854,753,1.854,754,2.936,755,1.854,756,1.854,757,1.854,758,1.854,759,2.468,760,1.854,761,3.645,762,3.645,763,1.854,764,1.854,765,1.854,766,1.854,767,1.854,768,1.854,769,1.854,770,1.854,771,2.936,772,2.936,773,1.854,774,3.645,775,1.854,776,2.936,777,1.854,778,1.854,779,1.854,780,1.854,781,1.854,782,1.854,783,2.936,784,1.854,785,1.854,786,1.854,787,1.854,788,1.854,789,2.936,790,1.854,791,1.854,792,1.854,793,1.854,794,1.854,795,1.854,796,1.854,797,1.854,798,1.854,799,1.854,800,1.854,801,1.854,802,1.854,803,1.854,804,2.936,805,1.854,806,4.146,807,1.854,808,2.936,809,1.854,810,2.936,811,1.854,812,1.854,813,1.854,814,1.854,815,1.854,816,1.854,817,1.854,818,1.854,819,2.936,820,2.936,821,2.936,822,1.854,823,1.854,824,1.854,825,1.854,826,2.936,827,1.854,828,1.854,829,1.854,830,1.854,831,1.854,832,1.854,833,1.854,834,2.936,835,2.936,836,1.854,837,1.854,838,1.854,839,1.854,840,1.854,841,2.936,842,1.854,843,1.854,844,1.854,845,1.854,846,2.936,847,1.854,848,2.936,849,1.854,850,2.936,851,1.854,852,1.854,853,1.854,854,1.854,855,2.936,856,2.936,857,1.854,858,1.854,859,1.854,860,1.854,861,1.854,862,1.854,863,1.854,864,1.854,865,1.854,866,1.558,867,3.645,868,1.854,869,2.936,870,2.936,871,1.854,872,1.854,873,1.854,874,1.854,875,1.854,876,1.854,877,1.854,878,1.854,879,1.854,880,1.854,881,1.854,882,1.854,883,1.854,884,1.854,885,1.854,886,1.854,887,1.854,888,1.854,889,2.936,890,1.854,891,1.854,892,1.854,893,1.854,894,1.854,895,1.854,896,1.854,897,1.854,898,1.854,899,1.854,900,1.854,901,1.854,902,1.854,903,1.854,904,1.854,905,1.854,906,1.854,907,1.854,908,1.854,909,1.854,910,1.854,911,1.854,912,1.854]],["title/modules.html",[2,1.764]],["body/modules.html",[1,2.992,2,1.789,11,2.707,12,0.023,13,2.267,14,2.267,15,2.707,32,0.019,33,0.023,34,0.019,66,2.707,432,2.707,759,3.827,913,6.461,914,6.461,915,6.461,916,6.539,917,4.552]],["title/overview.html",[918,3.774]],["body/overview.html",[0,0.845,1,4.114,2,1.223,3,1.32,4,1.549,5,1.549,6,1.223,7,1.549,8,1.428,9,2.616,10,2.616,11,3.185,12,0.028,13,3.078,14,3.031,15,3.676,16,2.15,17,0.979,18,1.549,32,0.013,33,0.018,34,0.013,36,1.223,60,1.134,66,3.886,67,2.616,69,2.616,70,2.616,71,3.24,72,2.973,73,2.949,121,2.105,124,3.24,247,1.428,280,2.616,281,2.616,341,2.973,365,2.616,432,3.62,433,2.616,435,2.616,436,2.616,486,2.616,487,2.616,488,2.616,918,2.616,919,4.318,920,3.112]],["title/miscellaneous/typealiases.html",[667,1.493,921,3.959]],["body/miscellaneous/typealiases.html",[12,0.026,17,1.515,32,0.02,33,0.024,34,0.02,40,0.559,43,2.21,44,1.515,46,0.559,141,2.613,167,2.626,456,3.543,464,4.812,472,4.812,473,4.049,606,3.543,667,2.613,670,4.049,922,4.817,923,5.724]],["title/miscellaneous/variables.html",[667,1.493,924,3.328]],["body/miscellaneous/variables.html",[12,0.029,27,1.273,29,0.874,32,0.008,33,0.013,34,0.008,35,1.784,38,1.784,40,0.221,43,1.703,44,1.53,45,1.784,46,0.591,47,1.263,55,2.101,78,1.133,82,1.784,84,1.972,85,1.402,90,1.784,92,1.034,93,1.784,94,1.972,95,1.784,98,1.402,106,1.252,107,1.402,112,1.602,130,4.296,131,4.296,132,1.252,143,1.377,150,1.402,156,1.402,167,1.377,174,1.972,178,1.273,179,2.73,180,2.207,181,1.602,182,2.013,183,1.602,184,1.602,185,1.602,186,1.602,187,2.625,188,0.949,189,1.942,190,3.849,198,1.377,203,2.522,204,1.628,256,2.207,261,1.784,265,1.402,266,2.207,284,2.503,291,1.784,292,2.207,293,2.207,294,2.207,295,2.73,296,1.972,297,2.207,298,2.207,324,2.207,325,1.972,326,2.522,327,2.522,342,2.73,345,2.522,357,1.252,373,2.522,516,1.252,517,1.402,554,2.73,555,2.522,588,2.207,596,1.602,597,3.539,601,1.602,602,2.522,604,1.602,615,1.602,616,2.522,617,3.12,618,2.522,619,1.402,620,2.207,622,2.522,623,1.602,624,1.602,667,1.034,672,1.602,678,3.12,866,1.602,924,1.602,925,4.579,926,1.906,927,1.906,928,1.906,929,1.906,930,1.906,931,1.906,932,1.906,933,1.906,934,3,935,1.906,936,1.906,937,1.906,938,1.906,939,3,940,1.906,941,3,942,1.906,943,1.906,944,1.906,945,3,946,1.906,947,1.906,948,1.906,949,1.906,950,3,951,3,952,1.906,953,3,954,3,955,3,956,4.21,957,3,958,3,959,3,960,1.906,961,3,962,3,963,3,964,3,965,1.906,966,1.906,967,1.906,968,1.906,969,1.906,970,3,971,1.906,972,1.906,973,1.906,974,3,975,1.906,976,3,977,3,978,1.906,979,3,980,1.906,981,1.906]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":133,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlGuard.html":{},"coverage.html":{}}}],["0.1.13",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.3.22",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":101,"title":{},"body":{"classes/AuthRegisterInput.html":{},"index.html":{}}}],["1000",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["12",{"_index":228,"title":{},"body":{"classes/AuthResolver.html":{}}}],["15.3.0",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["1d",{"_index":476,"title":{},"body":{"injectables/MailService.html":{}}}],["2.16.1",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["2.18.1",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":362,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["20_000_000",{"_index":361,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["2592000",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3600",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":207,"title":{},"body":{"classes/AuthResolver.html":{}}}],["5",{"_index":365,"title":{},"body":{"injectables/GqlConfigService.html":{},"overview.html":{}}}],["5432",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5445",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.2.4",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["6.4.13",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":919,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["7.4.4",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["7.7.0",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["7080",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.2.0",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":920,"title":{},"body":{"overview.html":{}}}],["access",{"_index":771,"title":{},"body":{"index.html":{}}}],["adapter",{"_index":454,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":743,"title":{},"body":{"index.html":{}}}],["adds",{"_index":874,"title":{},"body":{"index.html":{}}}],["aggregateuser",{"_index":518,"title":{},"body":{"classes/UserResolver.html":{}}}],["aggregateuser(@parent",{"_index":569,"title":{},"body":{"classes/UserResolver.html":{}}}],["aggregateuser(parent",{"_index":528,"title":{},"body":{"classes/UserResolver.html":{}}}],["algorithm",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":922,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_type_defs",{"_index":342,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alleviate",{"_index":790,"title":{},"body":{"index.html":{}}}],["allow",{"_index":835,"title":{},"body":{"index.html":{}}}],["allowedroles",{"_index":390,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["allowedroles.concat(handlerroles",{"_index":391,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["allowedroles.includes(userrole",{"_index":394,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["allowedroles.length",{"_index":392,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["alpine",{"_index":891,"title":{},"body":{"index.html":{}}}],["ambitions",{"_index":730,"title":{},"body":{"index.html":{}}}],["angular",{"_index":685,"title":{},"body":{"index.html":{}}}],["api",{"_index":728,"title":{},"body":{"index.html":{}}}],["apiconstants",{"_index":58,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{}}}],["apiconstants.password_max_length",{"_index":53,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{}}}],["apollo",{"_index":636,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["apollo:watch",{"_index":721,"title":{},"body":{"index.html":{}}}],["apolloclient",{"_index":776,"title":{},"body":{"index.html":{}}}],["apollolink",{"_index":779,"title":{},"body":{"index.html":{}}}],["app",{"_index":899,"title":{},"body":{"index.html":{}}}],["application",{"_index":818,"title":{},"body":{"index.html":{}}}],["applications",{"_index":865,"title":{},"body":{"index.html":{}}}],["applied",{"_index":898,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":753,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":894,"title":{},"body":{"index.html":{}}}],["apps/.../auth.ts",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../context.ts",{"_index":670,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../environment.prod.ts",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../gql",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../http",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../index.ts",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.service.ts",{"_index":923,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../main.ts",{"_index":669,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../prisma",{"_index":671,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../roles.decorator.ts",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user.ts",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../write",{"_index":672,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app/auth/auth.module.ts",{"_index":74,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/api/src/app/auth/auth.service.ts",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/auth.service.ts:10",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:13",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/gql/gql",{"_index":596,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/gql/gql.guard.ts",{"_index":366,"title":{},"body":{"injectables/GqlGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/gql/gql.guard.ts:13",{"_index":374,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["apps/api/src/app/auth/gql/gql.guard.ts:31",{"_index":376,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["apps/api/src/app/auth/gql/gql.guard.ts:8",{"_index":371,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["apps/api/src/app/auth/http",{"_index":601,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/jwt",{"_index":400,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/jwt.strategy.ts",{"_index":407,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/jwt.strategy.ts:11",{"_index":409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/jwt.strategy.ts:25",{"_index":411,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/request",{"_index":514,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/roles.decorator.ts",{"_index":604,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/config/config.module.ts",{"_index":282,"title":{},"body":{"modules/ConfigModule.html":{}}}],["apps/api/src/app/config/config.service.ts",{"_index":289,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/context.ts",{"_index":606,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/api/src/app/graphql/gql",{"_index":329,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/models/auth",{"_index":37,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/models/context.ts",{"_index":396,"title":{},"body":{"interfaces/IContext.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/models/user",{"_index":278,"title":{},"body":{"interfaces/AuthSession.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/prisma",{"_index":611,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts",{"_index":107,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:110",{"_index":145,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:125",{"_index":159,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:137",{"_index":161,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:155",{"_index":157,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:180",{"_index":154,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:70",{"_index":139,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:74",{"_index":125,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:83",{"_index":163,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/auth.ts:97",{"_index":151,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/index.ts",{"_index":615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts",{"_index":517,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:37",{"_index":544,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:42",{"_index":542,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:47",{"_index":538,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:52",{"_index":540,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:57",{"_index":529,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:62",{"_index":532,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:67",{"_index":548,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:72",{"_index":536,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:77",{"_index":550,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:82",{"_index":534,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:87",{"_index":546,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/write",{"_index":619,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/zen",{"_index":585,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["apps/api/src/app/jwt/jwt.module.ts",{"_index":397,"title":{},"body":{"modules/JwtModule.html":{}}}],["apps/api/src/app/mail/mail.module.ts",{"_index":437,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/api/src/app/mail/mail.service.ts",{"_index":456,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/api/src/app/mail/mail.service.ts:13",{"_index":461,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/api/src/app/mail/mail.service.ts:20",{"_index":465,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/api/src/app/mail/mail.service.ts:24",{"_index":467,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/api/src/app/mail/templates/password",{"_index":484,"title":{},"body":{"interfaces/PasswordResetContext.html":{},"coverage.html":{}}}],["apps/api/src/app/prisma/prisma.module.ts",{"_index":489,"title":{},"body":{"modules/PrismaModule.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts",{"_index":491,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:11",{"_index":502,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:16",{"_index":504,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:20",{"_index":503,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:6",{"_index":498,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/environments/environment.base.ts",{"_index":312,"title":{},"body":{"classes/EnvironmentBase.html":{},"coverage.html":{}}}],["apps/api/src/environments/environment.base.ts:10",{"_index":317,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:11",{"_index":316,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:12",{"_index":319,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:13",{"_index":313,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:14",{"_index":320,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:5",{"_index":318,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:6",{"_index":314,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:7",{"_index":315,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":623,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":625,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["args",{"_index":166,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["args('data",{"_index":201,"title":{},"body":{"classes/AuthResolver.html":{}}}],["args.ts",{"_index":612,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["array",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":111,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["aud",{"_index":402,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["auth",{"_index":128,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["auth.service",{"_index":77,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.service",{"_index":176,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authentication",{"_index":806,"title":{},"body":{"index.html":{}}}],["authexchangetoken",{"_index":112,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["authexchangetoken(@context",{"_index":215,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authexchangetoken(ctx",{"_index":140,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authguard",{"_index":378,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["authguard('jwt",{"_index":380,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["authlogin",{"_index":113,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authlogin(@context",{"_index":200,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authlogin(ctx",{"_index":148,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authlogin(data",{"_index":181,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["authlogininput",{"_index":35,"title":{"classes/AuthLoginInput.html":{}},"body":{"classes/AuthLoginInput.html":{},"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmodule",{"_index":66,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":831,"title":{},"body":{"index.html":{}}}],["authpasswordchange",{"_index":114,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authpasswordchange(ctx",{"_index":152,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authpasswordchange(data",{"_index":184,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["authpasswordchangeinput",{"_index":82,"title":{"classes/AuthPasswordChangeInput.html":{}},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authpasswordresetconfirmation",{"_index":115,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authpasswordresetconfirmation(ctx",{"_index":155,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authpasswordresetconfirmation(data",{"_index":185,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["authpasswordresetconfirmationinput",{"_index":90,"title":{"classes/AuthPasswordResetConfirmationInput.html":{}},"body":{"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authpasswordresetrequest",{"_index":116,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authpasswordresetrequest(ctx",{"_index":158,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authpasswordresetrequest(data",{"_index":183,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["authpasswordresetrequestinput",{"_index":93,"title":{"classes/AuthPasswordResetRequestInput.html":{}},"body":{"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authregister",{"_index":117,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authregister(@context",{"_index":223,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authregister(ctx",{"_index":160,"title":{},"body":{"classes/AuthResolver.html":{}}}],["authregister(data",{"_index":186,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["authregisterinput",{"_index":95,"title":{"classes/AuthRegisterInput.html":{}},"body":{"classes/AuthRegisterInput.html":{},"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authresendverificationinput",{"_index":103,"title":{"classes/AuthResendVerificationInput.html":{}},"body":{"classes/AuthResendVerificationInput.html":{},"coverage.html":{}}}],["authresolver",{"_index":106,"title":{"classes/AuthResolver.html":{}},"body":{"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":71,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsession",{"_index":182,"title":{"interfaces/AuthSession.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authtypedef",{"_index":179,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":763,"title":{},"body":{"index.html":{}}}],["available",{"_index":759,"title":{},"body":{"index.html":{},"modules.html":{}}}],["await",{"_index":193,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlGuard.html":{},"injectables/PrismaService.html":{}}}],["base",{"_index":893,"title":{},"body":{"index.html":{}}}],["based",{"_index":833,"title":{},"body":{"index.html":{}}}],["batching",{"_index":781,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":170,"title":{},"body":{"classes/AuthResolver.html":{}}}],["bcrypt.compare(data.oldpassword",{"_index":244,"title":{},"body":{"classes/AuthResolver.html":{}}}],["bcrypt.compare(data.password",{"_index":209,"title":{},"body":{"classes/AuthResolver.html":{}}}],["bcrypt.hash(data.newpassword",{"_index":241,"title":{},"body":{"classes/AuthResolver.html":{}}}],["bcrypt.hash(data.password",{"_index":227,"title":{},"body":{"classes/AuthResolver.html":{}}}],["bcryptjs",{"_index":171,"title":{},"body":{"classes/AuthResolver.html":{},"dependencies.html":{}}}],["becomes",{"_index":758,"title":{},"body":{"index.html":{}}}],["being",{"_index":897,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":55,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{}}}],["browse",{"_index":916,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":913,"title":{},"body":{"modules.html":{}}}],["built",{"_index":684,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":367,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["canactivate(context",{"_index":372,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["capabilities",{"_index":747,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":744,"title":{},"body":{"index.html":{}}}],["case",{"_index":733,"title":{},"body":{"index.html":{}}}],["catch",{"_index":238,"title":{},"body":{"classes/AuthResolver.html":{}}}],["cd",{"_index":713,"title":{},"body":{"index.html":{}}}],["change",{"_index":83,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"coverage.html":{},"index.html":{}}}],["choice",{"_index":854,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":851,"title":{},"body":{"index.html":{}}}],["class",{"_index":31,"title":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"classes/EnvironmentBase.html":{},"classes/UserResolver.html":{}},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":36,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"classes/EnvironmentBase.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["classroles",{"_index":385,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["clear",{"_index":909,"title":{},"body":{"index.html":{}}}],["clear_cookie_options",{"_index":109,"title":{},"body":{"classes/AuthResolver.html":{}}}],["client",{"_index":732,"title":{},"body":{"index.html":{}}}],["clone",{"_index":710,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":280,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":281,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":433,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":435,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_imports",{"_index":434,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_mailmodule_providers",{"_index":436,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":486,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":487,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":488,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_zengraphqlmodule",{"_index":583,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["cluster_zengraphqlmodule_imports",{"_index":584,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["code",{"_index":205,"title":{},"body":{"classes/AuthResolver.html":{},"index.html":{}}}],["command",{"_index":726,"title":{},"body":{"index.html":{}}}],["completion",{"_index":764,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":911,"title":{},"body":{"index.html":{}}}],["component",{"_index":861,"title":{},"body":{"index.html":{}}}],["components",{"_index":848,"title":{},"body":{"index.html":{}}}],["compose",{"_index":715,"title":{},"body":{"index.html":{}}}],["config",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{}}}],["config.jwtoptions.publickey",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.jwtoptions.secret",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.production",{"_index":420,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.service",{"_index":286,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ZenGraphQLModule.html":{}}}],["config.service.ts",{"_index":330,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{}}}],["config.service.ts:11",{"_index":334,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["config.service.ts:14",{"_index":335,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["configmodule",{"_index":11,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":121,"title":{"injectables/ConfigService.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["configuration",{"_index":775,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":896,"title":{},"body":{"index.html":{}}}],["confirmation",{"_index":91,"title":{},"body":{"classes/AuthPasswordResetConfirmationInput.html":{},"coverage.html":{}}}],["confirmation?token",{"_index":479,"title":{},"body":{"injectables/MailService.html":{}}}],["congestion",{"_index":792,"title":{},"body":{"index.html":{}}}],["connections",{"_index":428,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console",{"_index":870,"title":{},"body":{"index.html":{}}}],["const",{"_index":178,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":119,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{}}}],["constructor(@optional",{"_index":508,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(auth",{"_index":120,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(config",{"_index":332,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(jwtservice",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mailer",{"_index":459,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(options",{"_index":496,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(private",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(reflector",{"_index":369,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["container",{"_index":846,"title":{},"body":{"index.html":{}}}],["containerized",{"_index":888,"title":{},"body":{"index.html":{}}}],["content",{"_index":828,"title":{},"body":{"index.html":{}}}],["context",{"_index":167,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/MailService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contextidfactory",{"_index":337,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["contributing",{"_index":701,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":905,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":694,"title":{},"body":{"index.html":{}}}],["control",{"_index":834,"title":{},"body":{"index.html":{}}}],["conveniences",{"_index":877,"title":{},"body":{"index.html":{}}}],["convert",{"_index":752,"title":{},"body":{"index.html":{}}}],["cookie",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["cookiedomain",{"_index":292,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["cookieoptions",{"_index":129,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["core",{"_index":750,"title":{},"body":{"index.html":{}}}],["correctpassword",{"_index":208,"title":{},"body":{"classes/AuthResolver.html":{}}}],["cors",{"_index":352,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["coverage",{"_index":591,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcontext",{"_index":608,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["creategqloptions",{"_index":331,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["createoneuser",{"_index":519,"title":{},"body":{"classes/UserResolver.html":{}}}],["createoneuser(@parent",{"_index":571,"title":{},"body":{"classes/UserResolver.html":{}}}],["createoneuser(parent",{"_index":531,"title":{},"body":{"classes/UserResolver.html":{}}}],["createparamdecorator((data",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creation",{"_index":810,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":353,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["css",{"_index":852,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":146,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"classes/UserResolver.html":{}}}],["ctx.connection",{"_index":356,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["ctx.connection.context",{"_index":358,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["ctx.getclass",{"_index":387,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["ctx.getcontext().req",{"_index":395,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["ctx.getcontext().req.user",{"_index":384,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["ctx.gethandler",{"_index":389,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["ctx.prisma.user.create",{"_index":229,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.prisma.user.findmany",{"_index":194,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.prisma.user.findone",{"_index":216,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.prisma.user.update",{"_index":242,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.req.cookies['rememberme",{"_index":218,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.res.clearcookie('jwt",{"_index":219,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.res.clearcookie('rememberme",{"_index":221,"title":{},"body":{"classes/AuthResolver.html":{}}}],["currently",{"_index":691,"title":{},"body":{"index.html":{}}}],["d",{"_index":717,"title":{},"body":{"index.html":{}}}],["data",{"_index":149,"title":{},"body":{"classes/AuthResolver.html":{}}}],["data.email.trim",{"_index":232,"title":{},"body":{"classes/AuthResolver.html":{}}}],["data.firstname",{"_index":230,"title":{},"body":{"classes/AuthResolver.html":{}}}],["data.lastname",{"_index":231,"title":{},"body":{"classes/AuthResolver.html":{}}}],["data.rememberme",{"_index":213,"title":{},"body":{"classes/AuthResolver.html":{}}}],["database",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["days",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debounce",{"_index":786,"title":{},"body":{"index.html":{}}}],["debug",{"_index":348,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["declarative",{"_index":836,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":48,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["default",{"_index":130,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":448,"title":{},"body":{"modules/MailModule.html":{}}}],["defaultstrategy",{"_index":81,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":50,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["deletemanyuser",{"_index":520,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletemanyuser(@parent",{"_index":579,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletemanyuser(parent",{"_index":533,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteoneuser",{"_index":521,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteoneuser(@parent",{"_index":575,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteoneuser(parent",{"_index":535,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletion",{"_index":746,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":829,"title":{},"body":{"index.html":{}}}],["depth=1",{"_index":712,"title":{},"body":{"index.html":{}}}],["designed",{"_index":812,"title":{},"body":{"index.html":{}}}],["dev",{"_index":866,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["developer",{"_index":876,"title":{},"body":{"index.html":{}}}],["development",{"_index":693,"title":{},"body":{"index.html":{}}}],["dir",{"_index":451,"title":{},"body":{"modules/MailModule.html":{}}}],["directives",{"_index":826,"title":{},"body":{"index.html":{}}}],["directly",{"_index":754,"title":{},"body":{"index.html":{}}}],["docker",{"_index":709,"title":{},"body":{"index.html":{}}}],["docs",{"_index":686,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":592,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domain",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["dotenv",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["ecosystem",{"_index":880,"title":{},"body":{"index.html":{}}}],["email",{"_index":43,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/MailService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["email_taken",{"_index":225,"title":{},"body":{"classes/AuthResolver.html":{}}}],["enable",{"_index":762,"title":{},"body":{"index.html":{}}}],["enable/disable",{"_index":777,"title":{},"body":{"index.html":{}}}],["enabling",{"_index":798,"title":{},"body":{"index.html":{}}}],["encodeuri(token",{"_index":480,"title":{},"body":{"injectables/MailService.html":{}}}],["enforced",{"_index":900,"title":{},"body":{"index.html":{}}}],["environment",{"_index":284,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.smtp.fromname",{"_index":449,"title":{},"body":{"modules/MailModule.html":{}}}],["environmentbase",{"_index":291,"title":{"classes/EnvironmentBase.html":{}},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentbase:10",{"_index":307,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:11",{"_index":305,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:12",{"_index":309,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:13",{"_index":300,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:14",{"_index":310,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:5",{"_index":308,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:6",{"_index":301,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:7",{"_index":303,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environments/environment",{"_index":285,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{}}}],["environments/environment.base",{"_index":311,"title":{},"body":{"injectables/ConfigService.html":{}}}],["equals",{"_index":197,"title":{},"body":{"classes/AuthResolver.html":{}}}],["es",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["exclude",{"_index":860,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":373,"title":{},"body":{"injectables/GqlGuard.html":{},"miscellaneous/variables.html":{}}}],["execwritefile",{"_index":622,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["exp",{"_index":403,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["express",{"_index":172,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["expressport",{"_index":293,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["exreq",{"_index":415,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extend",{"_index":180,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":290,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["extension",{"_index":723,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":871,"title":{},"body":{"index.html":{}}}],["false",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":757,"title":{},"body":{"index.html":{}}}],["features",{"_index":748,"title":{},"body":{"index.html":{}}}],["file",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["files",{"_index":800,"title":{},"body":{"index.html":{}}}],["filter(x",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtering",{"_index":734,"title":{},"body":{"index.html":{}}}],["findmanyuser",{"_index":522,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyuser(@parent",{"_index":565,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyuser(parent",{"_index":537,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount",{"_index":523,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount(@parent",{"_index":567,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount(parent",{"_index":539,"title":{},"body":{"classes/UserResolver.html":{}}}],["findoneuser",{"_index":524,"title":{},"body":{"classes/UserResolver.html":{}}}],["findoneuser(@parent",{"_index":562,"title":{},"body":{"classes/UserResolver.html":{}}}],["findoneuser(parent",{"_index":541,"title":{},"body":{"classes/UserResolver.html":{}}}],["fine",{"_index":837,"title":{},"body":{"index.html":{}}}],["first",{"_index":821,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":98,"title":{},"body":{"classes/AuthRegisterInput.html":{},"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["fns",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":797,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":901,"title":{},"body":{"index.html":{}}}],["found",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":742,"title":{},"body":{"index.html":{}}}],["fromemail",{"_index":327,"title":{},"body":{"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["fromname",{"_index":326,"title":{},"body":{"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":680,"title":{},"body":{"index.html":{}}}],["function",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":668,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":731,"title":{},"body":{"index.html":{}}}],["generate",{"_index":912,"title":{},"body":{"index.html":{}}}],["generation",{"_index":761,"title":{},"body":{"index.html":{}}}],["getrequest",{"_index":368,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["getrequest(context",{"_index":375,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["getting",{"_index":676,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":118,"title":{},"body":{"classes/AuthResolver.html":{}}}],["getuser(email",{"_index":162,"title":{},"body":{"classes/AuthResolver.html":{}}}],["git",{"_index":698,"title":{},"body":{"index.html":{}}}],["github",{"_index":687,"title":{},"body":{"index.html":{}}}],["give",{"_index":794,"title":{},"body":{"index.html":{}}}],["global",{"_index":283,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ZenGraphQLModule.html":{}}}],["gql",{"_index":78,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["gqlconfigservice",{"_index":328,"title":{"injectables/GqlConfigService.html":{}},"body":{"injectables/GqlConfigService.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["gqlexecutioncontext",{"_index":377,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["gqlexecutioncontext.create(context",{"_index":383,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req.user",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gqlguard",{"_index":72,"title":{"injectables/GqlGuard.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/GqlGuard.html":{},"classes/UserResolver.html":{},"coverage.html":{},"overview.html":{}}}],["gqlmoduleoptions",{"_index":336,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["gqloptionsfactory",{"_index":339,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["gqluser",{"_index":174,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grained",{"_index":838,"title":{},"body":{"index.html":{}}}],["graph",{"_index":917,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/UserResolver.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["graphql.module.ts",{"_index":586,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["graphql/models/user",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["graphql_schema",{"_index":616,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":587,"title":{},"body":{"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["graphqlmodule.forrootasync",{"_index":589,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["graphqlupload",{"_index":801,"title":{},"body":{"index.html":{}}}],["greatly",{"_index":864,"title":{},"body":{"index.html":{}}}],["grid",{"_index":858,"title":{},"body":{"index.html":{}}}],["guaranteeing",{"_index":904,"title":{},"body":{"index.html":{}}}],["guards",{"_index":825,"title":{},"body":{"index.html":{}}}],["gui",{"_index":872,"title":{},"body":{"index.html":{}}}],["handlebarsadapter",{"_index":439,"title":{},"body":{"modules/MailModule.html":{}}}],["handlerroles",{"_index":388,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["hashedpassword",{"_index":226,"title":{},"body":{"classes/AuthResolver.html":{}}}],["helmet",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["helps",{"_index":789,"title":{},"body":{"index.html":{}}}],["horizontal",{"_index":845,"title":{},"body":{"index.html":{}}}],["host",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hs256",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["httpbatchlink",{"_index":780,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":164,"title":{},"body":{"classes/AuthResolver.html":{}}}],["https://github.com/zensoftware/zen.git",{"_index":711,"title":{},"body":{"index.html":{}}}],["https://zensoftware.ca/#/password",{"_index":478,"title":{},"body":{"injectables/MailService.html":{}}}],["httpuser",{"_index":602,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iat",{"_index":404,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["icontext",{"_index":141,"title":{"interfaces/IContext.html":{}},"body":{"classes/AuthResolver.html":{},"interfaces/IContext.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":188,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/RequestUser.html":{},"miscellaneous/variables.html":{}}}],["ide",{"_index":883,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":889,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":749,"title":{},"body":{"index.html":{}}}],["implements",{"_index":344,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["incorrect_password",{"_index":211,"title":{},"body":{"classes/AuthResolver.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["inherited",{"_index":299,"title":{},"body":{"injectables/ConfigService.html":{}}}],["injectable",{"_index":246,"title":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["injectables",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"overview.html":{}}}],["input",{"_index":190,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["input.ts",{"_index":39,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"coverage.html":{}}}],["input.ts:10",{"_index":54,"title":{},"body":{"classes/AuthLoginInput.html":{}}}],["input.ts:11",{"_index":100,"title":{},"body":{"classes/AuthRegisterInput.html":{}}}],["input.ts:13",{"_index":57,"title":{},"body":{"classes/AuthLoginInput.html":{}}}],["input.ts:14",{"_index":102,"title":{},"body":{"classes/AuthRegisterInput.html":{}}}],["input.ts:6",{"_index":89,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthResendVerificationInput.html":{}}}],["input.ts:7",{"_index":51,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthRegisterInput.html":{}}}],["input.ts:9",{"_index":87,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{}}}],["insensitive",{"_index":196,"title":{},"body":{"classes/AuthResolver.html":{},"index.html":{}}}],["installsubscriptionhandlers",{"_index":347,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["instructions",{"_index":705,"title":{},"body":{"index.html":{}}}],["int",{"_index":558,"title":{},"body":{"classes/UserResolver.html":{}}}],["integration",{"_index":809,"title":{},"body":{"index.html":{}}}],["interested",{"_index":700,"title":{},"body":{"index.html":{}}}],["interface",{"_index":277,"title":{"interfaces/AuthSession.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"interfaces/PasswordResetContext.html":{},"interfaces/RequestUser.html":{}},"body":{"interfaces/AuthSession.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"interfaces/PasswordResetContext.html":{},"interfaces/RequestUser.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":60,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{},"interfaces/AuthSession.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"interfaces/PasswordResetContext.html":{},"interfaces/RequestUser.html":{},"index.html":{},"overview.html":{}}}],["interval",{"_index":787,"title":{},"body":{"index.html":{}}}],["introspection",{"_index":350,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["isboolean",{"_index":56,"title":{},"body":{"classes/AuthLoginInput.html":{}}}],["isemail",{"_index":61,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{}}}],["isemail()@maxlength(254",{"_index":49,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{}}}],["isendmailoptions",{"_index":469,"title":{},"body":{"injectables/MailService.html":{}}}],["isnotempty",{"_index":88,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{}}}],["iss",{"_index":405,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["issue",{"_index":699,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":842,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":79,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":13,"title":{"modules/JwtModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["jwtmoduleoptions",{"_index":304,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["jwtoptions",{"_index":294,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":262,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":122,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["jwtstrategy",{"_index":73,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keeping",{"_index":844,"title":{},"body":{"index.html":{}}}],["language",{"_index":881,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":99,"title":{},"body":{"classes/AuthRegisterInput.html":{},"classes/AuthResolver.html":{}}}],["lax",{"_index":138,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["legibility",{"_index":910,"title":{},"body":{"index.html":{}}}],["length",{"_index":62,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{}}}],["length(1",{"_index":52,"title":{},"body":{"classes/AuthLoginInput.html":{}}}],["length(apiconstants.password_min_length",{"_index":86,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{}}}],["literal",{"_index":302,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["localhost",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost/nowhere",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lodash",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":38,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/EnvironmentBase.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lot",{"_index":875,"title":{},"body":{"index.html":{}}}],["mail",{"_index":123,"title":{},"body":{"classes/AuthResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["mail.service",{"_index":443,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/templates",{"_index":453,"title":{},"body":{"modules/MailModule.html":{}}}],["mailer",{"_index":462,"title":{},"body":{"injectables/MailService.html":{}}}],["mailermodule",{"_index":440,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":444,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":460,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":432,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":464,"title":{},"body":{"injectables/MailService.html":{},"miscellaneous/typealiases.html":{}}}],["mailservice",{"_index":124,"title":{"injectables/MailService.html":{}},"body":{"classes/AuthResolver.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["mailtemplate",{"_index":472,"title":{},"body":{"injectables/MailService.html":{},"miscellaneous/typealiases.html":{}}}],["makeexecutableschema",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management",{"_index":868,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":855,"title":{},"body":{"index.html":{}}}],["maxage",{"_index":132,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"miscellaneous/variables.html":{}}}],["maxage.tostring",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxfiles",{"_index":364,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["maxfilesize",{"_index":360,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["maxlength",{"_index":63,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{}}}],["maxlength(254",{"_index":65,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{}}}],["mb",{"_index":363,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["mergetypedefs([prisma_type_defs",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":110,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["miscellaneous",{"_index":667,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":863,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":820,"title":{},"body":{"index.html":{}}}],["mode",{"_index":195,"title":{},"body":{"classes/AuthResolver.html":{}}}],["models",{"_index":177,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["modern",{"_index":679,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["moduleref",{"_index":333,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":442,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["monorepos",{"_index":873,"title":{},"body":{"index.html":{}}}],["multi",{"_index":795,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":156,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["mutation()@useguards(gqlguard",{"_index":153,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutations",{"_index":840,"title":{},"body":{"index.html":{}}}],["n+1",{"_index":739,"title":{},"body":{"index.html":{}}}],["name",{"_index":127,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":441,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"index.html":{}}}],["nest_resolvers",{"_index":588,"title":{},"body":{"modules/ZenGraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nest_type_defs",{"_index":617,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":338,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":169,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":321,"title":{},"body":{"classes/EnvironmentBase.html":{},"modules/JwtModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":76,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["nestjwtmodule",{"_index":398,"title":{},"body":{"modules/JwtModule.html":{}}}],["nestjwtmodule.register(environment.jwtoptions",{"_index":399,"title":{},"body":{"modules/JwtModule.html":{}}}],["network",{"_index":791,"title":{},"body":{"index.html":{}}}],["new",{"_index":204,"title":{},"body":{"classes/AuthResolver.html":{},"modules/MailModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":84,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":707,"title":{},"body":{"index.html":{}}}],["node:14",{"_index":890,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["npm",{"_index":714,"title":{},"body":{"index.html":{}}}],["null",{"_index":555,"title":{},"body":{"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"interfaces/JwtPayload.html":{}}}],["nx",{"_index":867,"title":{},"body":{"index.html":{}}}],["occur",{"_index":784,"title":{},"body":{"index.html":{}}}],["official",{"_index":756,"title":{},"body":{"index.html":{}}}],["oldpassword",{"_index":85,"title":{},"body":{"classes/AuthPasswordChangeInput.html":{},"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["ondelete",{"_index":493,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ondelete(args",{"_index":500,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ondeleteargs",{"_index":501,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduledestroy",{"_index":494,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":495,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":697,"title":{},"body":{"index.html":{}}}],["optional",{"_index":97,"title":{},"body":{"classes/AuthRegisterInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":455,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{}}}],["origin",{"_index":354,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["out",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["outpath",{"_index":675,"title":{},"body":{"miscellaneous/functions.html":{}}}],["over",{"_index":804,"title":{},"body":{"index.html":{}}}],["overview",{"_index":918,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":628,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":817,"title":{},"body":{"index.html":{}}}],["palette",{"_index":727,"title":{},"body":{"index.html":{}}}],["paljs/plugins",{"_index":507,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["parameters",{"_index":126,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":530,"title":{},"body":{"classes/UserResolver.html":{}}}],["parser",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":796,"title":{},"body":{"index.html":{}}}],["passport",{"_index":417,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":75,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":80,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":414,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":418,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":44,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResolver.html":{},"classes/EnvironmentBase.html":{},"injectables/MailService.html":{},"classes/UserResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["passwordresetcontext",{"_index":470,"title":{"interfaces/PasswordResetContext.html":{}},"body":{"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"coverage.html":{}}}],["path",{"_index":438,"title":{},"body":{"modules/MailModule.html":{}}}],["path.join(__dirname",{"_index":452,"title":{},"body":{"modules/MailModule.html":{}}}],["payload",{"_index":412,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":431,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.roles",{"_index":429,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.roles.split",{"_index":430,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":401,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["performance",{"_index":807,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":830,"title":{},"body":{"index.html":{}}}],["pg",{"_index":323,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["playground",{"_index":324,"title":{},"body":{"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["poolconfig",{"_index":322,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["port",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portal",{"_index":683,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":295,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["postgresqlconfig",{"_index":306,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["predictable",{"_index":907,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":902,"title":{},"body":{"index.html":{}}}],["print",{"_index":340,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["print(all_type_defs",{"_index":346,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["prisma",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GqlConfigService.html":{},"interfaces/IContext.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":490,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":379,"title":{},"body":{"injectables/GqlGuard.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/user/resolvers",{"_index":553,"title":{},"body":{"classes/UserResolver.html":{}}}],["prisma:save",{"_index":719,"title":{},"body":{"index.html":{}}}],["prisma_schema",{"_index":618,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma_type_defs",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":492,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientoptions",{"_index":497,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete",{"_index":506,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prismadelete(this",{"_index":510,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete.ondelete(args",{"_index":511,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":14,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaselect",{"_index":737,"title":{},"body":{"index.html":{}}}],["prismaselectargs",{"_index":551,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["prismaselectargs(info",{"_index":564,"title":{},"body":{"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["prismaservice",{"_index":341,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/GqlConfigService.html":{},"interfaces/IContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":108,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/MailService.html":{}}}],["privatekey",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["problem",{"_index":740,"title":{},"body":{"index.html":{}}}],["process.env.jwt_private_key",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_public_key",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.pgpassword",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.pguser",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.smtp_from_email",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.smtp_login",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.smtp_password",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.smtp_server",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":296,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":703,"title":{},"body":{"index.html":{}}}],["promisify(fs.writefile",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":41,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"interfaces/AuthSession.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"interfaces/PasswordResetContext.html":{},"interfaces/RequestUser.html":{}}}],["provide",{"_index":287,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["publickey",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queries",{"_index":741,"title":{},"body":{"index.html":{}}}],["query",{"_index":150,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["query()@useguards(gqlguard",{"_index":144,"title":{},"body":{"classes/AuthResolver.html":{}}}],["querying",{"_index":735,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":42,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{}}}],["really",{"_index":788,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":370,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["register",{"_index":96,"title":{},"body":{"classes/AuthRegisterInput.html":{},"coverage.html":{}}}],["releases",{"_index":887,"title":{},"body":{"index.html":{}}}],["reload",{"_index":729,"title":{},"body":{"index.html":{}}}],["rememberme",{"_index":45,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"miscellaneous/variables.html":{}}}],["remembermeexpiresin",{"_index":297,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["replicas",{"_index":847,"title":{},"body":{"index.html":{}}}],["repo",{"_index":688,"title":{},"body":{"index.html":{}}}],["req",{"_index":357,"title":{},"body":{"injectables/GqlConfigService.html":{},"interfaces/IContext.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.cookies['jwt",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.token",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.user",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":94,"title":{},"body":{"classes/AuthPasswordResetRequestInput.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":783,"title":{},"body":{"index.html":{}}}],["requestuser",{"_index":143,"title":{"interfaces/RequestUser.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/RequestUser.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requirements",{"_index":706,"title":{},"body":{"index.html":{}}}],["requser",{"_index":142,"title":{},"body":{"classes/AuthResolver.html":{}}}],["requser.id",{"_index":217,"title":{},"body":{"classes/AuthResolver.html":{}}}],["res",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IContext.html":{}}}],["res.cookie('jwt",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.cookie('rememberme",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["resend",{"_index":104,"title":{},"body":{"classes/AuthResendVerificationInput.html":{},"coverage.html":{}}}],["reset",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["reset.context.ts",{"_index":485,"title":{},"body":{"interfaces/PasswordResetContext.html":{},"coverage.html":{}}}],["reseturl",{"_index":477,"title":{},"body":{"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{}}}],["resolvefield",{"_index":543,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolver",{"_index":168,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["resolver('auth",{"_index":191,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver('user",{"_index":560,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers",{"_index":343,"title":{},"body":{"injectables/GqlConfigService.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["resolvers.mutation.createoneuser(parent",{"_index":572,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.deletemanyuser(parent",{"_index":580,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.deleteoneuser(parent",{"_index":576,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.updatemanyuser(parent",{"_index":582,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.updateoneuser(parent",{"_index":574,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.upsertoneuser(parent",{"_index":578,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.aggregateuser(parent",{"_index":570,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findmanyuser(parent",{"_index":566,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findmanyusercount(parent",{"_index":568,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findoneuser(parent",{"_index":563,"title":{},"body":{"classes/UserResolver.html":{}}}],["response",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["responsive",{"_index":819,"title":{},"body":{"index.html":{}}}],["result",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":198,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":147,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":175,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GqlGuard.html":{},"classes/UserResolver.html":{},"index.html":{}}}],["role.registered",{"_index":234,"title":{},"body":{"classes/AuthResolver.html":{}}}],["roles",{"_index":189,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/RequestUser.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":561,"title":{},"body":{"classes/UserResolver.html":{}}}],["route",{"_index":824,"title":{},"body":{"index.html":{}}}],["rs256",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":718,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["safe",{"_index":770,"title":{},"body":{"index.html":{}}}],["samesite",{"_index":136,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["sampleuserfield",{"_index":559,"title":{},"body":{"classes/UserResolver.html":{}}}],["sampleusermutation(args",{"_index":557,"title":{},"body":{"classes/UserResolver.html":{}}}],["sampleuserquery",{"_index":556,"title":{},"body":{"classes/UserResolver.html":{}}}],["sass",{"_index":850,"title":{},"body":{"index.html":{}}}],["scaling",{"_index":808,"title":{},"body":{"index.html":{}}}],["schema",{"_index":674,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["schema.ts",{"_index":620,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["schematics",{"_index":879,"title":{},"body":{"index.html":{}}}],["scope",{"_index":505,"title":{},"body":{"injectables/PrismaService.html":{}}}],["scripts",{"_index":885,"title":{},"body":{"index.html":{}}}],["sdl",{"_index":760,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":419,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":134,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["security",{"_index":839,"title":{},"body":{"index.html":{}}}],["select",{"_index":552,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["send",{"_index":457,"title":{},"body":{"injectables/MailService.html":{}}}],["send(options",{"_index":463,"title":{},"body":{"injectables/MailService.html":{}}}],["sendpasswordreset",{"_index":458,"title":{},"body":{"injectables/MailService.html":{}}}],["sendpasswordreset(to",{"_index":466,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":325,"title":{},"body":{"classes/EnvironmentBase.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":882,"title":{},"body":{"index.html":{}}}],["services",{"_index":768,"title":{},"body":{"index.html":{}}}],["session",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["session.ts",{"_index":279,"title":{},"body":{"interfaces/AuthSession.html":{},"coverage.html":{}}}],["set",{"_index":233,"title":{},"body":{"classes/AuthResolver.html":{},"index.html":{}}}],["set_null",{"_index":745,"title":{},"body":{"index.html":{}}}],["setjwtcookie",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["setjwtcookie(res",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmetadata('roles",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":704,"title":{},"body":{"index.html":{}}}],["several",{"_index":782,"title":{},"body":{"index.html":{}}}],["short",{"_index":785,"title":{},"body":{"index.html":{}}}],["show/hide",{"_index":827,"title":{},"body":{"index.html":{}}}],["side",{"_index":832,"title":{},"body":{"index.html":{}}}],["sign",{"_index":823,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":769,"title":{},"body":{"index.html":{}}}],["simplify",{"_index":774,"title":{},"body":{"index.html":{}}}],["single",{"_index":816,"title":{},"body":{"index.html":{}}}],["smtp",{"_index":298,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["smtps://${environment.smtp.login}:${environment.smtp.password}@${environment.smtp.server",{"_index":447,"title":{},"body":{"modules/MailModule.html":{}}}],["solve",{"_index":738,"title":{},"body":{"index.html":{}}}],["sort",{"_index":903,"title":{},"body":{"index.html":{}}}],["source",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginInput.html":{},"modules/AuthModule.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"modules/JwtModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["spa",{"_index":815,"title":{},"body":{"index.html":{}}}],["specifically",{"_index":813,"title":{},"body":{"index.html":{}}}],["stack",{"_index":681,"title":{},"body":{"index.html":{}}}],["standard",{"_index":822,"title":{},"body":{"index.html":{}}}],["standardized",{"_index":906,"title":{},"body":{"index.html":{}}}],["start:api",{"_index":720,"title":{},"body":{"index.html":{}}}],["started",{"_index":677,"title":{"index.html":{}},"body":{"index.html":{}}}],["startreload",{"_index":722,"title":{},"body":{"index.html":{}}}],["stateless",{"_index":841,"title":{},"body":{"index.html":{}}}],["statements",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["strategy",{"_index":416,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strict",{"_index":137,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"modules/MailModule.html":{}}}],["string",{"_index":47,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"interfaces/RequestUser.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":908,"title":{},"body":{"index.html":{}}}],["styles",{"_index":862,"title":{},"body":{"index.html":{}}}],["styling",{"_index":849,"title":{},"body":{"index.html":{}}}],["sub",{"_index":406,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["subject",{"_index":482,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriptions",{"_index":803,"title":{},"body":{"index.html":{}}}],["super",{"_index":381,"title":{},"body":{"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{}}}],["super(options",{"_index":509,"title":{},"body":{"injectables/PrismaService.html":{}}}],["super.canactivate(context",{"_index":382,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["support",{"_index":914,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":755,"title":{},"body":{"index.html":{}}}],["svc",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":915,"title":{},"body":{"modules.html":{}}}],["system",{"_index":811,"title":{},"body":{"index.html":{}}}],["table",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":173,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["team",{"_index":751,"title":{},"body":{"index.html":{}}}],["temp",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":450,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["templates",{"_index":471,"title":{},"body":{"injectables/MailService.html":{}}}],["text",{"_index":736,"title":{},"body":{"index.html":{}}}],["theme",{"_index":856,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":512,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":513,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.auth.setjwtcookie(ctx.res",{"_index":212,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.clear_cookie_options",{"_index":220,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.config.cookiedomain",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config.graphql.playground",{"_index":349,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["this.config.jwtoptions.signoptions.expiresin",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config.production",{"_index":135,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{}}}],["this.config.remembermeexpiresin",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config.smtp.fromname",{"_index":483,"title":{},"body":{"injectables/MailService.html":{}}}],["this.getuser(data.email",{"_index":202,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.getuser(tokenpayload.email",{"_index":240,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.jwtservice.sign",{"_index":475,"title":{},"body":{"injectables/MailService.html":{}}}],["this.jwtservice.sign(jwtpayload",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(data.token",{"_index":237,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.mail.sendpasswordreset(user.email",{"_index":222,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.mailer.sendmail(options",{"_index":474,"title":{},"body":{"injectables/MailService.html":{}}}],["this.moduleref.get(prismaservice",{"_index":355,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["this.reflector.get('roles",{"_index":386,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["this.send",{"_index":481,"title":{},"body":{"injectables/MailService.html":{}}}],["through",{"_index":859,"title":{},"body":{"index.html":{}}}],["throw",{"_index":203,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":92,"title":{},"body":{"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["tokenpayload",{"_index":235,"title":{},"body":{"classes/AuthResolver.html":{}}}],["tokens",{"_index":843,"title":{},"body":{"index.html":{}}}],["tool",{"_index":766,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":884,"title":{},"body":{"index.html":{}}}],["tools",{"_index":651,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["tracing",{"_index":351,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["transformer",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["transpiler",{"_index":853,"title":{},"body":{"index.html":{}}}],["transport",{"_index":446,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":236,"title":{},"body":{"classes/AuthResolver.html":{}}}],["tsconfig.app.json",{"_index":895,"title":{},"body":{"index.html":{}}}],["type",{"_index":46,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthSession.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"injectables/GqlGuard.html":{},"interfaces/IContext.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/PasswordResetContext.html":{},"injectables/PrismaService.html":{},"interfaces/RequestUser.html":{},"classes/UserResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":921,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedefs",{"_index":345,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorized",{"_index":239,"title":{},"body":{"classes/AuthResolver.html":{}}}],["unauthorizedexception",{"_index":413,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('no",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":692,"title":{},"body":{"index.html":{}}}],["up",{"_index":716,"title":{},"body":{"index.html":{}}}],["updatemanyuser",{"_index":525,"title":{},"body":{"classes/UserResolver.html":{}}}],["updatemanyuser(@parent",{"_index":581,"title":{},"body":{"classes/UserResolver.html":{}}}],["updatemanyuser(parent",{"_index":545,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateoneuser",{"_index":526,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateoneuser(@parent",{"_index":573,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateoneuser(parent",{"_index":547,"title":{},"body":{"classes/UserResolver.html":{}}}],["uploading",{"_index":799,"title":{},"body":{"index.html":{}}}],["uploadlink",{"_index":793,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":359,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["upsertoneuser",{"_index":527,"title":{},"body":{"classes/UserResolver.html":{}}}],["upsertoneuser(@parent",{"_index":577,"title":{},"body":{"classes/UserResolver.html":{}}}],["upsertoneuser(parent",{"_index":549,"title":{},"body":{"classes/UserResolver.html":{}}}],["use",{"_index":869,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":590,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["used",{"_index":892,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":445,"title":{},"body":{"modules/MailModule.html":{}}}],["useguards",{"_index":165,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["useguards(gqlguard",{"_index":214,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["user",{"_index":187,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.decorator.ts",{"_index":597,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.id",{"_index":243,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["user.password",{"_index":210,"title":{},"body":{"classes/AuthResolver.html":{}}}],["user.roles",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlGuard.html":{}}}],["user.roles.some((userrole",{"_index":393,"title":{},"body":{"injectables/GqlGuard.html":{}}}],["user.roles.tostring",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.ts",{"_index":515,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["user_not_found",{"_index":206,"title":{},"body":{"classes/AuthResolver.html":{}}}],["userfound",{"_index":224,"title":{},"body":{"classes/AuthResolver.html":{}}}],["userresolver",{"_index":516,"title":{"classes/UserResolver.html":{}},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":192,"title":{},"body":{"classes/AuthResolver.html":{}}}],["users[0",{"_index":199,"title":{},"body":{"classes/AuthResolver.html":{}}}],["usertypedef",{"_index":554,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":288,"title":{},"body":{"modules/ConfigModule.html":{}}}],["using",{"_index":765,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":857,"title":{},"body":{"index.html":{}}}],["v14",{"_index":708,"title":{},"body":{"index.html":{}}}],["validate",{"_index":408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":410,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":64,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthPasswordResetRequestInput.html":{},"classes/AuthRegisterInput.html":{},"classes/AuthResendVerificationInput.html":{},"dependencies.html":{}}}],["value",{"_index":131,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":924,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":878,"title":{},"body":{"index.html":{}}}],["varying",{"_index":778,"title":{},"body":{"index.html":{}}}],["verification",{"_index":105,"title":{},"body":{"classes/AuthResendVerificationInput.html":{},"coverage.html":{}}}],["verify",{"_index":473,"title":{},"body":{"injectables/MailService.html":{},"miscellaneous/typealiases.html":{}}}],["versioned",{"_index":886,"title":{},"body":{"index.html":{}}}],["via",{"_index":724,"title":{},"body":{"index.html":{}}}],["void",{"_index":468,"title":{},"body":{"injectables/MailService.html":{}}}],["vs",{"_index":767,"title":{},"body":{"index.html":{}}}],["vscode",{"_index":725,"title":{},"body":{"index.html":{}}}],["web",{"_index":682,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["websocketlink",{"_index":802,"title":{},"body":{"index.html":{}}}],["websockets",{"_index":805,"title":{},"body":{"index.html":{}}}],["welcome!&#x1f331",{"_index":695,"title":{},"body":{"index.html":{}}}],["within",{"_index":772,"title":{},"body":{"index.html":{}}}],["work",{"_index":814,"title":{},"body":{"index.html":{}}}],["writegraphqlschema",{"_index":621,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["writegraphqlschema(outpath",{"_index":673,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wrong_password",{"_index":245,"title":{},"body":{"classes/AuthResolver.html":{}}}],["x",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f367",{"_index":696,"title":{},"body":{"index.html":{}}}],["x1f370",{"_index":702,"title":{},"body":{"index.html":{}}}],["x1f380",{"_index":773,"title":{},"body":{"index.html":{}}}],["x1f939",{"_index":690,"title":{},"body":{"index.html":{}}}],["yes",{"_index":499,"title":{},"body":{"injectables/PrismaService.html":{}}}],["zen",{"_index":678,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["zen/api",{"_index":59,"title":{},"body":{"classes/AuthLoginInput.html":{},"classes/AuthPasswordChangeInput.html":{},"classes/AuthPasswordResetConfirmationInput.html":{},"classes/AuthRegisterInput.html":{}}}],["zenadmin",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zengraphqlmodule",{"_index":15,"title":{"modules/ZenGraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["zensoftware.ca",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zensoftware/zen",{"_index":689,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAppModule -->\n\nJwtModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nAppModule -->\n\nZenGraphQLModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            JwtModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ZenGraphQLModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigModule } from './config';\nimport { ZenGraphQLModule } from './graphql';\nimport { JwtModule } from './jwt';\nimport { PrismaModule } from './prisma';\n\n@Module({\n  imports: [ConfigModule, JwtModule, ZenGraphQLModule, PrismaModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthLoginInput.html":{"url":"classes/AuthLoginInput.html","title":"class - AuthLoginInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthLoginInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/auth-login-input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                rememberMe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@MaxLength(254)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-login-input.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Length(1, ApiConstants.PASSWORD_MAX_LENGTH)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-login-input.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            rememberMe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-login-input.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiConstants } from '@zen/api-interfaces';\nimport { IsBoolean, IsEmail, Length, MaxLength } from 'class-validator';\n\nexport class AuthLoginInput {\n  @IsEmail()\n  @MaxLength(254)\n  readonly email: string;\n\n  @Length(1, ApiConstants.PASSWORD_MAX_LENGTH)\n  readonly password: string;\n\n  @IsBoolean()\n  readonly rememberMe: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtModule\n\nJwtModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtModule->AuthModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nGqlGuard \n\nGqlGuard \n\nGqlGuard  -->\n\nAuthModule->GqlGuard \n\n\n\n\n\nJwtModule \n\nJwtModule \n\nJwtModule  -->\n\nAuthModule->JwtModule \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGqlGuard\n\nGqlGuard\n\nAuthModule -->\n\nGqlGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GqlGuard\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JwtModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            GqlGuard\n                        \n                        \n                            JwtModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { JwtModule } from '../jwt';\nimport { PrismaModule } from '../prisma';\nimport { AuthService } from './auth.service';\nimport { GqlGuard } from './gql';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [JwtModule, PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  providers: [AuthService, JwtStrategy, GqlGuard],\n  exports: [JwtModule, PassportModule, GqlGuard, AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPasswordChangeInput.html":{"url":"classes/AuthPasswordChangeInput.html","title":"class - AuthPasswordChangeInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPasswordChangeInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/auth-password-change-input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                newPassword\n                            \n                            \n                                    Readonly\n                                oldPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Length(ApiConstants.PASSWORD_MIN_LENGTH, ApiConstants.PASSWORD_MAX_LENGTH)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-password-change-input.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-password-change-input.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiConstants } from '@zen/api-interfaces';\nimport { IsNotEmpty, Length } from 'class-validator';\n\nexport class AuthPasswordChangeInput {\n  @IsNotEmpty()\n  readonly oldPassword: string;\n\n  @Length(ApiConstants.PASSWORD_MIN_LENGTH, ApiConstants.PASSWORD_MAX_LENGTH)\n  readonly newPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPasswordResetConfirmationInput.html":{"url":"classes/AuthPasswordResetConfirmationInput.html","title":"class - AuthPasswordResetConfirmationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPasswordResetConfirmationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/auth-password-reset-confirmation-input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                newPassword\n                            \n                            \n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Length(ApiConstants.PASSWORD_MIN_LENGTH, ApiConstants.PASSWORD_MAX_LENGTH)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-password-reset-confirmation-input.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-password-reset-confirmation-input.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiConstants } from '@zen/api-interfaces';\nimport { IsNotEmpty, Length } from 'class-validator';\n\nexport class AuthPasswordResetConfirmationInput {\n  @Length(ApiConstants.PASSWORD_MIN_LENGTH, ApiConstants.PASSWORD_MAX_LENGTH)\n  readonly newPassword: string;\n\n  @IsNotEmpty()\n  readonly token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPasswordResetRequestInput.html":{"url":"classes/AuthPasswordResetRequestInput.html","title":"class - AuthPasswordResetRequestInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPasswordResetRequestInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/auth-password-reset-request-input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@MaxLength(254)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-password-reset-request-input.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, MaxLength } from 'class-validator';\n\nexport class AuthPasswordResetRequestInput {\n  @IsEmail()\n  @MaxLength(254)\n  readonly email: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthRegisterInput.html":{"url":"classes/AuthRegisterInput.html","title":"class - AuthRegisterInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthRegisterInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/auth-register-input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                    Optional\n                                firstName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lastName\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@MaxLength(254)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-register-input.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-register-input.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-register-input.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Length(ApiConstants.PASSWORD_MIN_LENGTH, 100)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-register-input.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiConstants } from '@zen/api-interfaces';\nimport { IsEmail, IsNotEmpty, Length, MaxLength } from 'class-validator';\n\nexport class AuthRegisterInput {\n  @IsEmail()\n  @MaxLength(254)\n  readonly email: string;\n\n  readonly firstName?: string;\n\n  readonly lastName?: string;\n\n  @Length(ApiConstants.PASSWORD_MIN_LENGTH, 100)\n  readonly password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResendVerificationInput.html":{"url":"classes/AuthResendVerificationInput.html","title":"class - AuthResendVerificationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResendVerificationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/auth-resend-verification-input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@MaxLength(254)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/models/auth-resend-verification-input.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, MaxLength } from 'class-validator';\n\nexport class AuthResendVerificationInput {\n  @IsEmail()\n  @MaxLength(254)\n  readonly email: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Auth.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                CLEAR_COOKIE_OPTIONS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authExchangeToken\n                            \n                            \n                                    Async\n                                authLogin\n                            \n                            \n                                    Async\n                                authPasswordChange\n                            \n                            \n                                    Async\n                                authPasswordResetConfirmation\n                            \n                            \n                                    Async\n                                authPasswordResetRequest\n                            \n                            \n                                    Async\n                                authRegister\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, config: ConfigService, jwtService: JwtService, mail: MailService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/graphql/resolvers/Auth.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            CLEAR_COOKIE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CookieOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    maxAge: 0,\n    secure: this.config.production,\n    sameSite: this.config.production ? 'strict' : 'lax',\n  }\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:70\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authExchangeToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authExchangeToken(ctx: IContext, reqUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()@UseGuards(GqlGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authLogin(ctx: IContext, data: AuthLoginInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthLoginInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authPasswordChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authPasswordChange(ctx: IContext, data: AuthPasswordChangeInput, reqUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()@UseGuards(GqlGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthPasswordChangeInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authPasswordResetConfirmation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authPasswordResetConfirmation(ctx: IContext, data: AuthPasswordResetConfirmationInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthPasswordResetConfirmationInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authPasswordResetRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authPasswordResetRequest(ctx: IContext, data: AuthPasswordResetRequestInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthPasswordResetRequestInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authRegister(ctx: IContext, data: AuthRegisterInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthRegisterInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(email: string, ctx: IContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Auth.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n                                    \n                                                IContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, UseGuards } from '@nestjs/common';\nimport { Args, Context, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport bcrypt from 'bcryptjs';\nimport { CookieOptions } from 'express';\nimport gql from 'graphql-tag';\n\nimport { GqlGuard, GqlUser, RequestUser, Role } from '../../auth';\nimport { AuthService } from '../../auth/auth.service';\nimport { ConfigService } from '../../config';\nimport { JwtService } from '../../jwt';\nimport { MailService } from '../../mail';\nimport {\n  AuthLoginInput,\n  AuthPasswordChangeInput,\n  AuthPasswordResetConfirmationInput,\n  AuthPasswordResetRequestInput,\n  AuthRegisterInput,\n  IContext,\n} from '../models';\n\nexport const AuthTypeDef = gql`\n  extend type Query {\n    authLogin(data: AuthLoginInput!): AuthSession!\n    authExchangeToken: AuthSession!\n    authPasswordResetRequest(data: AuthPasswordResetRequestInput!): Boolean\n  }\n\n  extend type Mutation {\n    authPasswordChange(data: AuthPasswordChangeInput!): Boolean\n    authPasswordResetConfirmation(data: AuthPasswordResetConfirmationInput!): Boolean\n    authRegister(data: AuthRegisterInput!): User!\n  }\n\n  type AuthSession {\n    id: String!\n    maxAge: String!\n    roles: [String!]!\n    rememberMe: Boolean!\n  }\n\n  input AuthLoginInput {\n    email: String!\n    password: String!\n    rememberMe: Boolean!\n  }\n\n  input AuthPasswordChangeInput {\n    oldPassword: String!\n    newPassword: String!\n  }\n\n  input AuthPasswordResetConfirmationInput {\n    newPassword: String!\n    token: String!\n  }\n\n  input AuthPasswordResetRequestInput {\n    email: String!\n  }\n\n  input AuthRegisterInput {\n    email: String!\n    firstName: String!\n    password: String!\n  }\n`;\n\n@Resolver('Auth')\nexport class AuthResolver {\n  private CLEAR_COOKIE_OPTIONS: CookieOptions = {\n    maxAge: 0,\n    secure: this.config.production,\n    sameSite: this.config.production ? 'strict' : 'lax',\n  };\n\n  constructor(\n    private readonly auth: AuthService,\n    private readonly config: ConfigService,\n    private readonly jwtService: JwtService,\n    private readonly mail: MailService\n  ) {}\n\n  private async getUser(email: string, ctx: IContext) {\n    const users = await ctx.prisma.user.findMany({\n      where: {\n        email: {\n          mode: 'insensitive',\n          equals: email,\n        },\n      },\n    });\n\n    return users[0];\n  }\n\n  @Query()\n  async authLogin(@Context() ctx: IContext, @Args('data') data: AuthLoginInput) {\n    const user = await this.getUser(data.email, ctx);\n\n    if (!user) throw new HttpException({ code: 'USER_NOT_FOUND' }, 400);\n\n    const correctPassword = await bcrypt.compare(data.password, user.password);\n    if (!correctPassword) throw new HttpException({ code: 'INCORRECT_PASSWORD' }, 400);\n\n    return this.auth.setJwtCookie(ctx.res, user, data.rememberMe);\n  }\n\n  @Query()\n  @UseGuards(GqlGuard)\n  async authExchangeToken(@Context() ctx: IContext, @GqlUser() reqUser: RequestUser) {\n    const user = await ctx.prisma.user.findOne({\n      where: { id: reqUser.id },\n    });\n\n    if (user) {\n      return this.auth.setJwtCookie(ctx.res, user, ctx.req.cookies['rememberMe']);\n    } else {\n      ctx.res.clearCookie('jwt', this.CLEAR_COOKIE_OPTIONS);\n      ctx.res.clearCookie('rememberMe', this.CLEAR_COOKIE_OPTIONS);\n      throw new HttpException({ code: 'USER_NOT_FOUND' }, 400);\n    }\n  }\n\n  @Query()\n  async authPasswordResetRequest(\n    @Context() ctx: IContext,\n    @Args('data') data: AuthPasswordResetRequestInput\n  ) {\n    const user = await this.getUser(data.email, ctx);\n\n    if (!user) throw new HttpException({ code: 'USER_NOT_FOUND' }, 400);\n\n    this.mail.sendPasswordReset(user.email);\n  }\n\n  @Mutation()\n  async authRegister(@Context() ctx: IContext, @Args('data') data: AuthRegisterInput) {\n    const userFound = await this.getUser(data.email, ctx);\n    if (userFound) throw new HttpException({ code: 'EMAIL_TAKEN' }, 400);\n\n    const hashedPassword = await bcrypt.hash(data.password, 12);\n\n    return await ctx.prisma.user.create({\n      data: {\n        firstName: data.firstName,\n        lastName: data.lastName,\n        email: data.email.trim(),\n        password: hashedPassword,\n        roles: { set: [Role.Registered] },\n      },\n    });\n  }\n\n  @Mutation()\n  async authPasswordResetConfirmation(\n    @Context() ctx: IContext,\n    @Args('data') data: AuthPasswordResetConfirmationInput\n  ) {\n    let tokenPayload;\n    try {\n      tokenPayload = this.jwtService.verify(data.token);\n    } catch {\n      throw new HttpException({ code: 'UNAUTHORIZED' }, 400);\n    }\n\n    const user = await this.getUser(tokenPayload.email, ctx);\n\n    if (!user) throw new HttpException({ code: 'USER_NOT_FOUND' }, 400);\n\n    const hashedPassword = await bcrypt.hash(data.newPassword, 12);\n\n    await ctx.prisma.user.update({\n      where: { id: user.id },\n      data: { password: hashedPassword },\n    });\n  }\n\n  @Mutation()\n  @UseGuards(GqlGuard)\n  async authPasswordChange(\n    @Context() ctx: IContext,\n    @Args('data') data: AuthPasswordChangeInput,\n    @GqlUser() reqUser: RequestUser\n  ) {\n    const user = await ctx.prisma.user.findOne({ where: { id: reqUser.id } });\n    if (!user) throw new HttpException({ code: 'USER_NOT_FOUND' }, 400);\n\n    const correctPassword = await bcrypt.compare(data.oldPassword, user.password);\n    if (!correctPassword) throw new HttpException({ code: 'WRONG_PASSWORD' }, 400);\n\n    const hashedPassword = await bcrypt.hash(data.newPassword, 12);\n\n    await ctx.prisma.user.update({\n      where: { id: user.id },\n      data: { password: hashedPassword },\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setJwtCookie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setJwtCookie\n                        \n                        \n                    \n                \n            \n            \n                \nsetJwtCookie(res: Response, user: RequestUser, rememberMe: boolean | string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    user\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    rememberMe\n                                    \n                                            boolean | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CookieOptions, Response } from 'express';\n\nimport { RequestUser } from '../auth';\nimport { ConfigService } from '../config';\nimport { AuthSession } from '../graphql/models/user-session';\nimport { JwtService } from '../jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(private readonly jwtService: JwtService, private readonly config: ConfigService) {}\n\n  setJwtCookie(res: Response, user: RequestUser, rememberMe: boolean | string = false) {\n    if (typeof rememberMe === 'string') {\n      rememberMe = rememberMe === 'true';\n    }\n\n    const jwtPayload = {\n      id: user.id,\n      roles: user.roles ? user.roles.toString() : undefined,\n    };\n\n    const expiresIn = rememberMe\n      ? this.config.rememberMeExpiresIn\n      : (this.config.jwtOptions.signOptions.expiresIn as number);\n    const maxAge = expiresIn * 1000;\n    const token = this.jwtService.sign(jwtPayload, { expiresIn });\n\n    const cookieOptions: CookieOptions = {\n      maxAge,\n      secure: this.config.production,\n      sameSite: this.config.production ? 'strict' : 'lax',\n      domain: this.config.cookieDomain,\n    };\n\n    res.cookie('jwt', token, cookieOptions);\n    res.cookie('rememberMe', rememberMe, cookieOptions);\n\n    const response: AuthSession = {\n      id: user.id,\n      maxAge: maxAge.toString(),\n      roles: user.roles,\n      rememberMe,\n    };\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthSession.html":{"url":"interfaces/AuthSession.html","title":"interface - AuthSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/user-session.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        maxAge\n                                \n                                \n                                        rememberMe\n                                \n                                \n                                        roles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                    \n                                \n                                \n                                    \n                                        maxAge:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rememberMe\n                                    \n                                \n                                \n                                    \n                                        rememberMe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthSession {\n  id: string;\n  maxAge: string;\n  roles: string[];\n  rememberMe: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\nimport { environment } from '../../environments/environment';\nimport { ConfigService } from './config.service';\n\n@Global()\n@Module({\n  providers: [{ provide: ConfigService, useValue: environment }],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/config/config.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EnvironmentBase\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieDomain\n                            \n                            \n                                expressPort\n                            \n                            \n                                graphql\n                            \n                            \n                                jwtOptions\n                            \n                            \n                                postgres\n                            \n                            \n                                production\n                            \n                            \n                                rememberMeExpiresIn\n                            \n                            \n                                smtp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookieDomain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JwtModuleOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postgres\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PostgreSQLConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            production\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rememberMeExpiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            smtp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:14\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { EnvironmentBase } from '../../environments/environment.base';\n\n@Injectable()\nexport class ConfigService extends EnvironmentBase {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentBase.html":{"url":"classes/EnvironmentBase.html","title":"class - EnvironmentBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/environments/environment.base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieDomain\n                            \n                            \n                                expressPort\n                            \n                            \n                                graphql\n                            \n                            \n                                jwtOptions\n                            \n                            \n                                postgres\n                            \n                            \n                                production\n                            \n                            \n                                rememberMeExpiresIn\n                            \n                            \n                                smtp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookieDomain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JwtModuleOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postgres\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PostgreSQLConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            production\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rememberMeExpiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            smtp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { JwtModuleOptions } from '@nestjs/jwt';\nimport { PoolConfig as PostgreSQLConfig } from 'pg';\n\nexport class EnvironmentBase {\n  production: boolean;\n  expressPort: string | number;\n  graphql: {\n    playground: boolean;\n  };\n  postgres: PostgreSQLConfig;\n  jwtOptions: JwtModuleOptions;\n  rememberMeExpiresIn: number;\n  cookieDomain: string;\n  smtp: {\n    server: string;\n    login: string;\n    password: string;\n    fromName: string;\n    fromEmail: string;\n  };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlConfigService.html":{"url":"injectables/GqlConfigService.html","title":"injectable - GqlConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GqlConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/gql-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGqlOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/graphql/gql-config.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGqlOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGqlOptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/graphql/gql-config.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     GqlModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ContextIdFactory, ModuleRef } from '@nestjs/core';\nimport { GqlModuleOptions, GqlOptionsFactory } from '@nestjs/graphql';\nimport { print } from 'graphql';\n\nimport { ConfigService } from '../config';\nimport { PrismaService } from '../prisma';\nimport { ALL_TYPE_DEFS } from './resolvers';\n\n@Injectable()\nexport class GqlConfigService implements GqlOptionsFactory {\n  constructor(private readonly config: ConfigService, private moduleRef: ModuleRef) {}\n\n  createGqlOptions(): GqlModuleOptions {\n    return {\n      typeDefs: print(ALL_TYPE_DEFS),\n      installSubscriptionHandlers: true,\n      debug: !this.config.production,\n      playground: this.config.graphql.playground,\n      introspection: this.config.graphql.playground,\n      tracing: this.config.graphql.playground,\n      cors: this.config.production ? undefined : { credentials: true, origin: true },\n      context: async ctx => {\n        const prisma = this.moduleRef.get(PrismaService, { strict: false });\n\n        return ctx.connection\n          ? { ...ctx, req: ctx.connection.context, prisma }\n          : { ...ctx, prisma };\n      },\n      uploads: {\n        maxFileSize: 20_000_000, // 20 MB\n        maxFiles: 5,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlGuard.html":{"url":"injectables/GqlGuard.html","title":"injectable - GqlGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GqlGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/gql/gql.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/gql/gql.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/gql/gql.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/gql/gql.guard.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Role } from '@prisma/client';\n\n@Injectable()\nexport class GqlGuard extends AuthGuard('jwt') {\n  constructor(private readonly reflector: Reflector) {\n    super();\n  }\n\n  async canActivate(context: ExecutionContext) {\n    await super.canActivate(context);\n\n    const ctx = GqlExecutionContext.create(context);\n    const user = ctx.getContext().req.user;\n\n    const classRoles = this.reflector.get('roles', ctx.getClass());\n    const handlerRoles = this.reflector.get('roles', ctx.getHandler());\n\n    let allowedRoles: Role[] = [];\n    if (classRoles) allowedRoles = classRoles;\n    if (handlerRoles) allowedRoles = allowedRoles.concat(handlerRoles);\n\n    if (allowedRoles.length === 0) return true;\n\n    return user.roles && user.roles.some((userRole: Role) => allowedRoles.includes(userRole));\n  }\n\n  getRequest(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IContext.html":{"url":"interfaces/IContext.html","title":"interface - IContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/models/context.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        prisma\n                                \n                                \n                                            Optional\n                                        req\n                                \n                                \n                                            Optional\n                                        res\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        prisma\n                                    \n                                \n                                \n                                    \n                                        prisma:         PrismaService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PrismaService\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                    \n                                \n                                \n                                    \n                                        req:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        res\n                                    \n                                \n                                \n                                    \n                                        res:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PrismaService } from '../../prisma';\n\nexport interface IContext {\n  req?: any;\n  res?: any;\n  prisma?: PrismaService;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtModule.html":{"url":"modules/JwtModule.html","title":"module - JwtModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/jwt/jwt.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule as NestJwtModule } from '@nestjs/jwt';\n\nimport { environment } from '../../environments/environment';\n\n@Module({\n  imports: [NestJwtModule.register(environment.jwtOptions)],\n  exports: [NestJwtModule],\n})\nexport class JwtModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        aud\n                                \n                                \n                                            Optional\n                                        exp\n                                \n                                \n                                            Optional\n                                        iat\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        iss\n                                \n                                \n                                        roles\n                                \n                                \n                                            Optional\n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  readonly id: string;\n  readonly roles: string;\n  readonly iss?: string;\n  readonly aud?: string;\n  readonly sub?: string;\n  readonly exp?: number;\n  readonly iat?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/jwt.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Request as ExReq } from 'express';\nimport { Strategy } from 'passport-jwt';\n\nimport { ConfigService } from '../config';\nimport { JwtPayload } from './jwt-payload';\nimport { RequestUser } from './request-user';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(private readonly config: ConfigService) {\n    super({\n      secretOrKey: config.production ? config.jwtOptions.publicKey : config.jwtOptions.secret,\n      jwtFromRequest: (req: ExReq & { token: any }) => {\n        if (!req.token) {\n          return req.cookies['jwt']; // HTTP request\n        } else {\n          return req.token; // Websocket connections\n        }\n      },\n    });\n  }\n\n  async validate(payload: JwtPayload) {\n    let roles: string[] = [];\n    if (payload.roles) {\n      roles = payload.roles.split(',');\n    }\n    const user: RequestUser = { id: payload.id, roles };\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_imports\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nJwtModule\n\nJwtModule\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nJwtModule->MailModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JwtModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import path from 'path';\n\nimport { HandlebarsAdapter, MailerModule } from '@nest-modules/mailer';\nimport { Module } from '@nestjs/common';\n\nimport { environment } from '../../environments/environment';\nimport { JwtModule } from '../jwt';\nimport { MailService } from './mail.service';\n\n@Module({\n  imports: [\n    JwtModule,\n    MailerModule.forRootAsync({\n      useFactory: () => ({\n        transport: `smtps://${environment.smtp.login}:${environment.smtp.password}@${environment.smtp.server}`,\n        defaults: { from: `\"${environment.smtp.fromName}\" ` },\n        template: {\n          dir: path.join(__dirname, 'mail/templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                send\n                            \n                            \n                                sendPasswordReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailer: MailerService, jwtService: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mail/mail.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            send\n                        \n                        \n                    \n                \n            \n            \n                \nsend(options: MailOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/mail/mail.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \nsendPasswordReset(to: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/mail/mail.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ISendMailOptions, MailerService } from '@nest-modules/mailer';\nimport { Injectable } from '@nestjs/common';\n\nimport { ConfigService } from '../config';\nimport { JwtService } from '../jwt';\nimport { PasswordResetContext } from './templates';\n\ntype MailTemplate = 'verify-email' | 'password-reset';\n\ntype MailOptions = ISendMailOptions & { template?: MailTemplate };\n\n@Injectable()\nexport class MailService {\n  constructor(\n    private readonly mailer: MailerService,\n    private readonly jwtService: JwtService,\n    private readonly config: ConfigService\n  ) {}\n\n  send(options: MailOptions) {\n    return this.mailer.sendMail(options);\n  }\n\n  sendPasswordReset(to: string) {\n    const token = this.jwtService.sign({ email: to }, { expiresIn: '1d' });\n\n    const context: PasswordResetContext = {\n      resetUrl: 'https://zensoftware.ca/#/password-reset-confirmation?token=' + encodeURI(token),\n    };\n\n    this.send({\n      template: 'password-reset',\n      to,\n      subject: `${this.config.smtp.fromName} Password Reset`,\n      context,\n    }).then();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordResetContext.html":{"url":"interfaces/PasswordResetContext.html","title":"interface - PasswordResetContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordResetContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mail/templates/password-reset.context.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        resetUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        resetUrl\n                                    \n                                \n                                \n                                    \n                                        resetUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PasswordResetContext {\n  resetUrl: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/prisma/prisma.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/prisma/prisma.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onDelete\n                            \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: PrismaClientOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    PrismaClientOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDelete(args: onDeleteArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            onDeleteArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleDestroy, OnModuleInit, Optional, Scope } from '@nestjs/common';\nimport { PrismaDelete, onDeleteArgs } from '@paljs/plugins';\nimport { PrismaClient, PrismaClientOptions } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n  constructor(@Optional() options?: PrismaClientOptions) {\n    super(options);\n  }\n\n  async onDelete(args: onDeleteArgs) {\n    const prismaDelete = new PrismaDelete(this);\n    await prismaDelete.onDelete(args);\n  }\n\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async onModuleDestroy() {\n    await this.$disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestUser.html":{"url":"interfaces/RequestUser.html","title":"interface - RequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/request-user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        roles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RequestUser {\n  id: string;\n  roles: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/User.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                aggregateUser\n                            \n                            \n                                    Async\n                                createOneUser\n                            \n                            \n                                    Async\n                                deleteManyUser\n                            \n                            \n                                    Async\n                                deleteOneUser\n                            \n                            \n                                    Async\n                                findManyUser\n                            \n                            \n                                    Async\n                                findManyUserCount\n                            \n                            \n                                    Async\n                                findOneUser\n                            \n                            \n                                    Async\n                                password\n                            \n                            \n                                    Async\n                                updateManyUser\n                            \n                            \n                                    Async\n                                updateOneUser\n                            \n                            \n                                    Async\n                                upsertOneUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            aggregateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    aggregateUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyUserCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyUserCount(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            password\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    password()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneUser(parent, info, args, ctx)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UseGuards } from '@nestjs/common';\nimport {\n  Args,\n  Context,\n  Info,\n  Mutation,\n  Parent,\n  Query,\n  ResolveField,\n  Resolver,\n} from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { GqlGuard, GqlUser, RequestUser, Role, Roles } from '../../auth';\nimport { IContext } from '../models';\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/User/resolvers';\n\nexport const UserTypeDef = null;\n// export const UserTypeDef = gql`\n//   extend type Query {\n//     sampleUserQuery: User!\n//   }\n//   extend type Mutation {\n//     sampleUserMutation(args: Int!): Boolean\n//   }\n//   extend type User {\n//     sampleUserField: String\n//   }\n// `;\n\n@Resolver('User')\n@UseGuards(GqlGuard)\n@Roles('Admin')\nexport class UserResolver {\n  @ResolveField()\n  async password() {\n    return '';\n  }\n\n  @Query()\n  async findOneUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Query.findOneUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Query()\n  async findManyUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Query.findManyUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Query()\n  async findManyUserCount(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Query.findManyUserCount(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Query()\n  async aggregateUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Query.aggregateUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async createOneUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.createOneUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async updateOneUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.updateOneUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async deleteOneUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.deleteOneUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async upsertOneUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.upsertOneUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async deleteManyUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.deleteManyUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n\n  @Mutation()\n  async updateManyUser(@Parent() parent, @Info() info, @Args() args, @Context() ctx) {\n    return resolvers.Mutation.updateManyUser(parent, PrismaSelectArgs(info, args), ctx);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZenGraphQLModule.html":{"url":"modules/ZenGraphQLModule.html","title":"module - ZenGraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    ZenGraphQLModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ZenGraphQLModule\n\n\n\ncluster_ZenGraphQLModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nZenGraphQLModule -->\n\nAuthModule->ZenGraphQLModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nZenGraphQLModule -->\n\nMailModule->ZenGraphQLModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nZenGraphQLModule -->\n\nPrismaModule->ZenGraphQLModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/graphql/zen-graphql.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\n\nimport { AuthModule } from '../auth';\nimport { MailModule } from '../mail';\nimport { PrismaModule } from '../prisma';\nimport { GqlConfigService } from './gql-config.service';\nimport { NEST_RESOLVERS } from './resolvers';\n\n@Global()\n@Module({\n  imports: [\n    AuthModule,\n    PrismaModule,\n    MailModule,\n    GraphQLModule.forRootAsync({\n      useClass: GqlConfigService,\n    }),\n  ],\n  providers: [...NEST_RESOLVERS],\n})\nexport class ZenGraphQLModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/gql/gql-user.decorator.ts\n            \n            variable\n            GqlUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/gql/gql.guard.ts\n            \n            injectable\n            GqlGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/http-user.decorator.ts\n            \n            variable\n            HttpUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/request-user.ts\n            \n            interface\n            RequestUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            function\n            createContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/gql-config.service.ts\n            \n            injectable\n            GqlConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/auth-login-input.ts\n            \n            class\n            AuthLoginInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/auth-password-change-input.ts\n            \n            class\n            AuthPasswordChangeInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/auth-password-reset-confirmation-input.ts\n            \n            class\n            AuthPasswordResetConfirmationInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/auth-password-reset-request-input.ts\n            \n            class\n            AuthPasswordResetRequestInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/auth-register-input.ts\n            \n            class\n            AuthRegisterInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/auth-resend-verification-input.ts\n            \n            class\n            AuthResendVerificationInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/context.ts\n            \n            interface\n            IContext\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/models/user-session.ts\n            \n            interface\n            AuthSession\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/prisma-select-args.ts\n            \n            function\n            PrismaSelectArgs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Auth.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Auth.ts\n            \n            variable\n            AuthTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/User.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/User.ts\n            \n            variable\n            UserTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            ALL_TYPE_DEFS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            GRAPHQL_SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            NEST_RESOLVERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            NEST_TYPE_DEFS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            PRISMA_SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/write-schema.ts\n            \n            function\n            WriteGraphQLSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/write-schema.ts\n            \n            variable\n            execWriteFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/mail/templates/password-reset.context.ts\n            \n            interface\n            PasswordResetContext\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.base.ts\n            \n            class\n            EnvironmentBase\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nest-modules/mailer : ^1.3.22\n        \n            @nestjs/common : ^7.4.4\n        \n            @nestjs/core : ^7.4.4\n        \n            @nestjs/graphql : ^7.7.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.4.4\n        \n            @paljs/plugins : ^2.2.0\n        \n            @prisma/client : ^2.8.0\n        \n            apollo-server-express : ^2.18.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            cookie-parser : ^1.4.5\n        \n            date-fns : ^2.16.1\n        \n            dotenv : ^8.2.0\n        \n            graphql : ^15.3.0\n        \n            graphql-tools : ^6.2.4\n        \n            helmet : ^4.1.1\n        \n            lodash-es : ^4.17.15\n        \n            nodemailer : ^6.4.13\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~6.5.5\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createContext   (apps/.../context.ts)\n                        \n                        \n                            PrismaSelectArgs   (apps/.../prisma-select-args.ts)\n                        \n                        \n                            WriteGraphQLSchema   (apps/.../write-schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/api/src/app/graphql/context.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createContext\n                        \n                        \n                    \n                \n            \n            \n                \ncreateContext()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         Context\n\n                    \n                \n            \n        \n    \n    apps/api/src/app/graphql/prisma-select-args.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PrismaSelectArgs\n                        \n                        \n                    \n                \n            \n            \n                \nPrismaSelectArgs(info, args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/api/src/app/graphql/write-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            WriteGraphQLSchema\n                        \n                        \n                    \n                \n            \n            \n                \nWriteGraphQLSchema(outPath, schema)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n⛩ Zen ⛩\nModern Full Stack Web Portal built with Nest and Angular\nZen Docs\nGitHub repo ZenSoftware/Zen\n&#x1F939; Currently under development - New contributors are welcome!&#x1F331;\n&#x1F367; You may open a git issue if you are interested in contributing! &#x1F370;\n\nProject Setup Instructions\nRequirements\n\nNode v14\nDocker\n\ngit clone https://github.com/ZenSoftware/Zen.git --depth=1\ncd Zen\nnpm i\ndocker-compose up -d\nnpm run prisma:save\nnpm run start:api\n\nnpm run apollo:watch\nnpm run startReload GraphQL schema for Apollo extension via VSCode command palette after the api server has started: >Apollo: Reload schema\n\nGraphQL Ambitions\n\n Nest GraphQL resolvers as a gateway to Prisma Client.\n Prisma Case Insensitive Filtering For case-insensitive querying of text.\n PrismaSelect to solve the N+1 problem for all queries for free.\n PrismaDelete to add CASCADE and SET_NULL deletion capabilities to Prisma. These features have yet to be implemented by the core Prisma team. This project will convert to the approach directly supported by Prisma when the official feature becomes available.\n Nest GraphQL SDL generation to enable auto-completion using a tool like Apollo extension for VS Code\n Code generation of apollo-angular services to enable simple, type safe access to the GraphQL API within Angular. &#x1F380;\n An Angular GraphQLModule to simplify the configuration of the ApolloClient to enable/disable the varying ApolloLink features.\n HttpBatchLink for batching several GraphQL requests that occur within a short debounce interval. This really helps to alleviate network congestion.\n UploadLink to give ApolloClient HTTP multi-part form requests capabilities. Enabling the uploading of files via GraphQLUpload.\n WebSocketLink for GraphQL subscriptions over websockets.\n\n\nAPI Authentication, Performance & Scaling Ambitions\n\n Nest authentication integration, user creation, and login system designed specifically to work for an Angular SPA (single page application). This project will provide responsive, \"mobile first\" interfaces for the standard set of authentication features (sign up, login, password change).\n Angular route guards and Angular directives to show/hide content depending on user permissions.\n Nest authorization directives for server side role-based access control to allow for declarative, fine grained security control over all GraphQL queries and mutations.\n 100% stateless web server authentication via JWT (Javascript Web Tokens). Keeping the API stateless will enable horizontal scaling of container replicas of the api in production.\n\n\nModern Web Components and Styling Ambitions\n\n SASS chosen as the css transpiler of choice\n Angular Material components & theme.\n Directly import Bootstrap reset, utilities, & grid features through SASS imports, and exclude the Bootstrap theme and component styles. These features are missing from Angular Material, and greatly simplify the creation of responsive, mobile first applications.\n\n\nProject & Dev Tools Ambitions\n\n Nx for project management to allow for the use of Nx Console extensions for VSCode. Nx Console is a GUI interface for monorepos that adds a lot of modern developer conveniences. It also helps to simplify the use of the various Angular & Nest code generation schematics available in the ecosystem.\n Angular Language Service for VSCode for modern IDE tooling.\n NPM scripts for versioned releases of the api server as a containerized Docker image. node:14-alpine is used as the Docker container base image, and the appropriate tsconfig.app.json configurations are being applied for the Node v14 Nest app.\n Enforced code formatting via Prettier & import-sort, guaranteeing all contributions to the project are standardized with predictable structure, and clear legibility.\n Compodoc to generate Nest & Angular documentation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZenGraphQLModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAppModule -->\n\nJwtModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtModule->AuthModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nJwtModule->MailModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nZenGraphQLModule -->\n\nPrismaModule->ZenGraphQLModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nZenGraphQLModule->AppModule\n\n\n\nZenGraphQLModule -->\n\nAuthModule->ZenGraphQLModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nGqlGuard \n\nGqlGuard \n\nGqlGuard  -->\n\nAuthModule->GqlGuard \n\n\n\n\n\nJwtModule \n\nJwtModule \n\nJwtModule  -->\n\nAuthModule->JwtModule \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGqlGuard\n\nGqlGuard\n\nAuthModule -->\n\nGqlGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\nZenGraphQLModule -->\n\nMailModule->ZenGraphQLModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Context   (apps/.../context.ts)\n                        \n                        \n                            MailOptions   (apps/.../mail.service.ts)\n                        \n                        \n                            MailTemplate   (apps/.../mail.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/graphql/context.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            IContext\n\n                \n            \n        \n    \n    apps/api/src/app/mail/mail.service.ts\n    \n    \n        \n            \n                \n                    \n                    MailOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MailTemplate\n                \n            \n            \n                \n                        \"verify-email\" | \"password-reset\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_TYPE_DEFS   (apps/.../index.ts)\n                        \n                        \n                            AuthTypeDef   (apps/.../Auth.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            execWriteFile   (apps/.../write-schema.ts)\n                        \n                        \n                            GqlUser   (apps/.../gql-user.decorator.ts)\n                        \n                        \n                            GRAPHQL_SCHEMA   (apps/.../index.ts)\n                        \n                        \n                            HttpUser   (apps/.../http-user.decorator.ts)\n                        \n                        \n                            NEST_RESOLVERS   (apps/.../index.ts)\n                        \n                        \n                            NEST_TYPE_DEFS   (apps/.../index.ts)\n                        \n                        \n                            PRISMA_SCHEMA   (apps/.../index.ts)\n                        \n                        \n                            Roles   (apps/.../roles.decorator.ts)\n                        \n                        \n                            UserTypeDef   (apps/.../User.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/graphql/resolvers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_TYPE_DEFS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mergeTypeDefs([PRISMA_TYPE_DEFS, ...NEST_TYPE_DEFS])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GRAPHQL_SCHEMA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : makeExecutableSchema({ typeDefs: ALL_TYPE_DEFS })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NEST_RESOLVERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  AuthResolver,\n  UserResolver\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NEST_TYPE_DEFS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : [\n  AuthTypeDef,\n  UserTypeDef\n].filter(x => x)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PRISMA_SCHEMA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : makeExecutableSchema({ typeDefs: PRISMA_TYPE_DEFS })\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  extend type Query {\n    authLogin(data: AuthLoginInput!): AuthSession!\n    authExchangeToken: AuthSession!\n    authPasswordResetRequest(data: AuthPasswordResetRequestInput!): Boolean\n  }\n\n  extend type Mutation {\n    authPasswordChange(data: AuthPasswordChangeInput!): Boolean\n    authPasswordResetConfirmation(data: AuthPasswordResetConfirmationInput!): Boolean\n    authRegister(data: AuthRegisterInput!): User!\n  }\n\n  type AuthSession {\n    id: String!\n    maxAge: String!\n    roles: [String!]!\n    rememberMe: Boolean!\n  }\n\n  input AuthLoginInput {\n    email: String!\n    password: String!\n    rememberMe: Boolean!\n  }\n\n  input AuthPasswordChangeInput {\n    oldPassword: String!\n    newPassword: String!\n  }\n\n  input AuthPasswordResetConfirmationInput {\n    newPassword: String!\n    token: String!\n  }\n\n  input AuthPasswordResetRequestInput {\n    email: String!\n  }\n\n  input AuthRegisterInput {\n    email: String!\n    firstName: String!\n    password: String!\n  }\n`\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  expressPort: process.env.PORT,\n  graphql: {\n    playground: false,\n  },\n  postgres: {\n    host: 'postgres-svc',\n    port: 5432,\n    user: process.env.PGUSER,\n    password: process.env.PGPASSWORD,\n    database: 'prisma',\n  },\n  jwtOptions: {\n    privateKey: process.env.JWT_PRIVATE_KEY,\n    publicKey: process.env.JWT_PUBLIC_KEY,\n    signOptions: {\n      algorithm: 'RS256',\n      expiresIn: 3600, // 1 hour (in seconds)\n    },\n  },\n  rememberMeExpiresIn: 2592000, // 30 days (in seconds)\n  cookieDomain: 'zensoftware.ca',\n  smtp: {\n    server: process.env.SMTP_SERVER,\n    login: process.env.SMTP_LOGIN,\n    password: process.env.SMTP_PASSWORD,\n    fromEmail: process.env.SMTP_FROM_EMAIL,\n    fromName: 'Zen',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  expressPort: 7080,\n  graphql: {\n    playground: true,\n  },\n  postgres: {\n    host: 'localhost',\n    port: 5445,\n    user: 'ZenAdmin',\n    password: 'temp',\n    database: 'zen',\n  },\n  jwtOptions: {\n    secret: 'dev secret',\n    signOptions: {\n      algorithm: 'HS256',\n      expiresIn: 3600, // 1 hour (in seconds)\n    },\n  },\n  rememberMeExpiresIn: 2592000, // 30 days (in seconds)\n  cookieDomain: undefined,\n  smtp: {\n    server: 'localhost/nowhere', //process.env.SMTP_SERVER,\n    login: process.env.SMTP_LOGIN,\n    password: process.env.SMTP_PASSWORD,\n    fromEmail: process.env.SMTP_FROM_EMAIL,\n    fromName: 'Zen',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/write-schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            execWriteFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : promisify(fs.writeFile)\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/auth/gql/gql-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GqlUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, context: ExecutionContext) => {\n  const user = GqlExecutionContext.create(context).getContext().req.user;\n  if (!user) {\n    throw new UnauthorizedException('No user found for request');\n  }\n  return user as RequestUser;\n})\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/auth/http-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HttpUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, context: ExecutionContext) => {\n  const req = context.switchToHttp().getRequest();\n  if (!req.user) {\n    throw new UnauthorizedException('No user found for request');\n  }\n  return req.user as RequestUser;\n})\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/auth/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: Array) => SetMetadata('roles', roles)\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/User.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
