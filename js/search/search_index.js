var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.718,1,1.689]],["body/modules/AppModule.html",[0,1.196,1,3.358,2,1.201,3,1.524,4,1.968,5,1.968,6,1.352,7,1.726,8,1.726,9,2.677,10,2.677,11,2.768,12,0.046,13,2.768,14,2.768,15,2.768,16,2.542,17,1.726,18,1.968,19,0.401,20,0.476,21,0.401,22,3.293,23,3.83,24,2.816,25,2.542,26,0.642,27,0.946,28,2.271,29,0.946,30,2.271,31,0.946,32,0.476,33,0.081,34,0.027,35,0.034,36,0.027]],["title/classes/CommentResolver.html",[33,0.07,37,1.689]],["body/classes/CommentResolver.html",[12,0.047,19,0.683,20,0.236,21,0.198,26,0.437,29,0.469,31,0.469,32,0.458,33,0.04,34,0.013,35,0.021,36,0.013,37,1.533,38,0.755,39,1.125,40,0.318,41,1.053,42,2.529,43,2.566,44,2.566,45,2.566,46,2.566,47,2.566,48,2.566,49,2.566,50,2.566,51,2.566,52,1.631,53,2.63,54,1.838,55,2.425,56,3.012,57,1.499,58,1.631,59,1.899,60,1.899,61,1.687,62,3.145,63,1.687,64,1.631,65,1.631,66,1.631,67,1.631,68,1.631,69,2.357,70,1.631,71,1.631,72,1.631,73,1.631,74,1.631,75,1.631,76,1.631,77,1.631,78,1.631,79,1.631,80,1.631,81,0.975,82,0.67,83,1.345,84,0.975,85,0.755,86,0.755,87,0.67,88,1.631,89,1.188,90,1.769,91,0.855,92,1.895,93,0.708,94,1.631,95,2.566,96,1.631,97,0.975,98,0.755,99,1.631,100,0.755,101,1.631,102,1.631,103,1.899,104,1.631,105,2.425,106,1.631,107,1.631,108,1.631,109,1.631,110,1.631,111,1.631,112,1.631,113,1.631,114,1.631,115,1.631,116,1.631,117,1.631,118,1.631,119,1.631,120,1.631,121,1.631]],["title/modules/ConfigModule.html",[0,0.718,11,1.481]],["body/modules/ConfigModule.html",[0,1.254,2,1.329,3,1.687,4,2.178,5,2.178,6,1.496,7,2.378,8,2.589,11,2.787,12,0.046,16,2.711,17,1.91,18,2.178,19,0.443,20,0.527,21,0.443,26,0.601,27,1.047,32,0.527,33,0.09,34,0.029,35,0.037,36,0.029,122,2.963,123,2.963,124,2.281,125,3.645,126,2.711,127,2.711,128,2.963,129,2.963,130,2.963,131,3.645]],["title/injectables/ConfigService.html",[124,1.16,132,1.16]],["body/injectables/ConfigService.html",[12,0.046,19,0.402,20,0.477,21,0.402,26,0.518,27,0.948,29,1.224,32,0.477,33,0.082,34,0.027,35,0.034,36,0.027,40,0.644,57,1.742,93,1.217,98,1.528,100,1.973,124,1.749,132,1.749,133,1.973,134,2.684,135,3.464,136,2.909,137,2.939,138,2.939,139,2.939,140,2.939,141,2.939,142,2.546,143,2.939,144,5.377,145,3.302,146,3.464,147,3.302,148,2.684,149,3.302,150,2.684,151,3.302,152,2.684,153,3.302,154,3.302,155,3.302,156,3.302]],["title/interfaces/Context.html",[54,0.915,157,1.481]],["body/interfaces/Context.html",[12,0.046,19,0.443,20,0.527,21,0.443,26,0.443,31,1.579,32,0.656,34,0.029,35,0.037,36,0.029,40,0.711,54,1.6,61,1.977,89,1.687,93,1.103,103,1.496,137,3.129,157,1.91,158,2.963,159,2.178,160,4.202,161,5.169,162,1.939,163,1.687,164,2.963,165,2.514]],["title/classes/EnvironmentBase.html",[33,0.07,136,1.481]],["body/classes/EnvironmentBase.html",[12,0.046,19,0.399,20,0.475,21,0.399,26,0.517,29,1.351,32,0.475,33,0.081,34,0.026,35,0.034,36,0.026,38,1.52,40,0.641,57,1.739,93,1.215,98,2.178,100,2.303,136,2.225,137,2.928,138,3.245,139,3.245,140,3.245,141,3.245,142,2.812,143,3.245,146,4.044,148,2.669,150,3.825,152,3.825,166,2.669,167,3.283,168,3.283,169,3.283,170,3.283,171,3.283,172,3.283,173,3.283,174,2.264,175,3.283,176,3.283,177,2.264]],["title/injectables/GqlConfigService.html",[132,1.16,178,1.689]],["body/injectables/GqlConfigService.html",[12,0.047,19,0.361,20,0.428,21,0.361,26,0.606,27,0.851,28,3.086,31,1.285,32,0.428,33,0.073,34,0.024,35,0.032,36,0.024,40,0.578,41,1.629,54,0.96,57,1.286,59,1.217,60,1.217,61,1.081,63,1.081,82,1.217,87,1.217,93,0.662,103,1.629,124,1.962,132,1.629,133,1.771,160,2.409,162,1.632,163,1.837,177,2.044,178,2.372,179,3.638,180,2.409,181,4.78,182,2.409,183,2.964,184,2.964,185,2.964,186,4.475,187,3.969,188,2.737,189,2.409,190,2.409,191,2.409,192,2.409,193,2.964,194,3.638,195,2.964,196,3.969,197,4.475,198,2.964,199,2.964,200,2.964,201,2.409,202,2.964,203,2.964,204,4.475,205,2.964,206,2.964,207,2.964,208,2.964,209,2.964,210,2.964,211,2.964,212,2.964,213,2.409]],["title/classes/GroupResolver.html",[33,0.07,214,1.689]],["body/classes/GroupResolver.html",[12,0.047,19,0.683,20,0.236,21,0.198,26,0.437,29,0.469,31,0.469,32,0.458,33,0.04,34,0.013,35,0.021,36,0.013,38,0.755,40,0.318,41,1.053,42,2.529,53,2.63,54,1.838,55,2.425,56,3.012,57,1.499,59,1.899,60,1.899,61,1.687,62,3.145,63,1.687,69,2.357,81,0.975,82,0.67,83,1.345,84,0.975,85,0.755,86,0.755,87,0.67,89,1.188,91,0.855,92,1.895,93,0.708,97,0.975,98,0.755,100,0.755,103,1.899,105,2.425,214,1.533,215,1.125,216,2.566,217,2.566,218,2.566,219,2.566,220,2.566,221,2.566,222,2.566,223,2.566,224,2.566,225,1.631,226,1.631,227,1.631,228,1.631,229,1.631,230,1.631,231,1.631,232,1.631,233,1.631,234,1.631,235,1.631,236,1.631,237,1.631,238,1.631,239,1.631,240,1.631,241,1.631,242,1.631,243,1.631,244,1.769,245,1.631,246,2.566,247,1.631,248,1.631,249,1.631,250,1.631,251,1.631,252,1.631,253,1.631,254,1.631,255,1.631,256,1.631,257,1.631,258,1.631,259,1.631,260,1.631,261,1.631,262,1.631,263,1.631,264,1.631,265,1.631,266,1.631,267,1.631]],["title/modules/JwtModule.html",[0,0.718,13,1.481]],["body/modules/JwtModule.html",[0,1.216,2,1.453,8,2.088,12,0.046,13,2.692,19,0.485,20,0.576,21,0.485,25,2.381,26,0.625,27,1.144,32,0.576,33,0.098,34,0.032,35,0.039,36,0.032,126,2.863,127,2.381,128,3.239,174,2.748,268,3.984,269,4.79,270,3.984]],["title/classes/PostResolver.html",[33,0.07,271,1.689]],["body/classes/PostResolver.html",[12,0.047,19,0.683,20,0.236,21,0.198,26,0.437,29,0.469,31,0.469,32,0.458,33,0.04,34,0.013,35,0.021,36,0.013,38,0.755,40,0.318,41,1.053,42,2.529,53,2.63,54,1.838,55,2.425,56,3.012,57,1.499,59,1.899,60,1.899,61,1.687,62,3.145,63,1.687,69,2.357,81,0.975,82,0.67,83,1.345,84,0.975,85,0.755,86,0.755,87,0.67,89,1.188,91,0.855,92,1.895,93,0.708,97,0.975,98,0.755,100,0.755,103,1.899,105,2.425,271,1.533,272,1.125,273,2.566,274,2.566,275,2.566,276,2.566,277,2.566,278,2.566,279,2.566,280,2.566,281,2.566,282,1.631,283,1.631,284,1.631,285,1.631,286,1.631,287,1.631,288,1.631,289,1.631,290,1.631,291,1.631,292,1.631,293,1.631,294,1.631,295,1.631,296,1.631,297,1.631,298,1.631,299,1.631,300,1.631,301,1.769,302,1.631,303,2.086,304,1.631,305,1.631,306,1.631,307,1.631,308,1.631,309,1.631,310,1.631,311,1.631,312,1.631,313,1.631,314,1.631,315,1.631,316,1.631,317,1.631,318,1.631,319,1.631,320,1.631,321,1.631,322,1.631,323,1.631,324,1.631]],["title/modules/PrismaModule.html",[0,0.718,14,1.481]],["body/modules/PrismaModule.html",[0,1.256,2,1.333,3,1.693,4,2.185,5,2.185,6,1.501,7,2.592,8,2.592,12,0.045,14,2.883,16,2.717,17,1.916,18,2.185,19,0.445,20,0.529,21,0.445,26,0.553,27,1.05,32,0.529,33,0.09,34,0.029,35,0.037,36,0.029,126,2.717,162,2.079,325,2.973,326,2.973,327,2.973,328,3.657,329,3.657]],["title/injectables/PrismaService.html",[132,1.16,162,1.031]],["body/injectables/PrismaService.html",[12,0.047,19,0.37,20,0.44,21,0.37,26,0.552,27,0.874,32,0.44,33,0.075,34,0.024,35,0.033,36,0.024,40,0.594,41,1.658,42,2.508,53,1.408,57,1.564,59,1.658,60,1.658,61,1.653,63,1.653,89,1.408,93,0.902,132,1.658,133,1.818,135,3.283,162,1.472,163,1.408,182,2.473,189,2.473,330,2.473,331,4.533,332,4.038,333,5.167,334,5.167,335,3.042,336,4.829,337,3.042,338,4.038,339,3.042,340,4.038,341,4.829,342,3.042,343,3.042,344,3.042,345,4.038,346,3.283,347,2.473,348,2.473,349,3.042,350,3.042,351,3.042,352,3.042,353,4.533,354,3.042,355,3.042,356,3.042]],["title/controllers/ToolsController.html",[24,1.689,357,1.689]],["body/controllers/ToolsController.html",[12,0.047,19,0.433,20,0.514,21,0.433,23,2.89,24,2.669,26,0.594,27,1.021,28,3.081,32,0.514,33,0.088,34,0.029,35,0.036,36,0.029,40,0.694,41,1.834,42,2.261,55,1.863,57,1.152,63,1.296,69,1.863,103,1.459,124,1.834,190,2.89,191,2.89,303,2.89,357,2.125,358,2.89,359,3.556,360,2.452,361,5.279,362,4.467,363,3.556,364,3.556,365,3.556,366,3.556,367,3.556,368,2.89,369,3.556,370,3.556,371,3.556,372,3.556]],["title/classes/UserResolver.html",[33,0.07,373,1.689]],["body/classes/UserResolver.html",[12,0.047,19,0.683,20,0.236,21,0.198,26,0.437,29,0.469,31,0.469,32,0.458,33,0.04,34,0.013,35,0.021,36,0.013,38,0.755,40,0.318,41,1.053,42,2.529,53,2.63,54,1.838,55,2.425,56,3.012,57,1.499,59,1.899,60,1.899,61,1.687,62,3.145,63,1.687,69,2.357,81,0.975,82,0.67,83,1.345,84,0.975,85,0.755,86,0.755,87,0.67,89,1.188,91,0.855,92,1.895,93,0.708,97,0.975,98,0.755,100,0.755,103,1.899,105,2.425,373,1.533,374,1.125,375,2.566,376,2.566,377,2.566,378,2.566,379,2.566,380,2.566,381,2.566,382,2.566,383,2.566,384,1.631,385,1.631,386,1.631,387,1.631,388,1.631,389,1.631,390,1.631,391,1.631,392,1.631,393,1.631,394,1.631,395,1.631,396,1.631,397,1.631,398,1.631,399,1.631,400,1.631,401,1.631,402,1.631,403,1.769,404,1.631,405,1.769,406,1.631,407,1.631,408,1.631,409,1.631,410,1.631,411,1.631,412,1.631,413,1.631,414,1.631,415,1.631,416,1.631,417,1.631,418,1.631,419,1.631,420,1.631,421,1.631,422,1.631,423,1.631,424,1.631,425,1.631,426,1.631]],["title/modules/ZenGraphQLModule.html",[0,0.718,15,1.481]],["body/modules/ZenGraphQLModule.html",[0,1.189,2,1.4,7,2.012,12,0.047,15,2.455,19,0.467,20,0.555,21,0.467,25,2.294,26,0.64,27,1.103,32,0.555,33,0.095,34,0.031,35,0.038,36,0.031,82,1.576,83,2.012,87,1.576,126,2.799,129,3.12,178,2.799,427,3.839,428,3.839,429,3.12,430,3.23,431,3.839,432,3.839]],["title/coverage.html",[433,3.125]],["body/coverage.html",[6,1.098,12,0.046,21,0.326,24,1.599,31,0.769,33,0.119,34,0.022,35,0.03,36,0.022,37,1.599,39,2.553,54,0.867,85,1.239,86,1.239,90,1.846,93,0.598,124,1.098,127,2.213,132,1.743,134,2.175,136,1.402,157,1.402,159,2.537,162,0.976,163,1.239,164,3.724,165,1.846,166,2.175,178,1.599,179,2.175,180,2.175,188,1.846,214,1.599,215,2.553,244,1.846,271,1.599,272,2.553,301,1.846,330,2.175,357,1.599,358,2.175,373,1.599,374,2.553,403,1.846,430,1.846,433,2.175,434,2.175,435,2.676,436,2.676,437,5.741,438,3.702,439,2.676,440,2.676,441,5.596,442,5.481,443,2.676,444,2.175,445,2.175,446,4.581,447,3.909,448,2.175,449,2.175,450,2.175,451,2.553,452,2.553,453,2.175,454,2.175,455,2.676,456,2.175,457,2.175,458,2.175,459,2.676,460,2.676]],["title/dependencies.html",[3,1.572,461,2.367]],["body/dependencies.html",[3,1.564,12,0.047,27,0.971,29,1.37,30,2.33,33,0.107,34,0.027,35,0.035,36,0.027,82,1.387,174,2.33,347,2.747,348,2.747,360,2.33,368,2.747,462,4.77,463,3.379,464,3.379,465,4.325,466,3.379,467,4.325,468,3.379,469,3.379,470,2.747,471,2.747,472,4.325,473,3.379,474,3.379,475,3.379,476,3.379,477,3.379,478,3.379,479,3.379,480,3.379,481,3.379,482,3.379,483,3.379,484,3.379,485,4.325,486,3.379,487,3.379,488,3.379,489,3.379,490,3.379,491,3.379,492,3.379,493,3.379,494,3.379,495,4.325,496,3.379,497,3.379,498,3.379,499,3.379,500,3.379,501,3.379,502,3.379]],["title/miscellaneous/functions.html",[503,1.414,504,2.76]],["body/miscellaneous/functions.html",[6,2.072,12,0.043,19,0.465,34,0.031,35,0.038,36,0.031,40,0.747,53,2.164,54,1.239,59,1.919,60,1.919,61,1.704,63,1.395,85,2.164,86,2.164,105,2.005,159,2.286,165,3.481,444,3.11,445,3.8,451,2.639,452,3.224,453,3.8,458,3.11,503,2.286,504,3.11,505,3.826,506,3.11,507,3.826,508,3.11,509,3.826,510,4.674,511,3.826]],["title/index.html",[40,0.462,512,2.367,513,2.367]],["body/index.html",[6,1.189,12,0.04,17,1,25,1.14,26,0.352,29,1.32,30,1.316,31,1.207,34,0.015,35,0.023,36,0.015,87,0.783,93,0.426,130,1.551,142,1.14,157,1,158,1.551,163,0.883,346,1.551,360,1.316,405,1.998,429,1.551,434,1.551,470,2.354,471,2.846,514,1.551,515,3.908,516,1.908,517,1.908,518,3.908,519,1.908,520,1.908,521,4.735,522,5.095,523,1.908,524,1.908,525,1.908,526,1.908,527,1.908,528,1.908,529,3.908,530,1.908,531,1.908,532,2.896,533,2.896,534,1.908,535,1.908,536,1.908,537,1.908,538,1.908,539,1.908,540,1.908,541,2.896,542,1.908,543,1.908,544,1.908,545,1.908,546,1.908,547,2.896,548,4.202,549,1.908,550,1.908,551,1.908,552,4.202,553,1.908,554,1.908,555,2.896,556,1.908,557,1.908,558,1.908,559,1.908,560,2.354,561,1.908,562,3.501,563,3.501,564,1.908,565,1.908,566,1.908,567,1.908,568,1.908,569,1.908,570,3.908,571,1.908,572,1.908,573,1.908,574,2.896,575,4.202,576,2.896,577,1.908,578,3.501,579,1.908,580,2.896,581,1.908,582,1.908,583,1.908,584,1.908,585,1.908,586,1.908,587,2.896,588,1.908,589,1.908,590,1.908,591,1.908,592,1.908,593,2.896,594,1.908,595,1.908,596,1.908,597,1.908,598,1.908,599,1.908,600,1.908,601,1.908,602,1.908,603,1.908,604,1.908,605,1.908,606,3.501,607,1.908,608,1.908,609,1.908,610,2.896,611,1.908,612,3.908,613,1.908,614,2.896,615,1.908,616,2.896,617,2.896,618,1.908,619,1.908,620,1.908,621,1.908,622,1.908,623,1.908,624,1.908,625,1.908,626,2.896,627,2.896,628,2.896,629,1.908,630,1.908,631,1.908,632,1.908,633,1.551,634,1.908,635,1.908,636,1.908,637,2.896,638,1.908,639,1.908,640,1.908,641,1.908,642,1.908,643,1.908,644,1.908,645,1.908,646,2.896,647,2.896,648,1.908,649,1.908,650,1.908,651,1.908,652,1.908,653,1.908,654,2.896,655,1.908,656,1.908,657,1.908,658,1.908,659,2.896,660,1.908,661,2.896,662,1.908,663,2.896,664,1.908,665,1.908,666,1.908,667,1.908,668,2.896,669,2.896,670,1.908,671,1.908,672,1.908,673,1.908,674,1.908,675,1.908,676,1.908,677,1.908,678,1.908,679,1.551,680,3.501,681,1.908,682,2.896,683,2.896,684,1.908,685,2.896,686,1.908,687,1.908,688,1.908,689,1.908,690,1.908,691,1.908,692,1.908,693,1.908,694,1.908,695,1.908,696,1.908,697,1.908,698,1.908,699,1.908,700,1.908,701,1.908,702,1.908,703,1.908,704,2.896,705,2.896,706,1.908,707,1.908,708,1.908,709,1.908,710,1.908,711,1.908,712,1.908,713,1.908,714,1.908,715,1.908,716,1.908,717,1.908,718,1.908,719,1.908,720,1.908,721,1.908,722,1.908,723,1.908,724,1.908,725,1.908,726,1.908,727,1.908,728,1.908,729,1.908,730,1.908]],["title/modules.html",[2,1.402]],["body/modules.html",[1,2.466,2,1.504,11,2.162,12,0.039,13,2.162,14,2.162,15,2.162,34,0.033,35,0.039,36,0.033,560,3.976,731,5.214,732,5.214,733,5.214,734,5.504,735,4.892]],["title/overview.html",[736,3.125]],["body/overview.html",[0,0.892,1,3.351,2,1.281,3,1.626,4,2.099,5,2.099,6,1.442,7,1.841,8,1.841,9,2.855,10,2.855,11,2.673,12,0.045,13,2.545,14,2.815,15,2.545,16,2.649,17,1.841,18,2.099,34,0.028,35,0.036,36,0.028,38,1.626,122,2.855,123,2.855,124,2.094,133,2.099,157,1.841,162,1.988,213,3.603,325,2.855,326,2.855,327,2.855,357,2.099,736,2.855,737,3.603,738,3.513]],["title/miscellaneous/variables.html",[503,1.414,739,2.76]],["body/miscellaneous/variables.html",[12,0.047,29,0.959,31,1.126,34,0.019,35,0.027,36,0.019,37,1.382,39,1.595,40,0.451,90,2.703,91,2.624,93,1.092,127,2.565,136,1.75,138,2.303,139,2.303,140,2.303,141,2.703,142,1.996,143,2.303,159,1.382,162,0.843,163,1.07,177,2.303,188,2.703,192,2.714,194,2.714,201,1.88,214,1.382,215,1.595,244,2.703,271,1.382,272,1.595,301,2.703,373,1.382,374,1.595,403,2.703,405,2.303,430,2.303,447,1.88,448,2.714,449,3.186,450,2.714,451,1.595,452,2.303,454,2.714,456,1.88,457,1.88,503,1.382,506,1.88,508,1.88,514,1.88,633,2.714,679,1.88,737,2.714,739,1.88,740,4.552,741,2.313,742,2.313,743,2.313,744,2.313,745,2.313,746,2.313,747,5.349,748,5.349,749,2.313,750,3.339,751,2.313,752,2.313,753,2.313,754,2.313,755,3.339,756,3.339,757,2.313,758,3.339,759,2.313,760,2.313,761,2.313,762,3.339,763,2.313,764,2.313,765,2.313,766,2.313,767,3.339,768,3.339,769,2.313,770,3.339,771,3.339,772,3.339,773,4.292,774,3.339,775,3.339,776,3.339,777,2.313,778,2.313,779,2.313,780,2.313,781,2.313,782,2.313,783,3.339,784,2.313,785,2.313]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":737,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1.2.6",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["1.7.8",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":653,"title":{},"body":{"index.html":{}}}],["15.3.0",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["2.16.1",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":210,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["20_000_000",{"_index":209,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["2592000",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":738,"title":{},"body":{"overview.html":{}}}],["3.23.3",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3600",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["4.17.14",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":213,"title":{},"body":{"injectables/GqlConfigService.html":{},"overview.html":{}}}],["5.0.0",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5445",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.2.0",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["7.4.4",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["7.6.0",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["7080",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":574,"title":{},"body":{"index.html":{}}}],["add",{"_index":543,"title":{},"body":{"index.html":{}}}],["adds",{"_index":688,"title":{},"body":{"index.html":{}}}],["algorithm",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["all_type_defs",{"_index":188,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alleviate",{"_index":594,"title":{},"body":{"index.html":{}}}],["allow",{"_index":647,"title":{},"body":{"index.html":{}}}],["alpine",{"_index":707,"title":{},"body":{"index.html":{}}}],["ambitions",{"_index":529,"title":{},"body":{"index.html":{}}}],["angular",{"_index":522,"title":{},"body":{"index.html":{}}}],["api",{"_index":575,"title":{},"body":{"index.html":{}}}],["apollo",{"_index":470,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["apolloclient",{"_index":580,"title":{},"body":{"index.html":{}}}],["apollolink",{"_index":583,"title":{},"body":{"index.html":{}}}],["app",{"_index":717,"title":{},"body":{"index.html":{}}}],["application",{"_index":625,"title":{},"body":{"index.html":{}}}],["applications",{"_index":678,"title":{},"body":{"index.html":{}}}],["applied",{"_index":714,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":554,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":710,"title":{},"body":{"index.html":{}}}],["apps/.../comment.ts",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../context.ts",{"_index":506,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../group.ts",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../index.ts",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../post.ts",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../prisma",{"_index":507,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../user.ts",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../write",{"_index":508,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app/config/config.module.ts",{"_index":125,"title":{},"body":{"modules/ConfigModule.html":{}}}],["apps/api/src/app/config/config.service.ts",{"_index":134,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["apps/api/src/app/controllers/tools.controller.ts",{"_index":358,"title":{},"body":{"controllers/ToolsController.html":{},"coverage.html":{}}}],["apps/api/src/app/controllers/tools.controller.ts:12",{"_index":363,"title":{},"body":{"controllers/ToolsController.html":{}}}],["apps/api/src/app/graphql/context.ts",{"_index":159,"title":{},"body":{"interfaces/Context.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/gql",{"_index":179,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{}}}],["apps/api/src/app/graphql/prisma",{"_index":444,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts",{"_index":39,"title":{},"body":{"classes/CommentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:23",{"_index":74,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:28",{"_index":70,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:33",{"_index":72,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:38",{"_index":58,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:43",{"_index":78,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:48",{"_index":67,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:53",{"_index":80,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:58",{"_index":65,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/comment.ts:63",{"_index":76,"title":{},"body":{"classes/CommentResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts",{"_index":215,"title":{},"body":{"classes/GroupResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:23",{"_index":236,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:28",{"_index":232,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:33",{"_index":234,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:38",{"_index":226,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:43",{"_index":240,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:48",{"_index":230,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:53",{"_index":242,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:58",{"_index":228,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/group.ts:63",{"_index":238,"title":{},"body":{"classes/GroupResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/index.ts",{"_index":447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts",{"_index":272,"title":{},"body":{"classes/PostResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:23",{"_index":293,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:28",{"_index":289,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:33",{"_index":291,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:38",{"_index":283,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:43",{"_index":297,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:48",{"_index":287,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:53",{"_index":299,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:58",{"_index":285,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/post.ts:63",{"_index":295,"title":{},"body":{"classes/PostResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts",{"_index":374,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:23",{"_index":395,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:28",{"_index":391,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:33",{"_index":393,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:38",{"_index":385,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:43",{"_index":399,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:48",{"_index":389,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:53",{"_index":401,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:58",{"_index":387,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/resolvers/user.ts:63",{"_index":397,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/api/src/app/graphql/write",{"_index":451,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/graphql/zen",{"_index":427,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["apps/api/src/app/jwt/jwt.module.ts",{"_index":268,"title":{},"body":{"modules/JwtModule.html":{}}}],["apps/api/src/app/prisma/prisma.module.ts",{"_index":328,"title":{},"body":{"modules/PrismaModule.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts",{"_index":330,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:11",{"_index":342,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:16",{"_index":344,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:20",{"_index":343,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/app/prisma/prisma.service.ts:6",{"_index":337,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/api/src/environments/environment.base.ts",{"_index":166,"title":{},"body":{"classes/EnvironmentBase.html":{},"coverage.html":{}}}],["apps/api/src/environments/environment.base.ts:10",{"_index":171,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:11",{"_index":170,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:12",{"_index":173,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:13",{"_index":167,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:5",{"_index":172,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:6",{"_index":168,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.base.ts:7",{"_index":169,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":456,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":457,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":458,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["args",{"_index":53,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["args.ts",{"_index":445,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["async",{"_index":42,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{}}}],["authentication",{"_index":612,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":367,"title":{},"body":{"controllers/ToolsController.html":{}}}],["authorization",{"_index":642,"title":{},"body":{"index.html":{}}}],["auto",{"_index":564,"title":{},"body":{"index.html":{}}}],["available",{"_index":560,"title":{},"body":{"index.html":{},"modules.html":{}}}],["await",{"_index":353,"title":{},"body":{"injectables/PrismaService.html":{}}}],["base",{"_index":709,"title":{},"body":{"index.html":{}}}],["based",{"_index":645,"title":{},"body":{"index.html":{}}}],["batching",{"_index":585,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["becomes",{"_index":559,"title":{},"body":{"index.html":{}}}],["being",{"_index":713,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":98,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{}}}],["browse",{"_index":734,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":731,"title":{},"body":{"modules.html":{}}}],["built",{"_index":520,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":547,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":544,"title":{},"body":{"index.html":{}}}],["case",{"_index":532,"title":{},"body":{"index.html":{}}}],["change",{"_index":634,"title":{},"body":{"index.html":{}}}],["choice",{"_index":667,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":664,"title":{},"body":{"index.html":{}}}],["class",{"_index":33,"title":{"classes/CommentResolver.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":38,"title":{},"body":{"classes/CommentResolver.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["clear",{"_index":727,"title":{},"body":{"index.html":{}}}],["client",{"_index":531,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":122,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":123,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":325,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":326,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":327,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["code",{"_index":570,"title":{},"body":{"index.html":{}}}],["comment",{"_index":95,"title":{},"body":{"classes/CommentResolver.html":{}}}],["commentresolver",{"_index":37,"title":{"classes/CommentResolver.html":{}},"body":{"classes/CommentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commenttypedef",{"_index":90,"title":{},"body":{"classes/CommentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["completion",{"_index":565,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":729,"title":{},"body":{"index.html":{}}}],["component",{"_index":674,"title":{},"body":{"index.html":{}}}],["components",{"_index":661,"title":{},"body":{"index.html":{}}}],["config",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"injectables/GqlConfigService.html":{},"controllers/ToolsController.html":{}}}],["config.service",{"_index":129,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ZenGraphQLModule.html":{}}}],["config.service.ts",{"_index":180,"title":{},"body":{"injectables/GqlConfigService.html":{},"coverage.html":{}}}],["config.service.ts:12",{"_index":185,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["config.service.ts:9",{"_index":184,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["configmodule",{"_index":11,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":124,"title":{"injectables/ConfigService.html":{}},"body":{"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"controllers/ToolsController.html":{},"coverage.html":{},"overview.html":{}}}],["configuration",{"_index":579,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":712,"title":{},"body":{"index.html":{}}}],["congestion",{"_index":596,"title":{},"body":{"index.html":{}}}],["console",{"_index":683,"title":{},"body":{"index.html":{}}}],["const",{"_index":89,"title":{},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{}}}],["constructor",{"_index":182,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}}}],["constructor(@optional",{"_index":350,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(config",{"_index":183,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["constructor(options",{"_index":335,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(private",{"_index":190,"title":{},"body":{"injectables/GqlConfigService.html":{},"controllers/ToolsController.html":{}}}],["container",{"_index":659,"title":{},"body":{"index.html":{}}}],["containerized",{"_index":703,"title":{},"body":{"index.html":{}}}],["content",{"_index":639,"title":{},"body":{"index.html":{}}}],["context",{"_index":54,"title":{"interfaces/Context.html":{}},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["contributions",{"_index":723,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":527,"title":{},"body":{"index.html":{}}}],["control",{"_index":646,"title":{},"body":{"index.html":{}}}],["controller",{"_index":357,"title":{"controllers/ToolsController.html":{}},"body":{"controllers/ToolsController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('tools",{"_index":369,"title":{},"body":{"controllers/ToolsController.html":{}}}],["controllers",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/ToolsController.html":{}}}],["conveniences",{"_index":691,"title":{},"body":{"index.html":{}}}],["convert",{"_index":553,"title":{},"body":{"index.html":{}}}],["cookie",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["cookiedomain",{"_index":138,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":550,"title":{},"body":{"index.html":{}}}],["cors",{"_index":200,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["coverage",{"_index":433,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcontext",{"_index":165,"title":{},"body":{"interfaces/Context.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["creategqloptions",{"_index":181,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["createonecomment",{"_index":43,"title":{},"body":{"classes/CommentResolver.html":{}}}],["createonecomment(@parent",{"_index":110,"title":{},"body":{"classes/CommentResolver.html":{}}}],["createonecomment(parent",{"_index":52,"title":{},"body":{"classes/CommentResolver.html":{}}}],["createonegroup",{"_index":216,"title":{},"body":{"classes/GroupResolver.html":{}}}],["createonegroup(@parent",{"_index":256,"title":{},"body":{"classes/GroupResolver.html":{}}}],["createonegroup(parent",{"_index":225,"title":{},"body":{"classes/GroupResolver.html":{}}}],["createonepost",{"_index":273,"title":{},"body":{"classes/PostResolver.html":{}}}],["createonepost(@parent",{"_index":313,"title":{},"body":{"classes/PostResolver.html":{}}}],["createonepost(parent",{"_index":282,"title":{},"body":{"classes/PostResolver.html":{}}}],["createoneuser",{"_index":375,"title":{},"body":{"classes/UserResolver.html":{}}}],["createoneuser(@parent",{"_index":415,"title":{},"body":{"classes/UserResolver.html":{}}}],["createoneuser(parent",{"_index":384,"title":{},"body":{"classes/UserResolver.html":{}}}],["creation",{"_index":616,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":202,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["css",{"_index":665,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":204,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["ctx.connection",{"_index":205,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["ctx.connection.context",{"_index":206,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["currently",{"_index":524,"title":{},"body":{"index.html":{}}}],["database",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["days",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debounce",{"_index":590,"title":{},"body":{"index.html":{}}}],["debug",{"_index":195,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["declarative",{"_index":648,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":55,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{}}}],["default",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":57,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{}}}],["delete",{"_index":364,"title":{},"body":{"controllers/ToolsController.html":{}}}],["deletemanycomment",{"_index":44,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deletemanycomment(@parent",{"_index":118,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deletemanycomment(parent",{"_index":64,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deletemanygroup",{"_index":217,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deletemanygroup(@parent",{"_index":264,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deletemanygroup(parent",{"_index":227,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deletemanypost",{"_index":274,"title":{},"body":{"classes/PostResolver.html":{}}}],["deletemanypost(@parent",{"_index":321,"title":{},"body":{"classes/PostResolver.html":{}}}],["deletemanypost(parent",{"_index":284,"title":{},"body":{"classes/PostResolver.html":{}}}],["deletemanyuser",{"_index":376,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletemanyuser(@parent",{"_index":423,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletemanyuser(parent",{"_index":386,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteonecomment",{"_index":45,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deleteonecomment(@parent",{"_index":114,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deleteonecomment(parent",{"_index":66,"title":{},"body":{"classes/CommentResolver.html":{}}}],["deleteonegroup",{"_index":218,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deleteonegroup(@parent",{"_index":260,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deleteonegroup(parent",{"_index":229,"title":{},"body":{"classes/GroupResolver.html":{}}}],["deleteonepost",{"_index":275,"title":{},"body":{"classes/PostResolver.html":{}}}],["deleteonepost(@parent",{"_index":317,"title":{},"body":{"classes/PostResolver.html":{}}}],["deleteonepost(parent",{"_index":286,"title":{},"body":{"classes/PostResolver.html":{}}}],["deleteoneuser",{"_index":377,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteoneuser(@parent",{"_index":419,"title":{},"body":{"classes/UserResolver.html":{}}}],["deleteoneuser(parent",{"_index":388,"title":{},"body":{"classes/UserResolver.html":{}}}],["deletion",{"_index":546,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":640,"title":{},"body":{"index.html":{}}}],["designed",{"_index":619,"title":{},"body":{"index.html":{}}}],["dev",{"_index":679,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["developer",{"_index":690,"title":{},"body":{"index.html":{}}}],["development",{"_index":526,"title":{},"body":{"index.html":{}}}],["directives",{"_index":637,"title":{},"body":{"index.html":{}}}],["directly",{"_index":555,"title":{},"body":{"index.html":{}}}],["docker",{"_index":704,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":434,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["ecosystem",{"_index":694,"title":{},"body":{"index.html":{}}}],["enable",{"_index":563,"title":{},"body":{"index.html":{}}}],["enable/disable",{"_index":581,"title":{},"body":{"index.html":{}}}],["enabling",{"_index":603,"title":{},"body":{"index.html":{}}}],["enforced",{"_index":718,"title":{},"body":{"index.html":{}}}],["environment",{"_index":127,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentbase",{"_index":136,"title":{"classes/EnvironmentBase.html":{}},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentbase:10",{"_index":153,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:11",{"_index":151,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:12",{"_index":155,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:13",{"_index":145,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:5",{"_index":154,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:6",{"_index":147,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environmentbase:7",{"_index":149,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environments/environment",{"_index":128,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{}}}],["environments/environment.base",{"_index":156,"title":{},"body":{"injectables/ConfigService.html":{}}}],["es",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["exclude",{"_index":673,"title":{},"body":{"index.html":{}}}],["execwritefile",{"_index":454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["express",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["expressport",{"_index":139,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["extend",{"_index":92,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["extends",{"_index":135,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PrismaService.html":{}}}],["extension",{"_index":568,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":684,"title":{},"body":{"index.html":{}}}],["false",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feature",{"_index":558,"title":{},"body":{"index.html":{}}}],["features",{"_index":548,"title":{},"body":{"index.html":{}}}],["file",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["files",{"_index":605,"title":{},"body":{"index.html":{}}}],["filter(x",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtering",{"_index":534,"title":{},"body":{"index.html":{}}}],["findmanycomment",{"_index":46,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycomment(@parent",{"_index":106,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycomment(parent",{"_index":68,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycommentcount",{"_index":47,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycommentcount(@parent",{"_index":108,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanycommentcount(parent",{"_index":71,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findmanygroup",{"_index":219,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroup(@parent",{"_index":252,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroup(parent",{"_index":231,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroupcount",{"_index":220,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroupcount(@parent",{"_index":254,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanygroupcount(parent",{"_index":233,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findmanypost",{"_index":276,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypost(@parent",{"_index":309,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypost(parent",{"_index":288,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypostcount",{"_index":277,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypostcount(@parent",{"_index":311,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanypostcount(parent",{"_index":290,"title":{},"body":{"classes/PostResolver.html":{}}}],["findmanyuser",{"_index":378,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyuser(@parent",{"_index":411,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyuser(parent",{"_index":390,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount",{"_index":379,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount(@parent",{"_index":413,"title":{},"body":{"classes/UserResolver.html":{}}}],["findmanyusercount(parent",{"_index":392,"title":{},"body":{"classes/UserResolver.html":{}}}],["findonecomment",{"_index":48,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findonecomment(@parent",{"_index":102,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findonecomment(parent",{"_index":73,"title":{},"body":{"classes/CommentResolver.html":{}}}],["findonegroup",{"_index":221,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findonegroup(@parent",{"_index":250,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findonegroup(parent",{"_index":235,"title":{},"body":{"classes/GroupResolver.html":{}}}],["findonepost",{"_index":278,"title":{},"body":{"classes/PostResolver.html":{}}}],["findonepost(@parent",{"_index":307,"title":{},"body":{"classes/PostResolver.html":{}}}],["findonepost(parent",{"_index":292,"title":{},"body":{"classes/PostResolver.html":{}}}],["findoneuser",{"_index":380,"title":{},"body":{"classes/UserResolver.html":{}}}],["findoneuser(@parent",{"_index":409,"title":{},"body":{"classes/UserResolver.html":{}}}],["findoneuser(parent",{"_index":394,"title":{},"body":{"classes/UserResolver.html":{}}}],["fine",{"_index":649,"title":{},"body":{"index.html":{}}}],["first",{"_index":628,"title":{},"body":{"index.html":{}}}],["fns",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":602,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":719,"title":{},"body":{"index.html":{}}}],["free",{"_index":542,"title":{},"body":{"index.html":{}}}],["full",{"_index":516,"title":{},"body":{"index.html":{}}}],["function",{"_index":164,"title":{},"body":{"interfaces/Context.html":{},"coverage.html":{}}}],["functions",{"_index":504,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":530,"title":{},"body":{"index.html":{}}}],["generate",{"_index":730,"title":{},"body":{"index.html":{}}}],["generation",{"_index":562,"title":{},"body":{"index.html":{}}}],["get('hello",{"_index":362,"title":{},"body":{"controllers/ToolsController.html":{}}}],["getting",{"_index":512,"title":{"index.html":{}},"body":{}}],["give",{"_index":598,"title":{},"body":{"index.html":{}}}],["global",{"_index":126,"title":{},"body":{"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{}}}],["gql",{"_index":83,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["gqlconfigservice",{"_index":178,"title":{"injectables/GqlConfigService.html":{}},"body":{"injectables/GqlConfigService.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{}}}],["gqlmoduleoptions",{"_index":186,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["gqloptionsfactory",{"_index":187,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["grained",{"_index":650,"title":{},"body":{"index.html":{}}}],["graph",{"_index":735,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["graphql.module.ts",{"_index":428,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["graphql_schema",{"_index":448,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":429,"title":{},"body":{"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["graphqlmodule.forrootasync",{"_index":431,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["graphqlupload",{"_index":607,"title":{},"body":{"index.html":{}}}],["greatly",{"_index":677,"title":{},"body":{"index.html":{}}}],["grid",{"_index":671,"title":{},"body":{"index.html":{}}}],["group",{"_index":246,"title":{},"body":{"classes/GroupResolver.html":{}}}],["groupresolver",{"_index":214,"title":{"classes/GroupResolver.html":{}},"body":{"classes/GroupResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grouptypedef",{"_index":244,"title":{},"body":{"classes/GroupResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["guaranteeing",{"_index":722,"title":{},"body":{"index.html":{}}}],["guards",{"_index":636,"title":{},"body":{"index.html":{}}}],["gui",{"_index":686,"title":{},"body":{"index.html":{}}}],["hello",{"_index":361,"title":{},"body":{"controllers/ToolsController.html":{}}}],["helmet",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["helps",{"_index":593,"title":{},"body":{"index.html":{}}}],["horizontal",{"_index":658,"title":{},"body":{"index.html":{}}}],["host",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hs256",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":599,"title":{},"body":{"index.html":{}}}],["httpbatchlink",{"_index":584,"title":{},"body":{"index.html":{}}}],["ide",{"_index":697,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":705,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":549,"title":{},"body":{"index.html":{}}}],["implements",{"_index":189,"title":{},"body":{"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/JwtModule.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["inherited",{"_index":144,"title":{},"body":{"injectables/ConfigService.html":{}}}],["injectable",{"_index":132,"title":{"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["injectables",{"_index":133,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{},"overview.html":{}}}],["insensitive",{"_index":533,"title":{},"body":{"index.html":{}}}],["installsubscriptionhandlers",{"_index":193,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["int",{"_index":97,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["integration",{"_index":615,"title":{},"body":{"index.html":{}}}],["interface",{"_index":157,"title":{"interfaces/Context.html":{}},"body":{"interfaces/Context.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaces",{"_index":158,"title":{},"body":{"interfaces/Context.html":{},"index.html":{}}}],["interval",{"_index":591,"title":{},"body":{"index.html":{}}}],["introspection",{"_index":198,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["javascript",{"_index":655,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["jwtmodule",{"_index":13,"title":{"modules/JwtModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JwtModule.html":{},"modules.html":{},"overview.html":{}}}],["jwtmoduleoptions",{"_index":150,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["jwtoptions",{"_index":140,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["keeping",{"_index":657,"title":{},"body":{"index.html":{}}}],["language",{"_index":695,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["legibility",{"_index":728,"title":{},"body":{"index.html":{}}}],["literal",{"_index":148,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["localhost",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lodash",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":617,"title":{},"body":{"index.html":{}}}],["lot",{"_index":689,"title":{},"body":{"index.html":{}}}],["makeexecutableschema",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management",{"_index":681,"title":{},"body":{"index.html":{}}}],["matching",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":668,"title":{},"body":{"index.html":{}}}],["maxfiles",{"_index":212,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["maxfilesize",{"_index":208,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["mb",{"_index":211,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["merge",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["mergetypes([prisma_type_defs",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":372,"title":{},"body":{"controllers/ToolsController.html":{}}}],["metadata",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":41,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{}}}],["miscellaneous",{"_index":503,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":676,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":627,"title":{},"body":{"index.html":{}}}],["modern",{"_index":515,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["monorepos",{"_index":687,"title":{},"body":{"index.html":{}}}],["multi",{"_index":600,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":56,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["mutations",{"_index":652,"title":{},"body":{"index.html":{}}}],["n+1",{"_index":539,"title":{},"body":{"index.html":{}}}],["name",{"_index":60,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":521,"title":{},"body":{"index.html":{}}}],["nest_resolvers",{"_index":430,"title":{},"body":{"modules/ZenGraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nest_type_defs",{"_index":449,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/GqlConfigService.html":{},"modules/JwtModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":82,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":174,"title":{},"body":{"classes/EnvironmentBase.html":{},"modules/JwtModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":368,"title":{},"body":{"controllers/ToolsController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["nestjwtmodule",{"_index":269,"title":{},"body":{"modules/JwtModule.html":{}}}],["nestjwtmodule.register(environment.jwtoptions",{"_index":270,"title":{},"body":{"modules/JwtModule.html":{}}}],["network",{"_index":595,"title":{},"body":{"index.html":{}}}],["new",{"_index":163,"title":{},"body":{"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":715,"title":{},"body":{"index.html":{}}}],["node:14",{"_index":706,"title":{},"body":{"index.html":{}}}],["npm",{"_index":699,"title":{},"body":{"index.html":{}}}],["null",{"_index":91,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":146,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["nx",{"_index":680,"title":{},"body":{"index.html":{}}}],["occur",{"_index":588,"title":{},"body":{"index.html":{}}}],["official",{"_index":557,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":332,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ondelete(args",{"_index":340,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ondeleteargs",{"_index":341,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduledestroy",{"_index":333,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":334,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":61,"title":{},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":338,"title":{},"body":{"injectables/PrismaService.html":{}}}],["origin",{"_index":203,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["out",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["outpath",{"_index":511,"title":{},"body":{"miscellaneous/functions.html":{}}}],["over",{"_index":610,"title":{},"body":{"index.html":{}}}],["overview",{"_index":736,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":461,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":624,"title":{},"body":{"index.html":{}}}],["paljs/plugins",{"_index":347,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["parameters",{"_index":59,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":62,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["parser",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":601,"title":{},"body":{"index.html":{}}}],["passport",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":633,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":613,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":641,"title":{},"body":{"index.html":{}}}],["pg",{"_index":176,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["playground",{"_index":177,"title":{},"body":{"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["poolconfig",{"_index":175,"title":{},"body":{"classes/EnvironmentBase.html":{}}}],["port",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portal",{"_index":519,"title":{},"body":{"index.html":{}}}],["post",{"_index":303,"title":{},"body":{"classes/PostResolver.html":{},"controllers/ToolsController.html":{}}}],["postgres",{"_index":141,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["postgresqlconfig",{"_index":152,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{}}}],["postresolver",{"_index":271,"title":{"classes/PostResolver.html":{}},"body":{"classes/PostResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["posttypedef",{"_index":301,"title":{},"body":{"classes/PostResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["predictable",{"_index":725,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":359,"title":{},"body":{"controllers/ToolsController.html":{}}}],["prettier",{"_index":720,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":329,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":348,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/comment/resolvers",{"_index":88,"title":{},"body":{"classes/CommentResolver.html":{}}}],["prisma/group/resolvers",{"_index":243,"title":{},"body":{"classes/GroupResolver.html":{}}}],["prisma/post/resolvers",{"_index":300,"title":{},"body":{"classes/PostResolver.html":{}}}],["prisma/user/resolvers",{"_index":402,"title":{},"body":{"classes/UserResolver.html":{}}}],["prisma_schema",{"_index":450,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma_type_defs",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":331,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientoptions",{"_index":336,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete",{"_index":346,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prismadelete(this",{"_index":352,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismadelete.ondelete(args",{"_index":354,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":14,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaselect",{"_index":537,"title":{},"body":{"index.html":{}}}],["prismaselectargs",{"_index":85,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["prismaselectargs(info",{"_index":105,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["prismaservice",{"_index":162,"title":{"injectables/PrismaService.html":{}},"body":{"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["privatekey",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["problem",{"_index":540,"title":{},"body":{"index.html":{}}}],["process.env.jwt_private_key",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_public_key",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.pgpassword",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.pguser",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":142,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":552,"title":{},"body":{"index.html":{}}}],["promisify(fs.writefile",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":137,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{}}}],["provide",{"_index":130,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"modules/ZenGraphQLModule.html":{},"overview.html":{}}}],["publickey",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queries",{"_index":541,"title":{},"body":{"index.html":{}}}],["query",{"_index":69,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{}}}],["querying",{"_index":535,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":191,"title":{},"body":{"injectables/GqlConfigService.html":{},"controllers/ToolsController.html":{}}}],["really",{"_index":592,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["releases",{"_index":702,"title":{},"body":{"index.html":{}}}],["remembermeexpiresin",{"_index":143,"title":{},"body":{"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["replicas",{"_index":660,"title":{},"body":{"index.html":{}}}],["req",{"_index":160,"title":{},"body":{"interfaces/Context.html":{},"injectables/GqlConfigService.html":{}}}],["request",{"_index":365,"title":{},"body":{"controllers/ToolsController.html":{}}}],["requests",{"_index":587,"title":{},"body":{"index.html":{}}}],["res",{"_index":161,"title":{},"body":{"interfaces/Context.html":{}}}],["reset",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"index.html":{},"overview.html":{}}}],["resolver",{"_index":81,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["resolver('comment",{"_index":101,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolver('group",{"_index":249,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolver('post",{"_index":306,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolver('user",{"_index":408,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers",{"_index":87,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"index.html":{}}}],["resolvers.mutation.createonecomment(parent",{"_index":111,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.createonegroup(parent",{"_index":257,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.createonepost(parent",{"_index":314,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.createoneuser(parent",{"_index":416,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.deletemanycomment(parent",{"_index":119,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.deletemanygroup(parent",{"_index":265,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.deletemanypost(parent",{"_index":322,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.deletemanyuser(parent",{"_index":424,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.deleteonecomment(parent",{"_index":115,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.deleteonegroup(parent",{"_index":261,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.deleteonepost(parent",{"_index":318,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.deleteoneuser(parent",{"_index":420,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.updatemanycomment(parent",{"_index":121,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.updatemanygroup(parent",{"_index":267,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.updatemanypost(parent",{"_index":324,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.updatemanyuser(parent",{"_index":426,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.updateonecomment(parent",{"_index":113,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.updateonegroup(parent",{"_index":259,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.updateonepost(parent",{"_index":316,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.updateoneuser(parent",{"_index":418,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.mutation.upsertonecomment(parent",{"_index":117,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.mutation.upsertonegroup(parent",{"_index":263,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.mutation.upsertonepost(parent",{"_index":320,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.mutation.upsertoneuser(parent",{"_index":422,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findmanycomment(parent",{"_index":107,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.query.findmanycommentcount(parent",{"_index":109,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.query.findmanygroup(parent",{"_index":253,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.query.findmanygroupcount(parent",{"_index":255,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.query.findmanypost(parent",{"_index":310,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.query.findmanypostcount(parent",{"_index":312,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.query.findmanyuser(parent",{"_index":412,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findmanyusercount(parent",{"_index":414,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers.query.findonecomment(parent",{"_index":104,"title":{},"body":{"classes/CommentResolver.html":{}}}],["resolvers.query.findonegroup(parent",{"_index":251,"title":{},"body":{"classes/GroupResolver.html":{}}}],["resolvers.query.findonepost(parent",{"_index":308,"title":{},"body":{"classes/PostResolver.html":{}}}],["resolvers.query.findoneuser(parent",{"_index":410,"title":{},"body":{"classes/UserResolver.html":{}}}],["responsive",{"_index":626,"title":{},"body":{"index.html":{}}}],["result",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":103,"title":{},"body":{"classes/CommentResolver.html":{},"interfaces/Context.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{}}}],["returns",{"_index":63,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":644,"title":{},"body":{"index.html":{}}}],["roles('super",{"_index":371,"title":{},"body":{"controllers/ToolsController.html":{}}}],["route",{"_index":635,"title":{},"body":{"index.html":{}}}],["rs256",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["safe",{"_index":573,"title":{},"body":{"index.html":{}}}],["samplecommentfield",{"_index":99,"title":{},"body":{"classes/CommentResolver.html":{}}}],["samplecommentmutation(args",{"_index":96,"title":{},"body":{"classes/CommentResolver.html":{}}}],["samplecommentquery",{"_index":94,"title":{},"body":{"classes/CommentResolver.html":{}}}],["samplegroupfield",{"_index":248,"title":{},"body":{"classes/GroupResolver.html":{}}}],["samplegroupmutation(args",{"_index":247,"title":{},"body":{"classes/GroupResolver.html":{}}}],["samplegroupquery",{"_index":245,"title":{},"body":{"classes/GroupResolver.html":{}}}],["samplepostfield",{"_index":305,"title":{},"body":{"classes/PostResolver.html":{}}}],["samplepostmutation(args",{"_index":304,"title":{},"body":{"classes/PostResolver.html":{}}}],["samplepostquery",{"_index":302,"title":{},"body":{"classes/PostResolver.html":{}}}],["sampleuserfield",{"_index":407,"title":{},"body":{"classes/UserResolver.html":{}}}],["sampleusermutation(args",{"_index":406,"title":{},"body":{"classes/UserResolver.html":{}}}],["sampleuserquery",{"_index":404,"title":{},"body":{"classes/UserResolver.html":{}}}],["sass",{"_index":663,"title":{},"body":{"index.html":{}}}],["scaling",{"_index":614,"title":{},"body":{"index.html":{}}}],["schema",{"_index":510,"title":{},"body":{"miscellaneous/functions.html":{}}}],["schema.ts",{"_index":452,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["schematics",{"_index":693,"title":{},"body":{"index.html":{}}}],["scope",{"_index":345,"title":{},"body":{"injectables/PrismaService.html":{}}}],["scope.request",{"_index":349,"title":{},"body":{"injectables/PrismaService.html":{}}}],["scripts",{"_index":700,"title":{},"body":{"index.html":{}}}],["sdl",{"_index":561,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["security",{"_index":651,"title":{},"body":{"index.html":{}}}],["select",{"_index":86,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":471,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":696,"title":{},"body":{"index.html":{}}}],["services",{"_index":571,"title":{},"body":{"index.html":{}}}],["set",{"_index":630,"title":{},"body":{"index.html":{}}}],["set_null",{"_index":545,"title":{},"body":{"index.html":{}}}],["several",{"_index":586,"title":{},"body":{"index.html":{}}}],["short",{"_index":589,"title":{},"body":{"index.html":{}}}],["show/hide",{"_index":638,"title":{},"body":{"index.html":{}}}],["side",{"_index":643,"title":{},"body":{"index.html":{}}}],["sign",{"_index":631,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":572,"title":{},"body":{"index.html":{}}}],["simplify",{"_index":578,"title":{},"body":{"index.html":{}}}],["single",{"_index":623,"title":{},"body":{"index.html":{}}}],["solve",{"_index":538,"title":{},"body":{"index.html":{}}}],["sort",{"_index":721,"title":{},"body":{"index.html":{}}}],["source",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/CommentResolver.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"modules/JwtModule.html":{},"classes/PostResolver.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ToolsController.html":{},"classes/UserResolver.html":{},"modules/ZenGraphQLModule.html":{}}}],["spa",{"_index":622,"title":{},"body":{"index.html":{}}}],["specifically",{"_index":620,"title":{},"body":{"index.html":{}}}],["stack",{"_index":517,"title":{},"body":{"index.html":{}}}],["standard",{"_index":629,"title":{},"body":{"index.html":{}}}],["standardized",{"_index":724,"title":{},"body":{"index.html":{}}}],["started",{"_index":513,"title":{"index.html":{}},"body":{}}],["stateless",{"_index":654,"title":{},"body":{"index.html":{}}}],["statements",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":100,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"classes/EnvironmentBase.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["structure",{"_index":726,"title":{},"body":{"index.html":{}}}],["styles",{"_index":675,"title":{},"body":{"index.html":{}}}],["styling",{"_index":662,"title":{},"body":{"index.html":{}}}],["subscriptions",{"_index":609,"title":{},"body":{"index.html":{}}}],["super(options",{"_index":351,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":732,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":556,"title":{},"body":{"index.html":{}}}],["svc",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":733,"title":{},"body":{"modules.html":{}}}],["system",{"_index":618,"title":{},"body":{"index.html":{}}}],["table",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":84,"title":{},"body":{"classes/CommentResolver.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"classes/UserResolver.html":{}}}],["team",{"_index":551,"title":{},"body":{"index.html":{}}}],["temp",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":536,"title":{},"body":{"index.html":{}}}],["theme",{"_index":669,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":355,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":356,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.config.graphql.playground",{"_index":197,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["this.config.production",{"_index":196,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["through",{"_index":672,"title":{},"body":{"index.html":{}}}],["tokens",{"_index":656,"title":{},"body":{"index.html":{}}}],["tool",{"_index":567,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":698,"title":{},"body":{"index.html":{}}}],["tools",{"_index":360,"title":{},"body":{"controllers/ToolsController.html":{},"dependencies.html":{},"index.html":{}}}],["toolscontroller",{"_index":24,"title":{"controllers/ToolsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ToolsController.html":{},"coverage.html":{}}}],["tracing",{"_index":199,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["transformer",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["transpiler",{"_index":666,"title":{},"body":{"index.html":{}}}],["true",{"_index":194,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.app.json",{"_index":711,"title":{},"body":{"index.html":{}}}],["type",{"_index":93,"title":{},"body":{"classes/CommentResolver.html":{},"injectables/ConfigService.html":{},"interfaces/Context.html":{},"classes/EnvironmentBase.html":{},"injectables/GqlConfigService.html":{},"classes/GroupResolver.html":{},"classes/PostResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typedefs",{"_index":192,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":201,"title":{},"body":{"injectables/GqlConfigService.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":525,"title":{},"body":{"index.html":{}}}],["up",{"_index":632,"title":{},"body":{"index.html":{}}}],["updatemanycomment",{"_index":49,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updatemanycomment(@parent",{"_index":120,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updatemanycomment(parent",{"_index":75,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updatemanygroup",{"_index":222,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updatemanygroup(@parent",{"_index":266,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updatemanygroup(parent",{"_index":237,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updatemanypost",{"_index":279,"title":{},"body":{"classes/PostResolver.html":{}}}],["updatemanypost(@parent",{"_index":323,"title":{},"body":{"classes/PostResolver.html":{}}}],["updatemanypost(parent",{"_index":294,"title":{},"body":{"classes/PostResolver.html":{}}}],["updatemanyuser",{"_index":381,"title":{},"body":{"classes/UserResolver.html":{}}}],["updatemanyuser(@parent",{"_index":425,"title":{},"body":{"classes/UserResolver.html":{}}}],["updatemanyuser(parent",{"_index":396,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateonecomment",{"_index":50,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updateonecomment(@parent",{"_index":112,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updateonecomment(parent",{"_index":77,"title":{},"body":{"classes/CommentResolver.html":{}}}],["updateonegroup",{"_index":223,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updateonegroup(@parent",{"_index":258,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updateonegroup(parent",{"_index":239,"title":{},"body":{"classes/GroupResolver.html":{}}}],["updateonepost",{"_index":280,"title":{},"body":{"classes/PostResolver.html":{}}}],["updateonepost(@parent",{"_index":315,"title":{},"body":{"classes/PostResolver.html":{}}}],["updateonepost(parent",{"_index":296,"title":{},"body":{"classes/PostResolver.html":{}}}],["updateoneuser",{"_index":382,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateoneuser(@parent",{"_index":417,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateoneuser(parent",{"_index":398,"title":{},"body":{"classes/UserResolver.html":{}}}],["uploading",{"_index":604,"title":{},"body":{"index.html":{}}}],["uploadlink",{"_index":597,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":207,"title":{},"body":{"injectables/GqlConfigService.html":{}}}],["upsertonecomment",{"_index":51,"title":{},"body":{"classes/CommentResolver.html":{}}}],["upsertonecomment(@parent",{"_index":116,"title":{},"body":{"classes/CommentResolver.html":{}}}],["upsertonecomment(parent",{"_index":79,"title":{},"body":{"classes/CommentResolver.html":{}}}],["upsertonegroup",{"_index":224,"title":{},"body":{"classes/GroupResolver.html":{}}}],["upsertonegroup(@parent",{"_index":262,"title":{},"body":{"classes/GroupResolver.html":{}}}],["upsertonegroup(parent",{"_index":241,"title":{},"body":{"classes/GroupResolver.html":{}}}],["upsertonepost",{"_index":281,"title":{},"body":{"classes/PostResolver.html":{}}}],["upsertonepost(@parent",{"_index":319,"title":{},"body":{"classes/PostResolver.html":{}}}],["upsertonepost(parent",{"_index":298,"title":{},"body":{"classes/PostResolver.html":{}}}],["upsertoneuser",{"_index":383,"title":{},"body":{"classes/UserResolver.html":{}}}],["upsertoneuser(@parent",{"_index":421,"title":{},"body":{"classes/UserResolver.html":{}}}],["upsertoneuser(parent",{"_index":400,"title":{},"body":{"classes/UserResolver.html":{}}}],["use",{"_index":682,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":432,"title":{},"body":{"modules/ZenGraphQLModule.html":{}}}],["used",{"_index":708,"title":{},"body":{"index.html":{}}}],["useguards",{"_index":366,"title":{},"body":{"controllers/ToolsController.html":{}}}],["useguards(authguard",{"_index":370,"title":{},"body":{"controllers/ToolsController.html":{}}}],["user",{"_index":405,"title":{},"body":{"classes/UserResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userresolver",{"_index":373,"title":{"classes/UserResolver.html":{}},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usertypedef",{"_index":403,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":131,"title":{},"body":{"modules/ConfigModule.html":{}}}],["using",{"_index":566,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":670,"title":{},"body":{"index.html":{}}}],["v14",{"_index":716,"title":{},"body":{"index.html":{}}}],["validator",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":739,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":692,"title":{},"body":{"index.html":{}}}],["varying",{"_index":582,"title":{},"body":{"index.html":{}}}],["versioned",{"_index":701,"title":{},"body":{"index.html":{}}}],["via",{"_index":606,"title":{},"body":{"index.html":{}}}],["vs",{"_index":569,"title":{},"body":{"index.html":{}}}],["vscode",{"_index":685,"title":{},"body":{"index.html":{}}}],["web",{"_index":518,"title":{},"body":{"index.html":{}}}],["websocketlink",{"_index":608,"title":{},"body":{"index.html":{}}}],["websockets",{"_index":611,"title":{},"body":{"index.html":{}}}],["welcome!&#x1f331",{"_index":528,"title":{},"body":{"index.html":{}}}],["within",{"_index":576,"title":{},"body":{"index.html":{}}}],["work",{"_index":621,"title":{},"body":{"index.html":{}}}],["writegraphqlschema",{"_index":453,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["writegraphqlschema(outpath",{"_index":509,"title":{},"body":{"miscellaneous/functions.html":{}}}],["x",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f380",{"_index":577,"title":{},"body":{"index.html":{}}}],["x1f939",{"_index":523,"title":{},"body":{"index.html":{}}}],["yes",{"_index":339,"title":{},"body":{"injectables/PrismaService.html":{}}}],["zen",{"_index":514,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["zenadmin",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zengraphqlmodule",{"_index":15,"title":{"modules/ZenGraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ZenGraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["zensoftware.ca",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAppModule -->\n\nJwtModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nAppModule -->\n\nZenGraphQLModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ToolsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            JwtModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ZenGraphQLModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigModule } from './config';\nimport { ToolsController } from './controllers';\nimport { ZenGraphQLModule } from './graphql';\nimport { JwtModule } from './jwt';\nimport { PrismaModule } from './prisma';\n\n@Module({\n  imports: [ConfigModule, JwtModule, ZenGraphQLModule, PrismaModule],\n  controllers: [ToolsController],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentResolver.html":{"url":"classes/CommentResolver.html","title":"class - CommentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Comment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneComment\n                            \n                            \n                                    Async\n                                deleteManyComment\n                            \n                            \n                                    Async\n                                deleteOneComment\n                            \n                            \n                                    Async\n                                findManyComment\n                            \n                            \n                                    Async\n                                findManyCommentCount\n                            \n                            \n                                    Async\n                                findOneComment\n                            \n                            \n                                    Async\n                                updateManyComment\n                            \n                            \n                                    Async\n                                updateOneComment\n                            \n                            \n                                    Async\n                                upsertOneComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyCommentCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyCommentCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneComment(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Comment.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/Comment/resolvers';\n\nexport const CommentTypeDef = null;\n// export const CommentTypeDef = gql`\n//   extend type Query {\n//     sampleCommentQuery: Comment!\n//   }\n//   extend type Mutation {\n//     sampleCommentMutation(args: Int!): Boolean\n//   }\n//   extend type Comment {\n//     sampleCommentField: String\n//   }\n// `;\n\n@Resolver('Comment')\nexport class CommentResolver {\n  @Query()\n  async findOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyCommentCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyCommentCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOneComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOneComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyComment(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyComment(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyComment(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\nimport { environment } from '../../environments/environment';\nimport { ConfigService } from './config.service';\n\n@Global()\n@Module({\n  providers: [{ provide: ConfigService, useValue: environment }],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/config/config.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EnvironmentBase\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieDomain\n                            \n                            \n                                expressPort\n                            \n                            \n                                graphql\n                            \n                            \n                                jwtOptions\n                            \n                            \n                                postgres\n                            \n                            \n                                production\n                            \n                            \n                                rememberMeExpiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookieDomain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JwtModuleOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postgres\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PostgreSQLConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            production\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rememberMeExpiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EnvironmentBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         EnvironmentBase:12\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { EnvironmentBase } from '../../environments/environment.base';\n\n@Injectable()\nexport class ConfigService extends EnvironmentBase {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Context.html":{"url":"interfaces/Context.html","title":"interface - Context","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Context\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/context.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        prisma\n                                \n                                \n                                            Optional\n                                        req\n                                \n                                \n                                            Optional\n                                        res\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        prisma\n                                    \n                                \n                                \n                                    \n                                        prisma:         PrismaService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PrismaService\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                    \n                                \n                                \n                                    \n                                        req:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        res\n                                    \n                                \n                                \n                                    \n                                        res:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PrismaService } from '../prisma';\n\nconst prisma = new PrismaService();\n\nexport interface Context {\n  req?: any;\n  res?: any;\n  prisma?: PrismaService;\n}\n\nexport function createContext(): Context {\n  return {\n    prisma,\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentBase.html":{"url":"classes/EnvironmentBase.html","title":"class - EnvironmentBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/environments/environment.base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookieDomain\n                            \n                            \n                                expressPort\n                            \n                            \n                                graphql\n                            \n                            \n                                jwtOptions\n                            \n                            \n                                postgres\n                            \n                            \n                                production\n                            \n                            \n                                rememberMeExpiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookieDomain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JwtModuleOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postgres\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PostgreSQLConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            production\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rememberMeExpiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/api/src/environments/environment.base.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { JwtModuleOptions } from '@nestjs/jwt';\nimport { PoolConfig as PostgreSQLConfig } from 'pg';\n\nexport class EnvironmentBase {\n  production: boolean;\n  expressPort: string | number;\n  graphql: {\n    playground: boolean;\n  };\n  postgres: PostgreSQLConfig;\n  jwtOptions: JwtModuleOptions;\n  rememberMeExpiresIn: number;\n  cookieDomain: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlConfigService.html":{"url":"injectables/GqlConfigService.html","title":"injectable - GqlConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GqlConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/gql-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGqlOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/graphql/gql-config.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGqlOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGqlOptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/graphql/gql-config.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     GqlModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { GqlModuleOptions, GqlOptionsFactory } from '@nestjs/graphql';\n\nimport { ConfigService } from '../config';\nimport { PrismaService } from '../prisma';\nimport { ALL_TYPE_DEFS } from './resolvers';\n\n@Injectable()\nexport class GqlConfigService implements GqlOptionsFactory {\n  constructor(private readonly config: ConfigService) {}\n\n  createGqlOptions(): GqlModuleOptions {\n    return {\n      typeDefs: ALL_TYPE_DEFS,\n      installSubscriptionHandlers: true,\n      debug: !this.config.production,\n      playground: this.config.graphql.playground,\n      introspection: this.config.graphql.playground,\n      tracing: this.config.graphql.playground,\n      cors: this.config.production ? undefined : { credentials: true, origin: true },\n      context: ctx => {\n        return ctx.connection\n          ? { ...ctx, req: ctx.connection.context, prisma: new PrismaService() }\n          : { ...ctx, prisma: new PrismaService() };\n      },\n      uploads: {\n        maxFileSize: 20_000_000, // 20 MB\n        maxFiles: 5,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupResolver.html":{"url":"classes/GroupResolver.html","title":"class - GroupResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Group.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneGroup\n                            \n                            \n                                    Async\n                                deleteManyGroup\n                            \n                            \n                                    Async\n                                deleteOneGroup\n                            \n                            \n                                    Async\n                                findManyGroup\n                            \n                            \n                                    Async\n                                findManyGroupCount\n                            \n                            \n                                    Async\n                                findOneGroup\n                            \n                            \n                                    Async\n                                updateManyGroup\n                            \n                            \n                                    Async\n                                updateOneGroup\n                            \n                            \n                                    Async\n                                upsertOneGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyGroupCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyGroupCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneGroup(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Group.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/Group/resolvers';\n\nexport const GroupTypeDef = null;\n// export const GroupTypeDef = gql`\n//   extend type Query {\n//     sampleGroupQuery: Group!\n//   }\n//   extend type Mutation {\n//     sampleGroupMutation(args: Int!): Boolean\n//   }\n//   extend type Group {\n//     sampleGroupField: String\n//   }\n// `;\n\n@Resolver('Group')\nexport class GroupResolver {\n  @Query()\n  async findOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyGroupCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyGroupCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOneGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOneGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyGroup(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyGroup(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtModule.html":{"url":"modules/JwtModule.html","title":"module - JwtModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/jwt/jwt.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { JwtModule as NestJwtModule } from '@nestjs/jwt';\n\nimport { environment } from '../../environments/environment';\n\n@Global()\n@Module({\n  imports: [NestJwtModule.register(environment.jwtOptions)],\n  exports: [NestJwtModule],\n})\nexport class JwtModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PostResolver.html":{"url":"classes/PostResolver.html","title":"class - PostResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PostResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/Post.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOnePost\n                            \n                            \n                                    Async\n                                deleteManyPost\n                            \n                            \n                                    Async\n                                deleteOnePost\n                            \n                            \n                                    Async\n                                findManyPost\n                            \n                            \n                                    Async\n                                findManyPostCount\n                            \n                            \n                                    Async\n                                findOnePost\n                            \n                            \n                                    Async\n                                updateManyPost\n                            \n                            \n                                    Async\n                                updateOnePost\n                            \n                            \n                                    Async\n                                upsertOnePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyPost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyPost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyPostCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyPostCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyPost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOnePost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOnePost(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/Post.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/Post/resolvers';\n\nexport const PostTypeDef = null;\n// export const PostTypeDef = gql`\n//   extend type Query {\n//     samplePostQuery: Post!\n//   }\n//   extend type Mutation {\n//     samplePostMutation(args: Int!): Boolean\n//   }\n//   extend type Post {\n//     samplePostField: String\n//   }\n// `;\n\n@Resolver('Post')\nexport class PostResolver {\n  @Query()\n  async findOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyPost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyPost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyPostCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyPostCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOnePost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOnePost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyPost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyPost(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyPost(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyPost(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/prisma/prisma.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/prisma/prisma.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onDelete\n                            \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: PrismaClientOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    PrismaClientOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDelete(args: onDeleteArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            onDeleteArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/prisma/prisma.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleDestroy, OnModuleInit, Optional, Scope } from '@nestjs/common';\nimport { PrismaDelete, onDeleteArgs } from '@paljs/plugins';\nimport { PrismaClient, PrismaClientOptions } from '@prisma/client';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n  constructor(@Optional() options?: PrismaClientOptions) {\n    super(options);\n  }\n\n  async onDelete(args: onDeleteArgs) {\n    const prismaDelete = new PrismaDelete(this);\n    await prismaDelete.onDelete(args);\n  }\n\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async onModuleDestroy() {\n    await this.$disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ToolsController.html":{"url":"controllers/ToolsController.html","title":"controller - ToolsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ToolsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/controllers/tools.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tools\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/controllers/tools.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Post, Query, Request, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\nimport { ConfigService } from '../config';\n\n@Controller('tools')\n// @UseGuards(AuthGuard())\n// @Roles('SUPER')\nexport class ToolsController {\n  constructor(private readonly config: ConfigService) {}\n  @Get('hello')\n  async hello() {\n    return { message: 'hello' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/graphql/resolvers/User.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOneUser\n                            \n                            \n                                    Async\n                                deleteManyUser\n                            \n                            \n                                    Async\n                                deleteOneUser\n                            \n                            \n                                    Async\n                                findManyUser\n                            \n                            \n                                    Async\n                                findManyUserCount\n                            \n                            \n                                    Async\n                                findOneUser\n                            \n                            \n                                    Async\n                                updateManyUser\n                            \n                            \n                                    Async\n                                updateOneUser\n                            \n                            \n                                    Async\n                                upsertOneUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyUserCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyUserCount(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateManyUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateManyUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertOneUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertOneUser(parent, info, args, context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/graphql/resolvers/User.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Info, Mutation, Parent, Query, Resolver } from '@nestjs/graphql';\nimport gql from 'graphql-tag';\n\nimport { PrismaSelectArgs } from '../prisma-select-args';\nimport resolvers from '../prisma/User/resolvers';\n\nexport const UserTypeDef = null;\n// export const UserTypeDef = gql`\n//   extend type Query {\n//     sampleUserQuery: User!\n//   }\n//   extend type Mutation {\n//     sampleUserMutation(args: Int!): Boolean\n//   }\n//   extend type User {\n//     sampleUserField: String\n//   }\n// `;\n\n@Resolver('User')\nexport class UserResolver {\n  @Query()\n  async findOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Query()\n  async findManyUserCount(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Query.findManyUserCount(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async createOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.createOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async upsertOneUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.upsertOneUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async deleteManyUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.deleteManyUser(parent, PrismaSelectArgs(info, args), context);\n  }\n\n  @Mutation()\n  async updateManyUser(@Parent() parent, @Info() info, @Args() args, @Context() context) {\n    return resolvers.Mutation.updateManyUser(parent, PrismaSelectArgs(info, args), context);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZenGraphQLModule.html":{"url":"modules/ZenGraphQLModule.html","title":"module - ZenGraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    ZenGraphQLModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/graphql/zen-graphql.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\n\nimport { GqlConfigService } from './gql-config.service';\nimport { NEST_RESOLVERS } from './resolvers';\n\n@Global()\n@Module({\n  imports: [\n    GraphQLModule.forRootAsync({\n      useClass: GqlConfigService,\n    }),\n  ],\n  providers: [...NEST_RESOLVERS],\n})\nexport class ZenGraphQLModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/controllers/tools.controller.ts\n            \n            controller\n            ToolsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            interface\n            Context\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            function\n            createContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/context.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/gql-config.service.ts\n            \n            injectable\n            GqlConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/prisma-select-args.ts\n            \n            function\n            PrismaSelectArgs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Comment.ts\n            \n            class\n            CommentResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Comment.ts\n            \n            variable\n            CommentTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Group.ts\n            \n            class\n            GroupResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Group.ts\n            \n            variable\n            GroupTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Post.ts\n            \n            class\n            PostResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/Post.ts\n            \n            variable\n            PostTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/User.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/User.ts\n            \n            variable\n            UserTypeDef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            ALL_TYPE_DEFS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            GRAPHQL_SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            NEST_RESOLVERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            NEST_TYPE_DEFS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/resolvers/index.ts\n            \n            variable\n            PRISMA_SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/write-schema.ts\n            \n            function\n            WriteGraphQLSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/graphql/write-schema.ts\n            \n            variable\n            execWriteFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.base.ts\n            \n            class\n            EnvironmentBase\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.4.4\n        \n            @nestjs/core : ^7.4.4\n        \n            @nestjs/graphql : ^7.6.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.4.4\n        \n            @paljs/plugins : ^1.2.6\n        \n            @prisma/client : ^2.6.0\n        \n            apollo-server-express : ^2.16.1\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ~0.2.3\n        \n            class-validator : ^0.12.2\n        \n            cookie-parser : ^1.4.5\n        \n            date-fns : ^2.16.1\n        \n            dotenv : 6.2.0\n        \n            graphql : ^15.3.0\n        \n            graphql-tools : ^6.2.0\n        \n            helmet : ^3.23.3\n        \n            lodash-es : ^4.17.14\n        \n            merge-graphql-schemas : ^1.7.8\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~6.5.5\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createContext   (apps/.../context.ts)\n                        \n                        \n                            PrismaSelectArgs   (apps/.../prisma-select-args.ts)\n                        \n                        \n                            WriteGraphQLSchema   (apps/.../write-schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/api/src/app/graphql/context.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createContext\n                        \n                        \n                    \n                \n            \n            \n                \ncreateContext()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         Context\n\n                    \n                \n            \n        \n    \n    apps/api/src/app/graphql/prisma-select-args.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PrismaSelectArgs\n                        \n                        \n                    \n                \n            \n            \n                \nPrismaSelectArgs(info, args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/api/src/app/graphql/write-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            WriteGraphQLSchema\n                        \n                        \n                    \n                \n            \n            \n                \nWriteGraphQLSchema(outPath, schema)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n⛩ Zen ⛩\nModern Full Stack Web Portal built with Nest and Angular\n&#x1F939; Currently under development - New Contributors are Welcome!&#x1F331;\n\nGraphQL Ambitions\n\n Nest GraphQL resolvers as a gateway to Prisma Client.\n Prisma Case Insensitive Filtering For case-insensitive querying of text.\n PrismaSelect to solve the N+1 problem for all queries for free.\n PrismaDelete to add CASCADE and SET_NULL deletion capabilities to Prisma. These features have yet to be implemented by the core Prisma team.  This project will convert to the approach directly supported by Prisma when the official feature becomes available.\n Nest GraphQL SDL generation to enable auto-completion using a tool like Apollo extension for VS Code\n Code generation of apollo-angular services to enable simple, type safe access to the GraphQL API within Angular. &#x1F380;\n An Angular GraphQLModule to simplify the configuration of the ApolloClient to enable/disable the varying ApolloLink features.\n HttpBatchLink for batching several GraphQL requests that occur within a short debounce interval. This really helps to alleviate network congestion.\n UploadLink to give ApolloClient HTTP multi-part form requests capabilities.  Enabling the uploading of files via GraphQLUpload.\n WebSocketLink for GraphQL subscriptions over websockets.\n\n\nAPI Authentication, Performance & Scaling Ambitions\n\n Nest authentication integration, user creation, and login system designed specifically to work for an Angular SPA (single page application).  This project will provide responsive, \"mobile first\" interfaces for the standard set of authentication features (sign up, login, password change).  \n Angular route guards and Angular directives to show/hide content depending on user permissions.\n Nest authorization directives for server side role-based access control to allow for declarative, fine grained security control over all GraphQL queries and mutations.\n 100% stateless web server authentication via JWT (Javascript Web Tokens). Keeping the API stateless will enable horizontal scaling of container replicas of the api in production.\n\n\nModern Web Components and Styling Ambitions\n\n SASS chosen as the css transpiler of choice\n Angular Material components & theme.\n Directly import Bootstrap reset, utilities, & grid features through SASS imports, and exclude the Bootstrap theme and component styles. These features are missing from Angular Material, and greatly simplify the creation of responsive, mobile first applications.\n\n\nProject & Dev Tools Ambitions\n\n Nx for project management to allow for the use of Nx Console extensions for VSCode.  Nx Console is a GUI interface for monorepos that adds a lot of modern developer conveniences.  It also helps to simplify the use of the various Angular & Nest code generation schematics available in the ecosystem.\n Angular Language Service for VSCode for modern IDE tooling.\n NPM scripts for versioned releases of the api server as a containerized Docker image.  node:14-alpine is used as the Docker container base image, and the appropriate tsconfig.app.json configurations are being applied for the Node v14 Nest app.\n Enforced code formatting via Prettier & import-sort, guaranteeing all contributions to the project are standardized with predictable structure, and clear legibility.\n Compodoc to generate Nest & Angular documentation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZenGraphQLModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAppModule -->\n\nJwtModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nZenGraphQLModule\n\nZenGraphQLModule\n\nAppModule -->\n\nZenGraphQLModule->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_TYPE_DEFS   (apps/.../index.ts)\n                        \n                        \n                            CommentTypeDef   (apps/.../Comment.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            execWriteFile   (apps/.../write-schema.ts)\n                        \n                        \n                            GRAPHQL_SCHEMA   (apps/.../index.ts)\n                        \n                        \n                            GroupTypeDef   (apps/.../Group.ts)\n                        \n                        \n                            NEST_RESOLVERS   (apps/.../index.ts)\n                        \n                        \n                            NEST_TYPE_DEFS   (apps/.../index.ts)\n                        \n                        \n                            PostTypeDef   (apps/.../Post.ts)\n                        \n                        \n                            prisma   (apps/.../context.ts)\n                        \n                        \n                            PRISMA_SCHEMA   (apps/.../index.ts)\n                        \n                        \n                            UserTypeDef   (apps/.../User.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/graphql/resolvers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_TYPE_DEFS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mergeTypes([PRISMA_TYPE_DEFS, ...NEST_TYPE_DEFS])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GRAPHQL_SCHEMA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : makeExecutableSchema({ typeDefs: ALL_TYPE_DEFS })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NEST_RESOLVERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  CommentResolver,\n  GroupResolver,\n  PostResolver,\n  UserResolver\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NEST_TYPE_DEFS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : [\n  CommentTypeDef,\n  GroupTypeDef,\n  PostTypeDef,\n  UserTypeDef\n].filter(x => x)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PRISMA_SCHEMA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : makeExecutableSchema({ typeDefs: PRISMA_TYPE_DEFS })\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Comment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CommentTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  expressPort: process.env.PORT,\n  graphql: {\n    playground: false,\n  },\n  postgres: {\n    host: 'postgres-svc',\n    port: 5432,\n    user: process.env.PGUSER,\n    password: process.env.PGPASSWORD,\n    database: 'prisma',\n  },\n  jwtOptions: {\n    privateKey: process.env.JWT_PRIVATE_KEY,\n    publicKey: process.env.JWT_PUBLIC_KEY,\n    signOptions: {\n      algorithm: 'RS256',\n      expiresIn: 3600, // 1 hour (in seconds)\n    },\n  },\n  rememberMeExpiresIn: 2592000, // 30 days (in seconds)\n  cookieDomain: 'zensoftware.ca',\n}\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  expressPort: 7080,\n  graphql: {\n    playground: true,\n  },\n  postgres: {\n    host: 'localhost',\n    port: 5445,\n    user: 'ZenAdmin',\n    password: 'temp',\n    database: 'zen',\n  },\n  jwtOptions: {\n    secret: 'dev secret',\n    signOptions: {\n      algorithm: 'HS256',\n      expiresIn: 3600, // 1 hour (in seconds)\n    },\n  },\n  rememberMeExpiresIn: 2592000, // 30 days (in seconds)\n  cookieDomain: undefined,\n}\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/write-schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            execWriteFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : promisify(fs.writeFile)\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Group.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GroupTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/Post.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PostTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/context.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            prisma\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PrismaService()\n                        \n                    \n\n\n            \n        \n\n    apps/api/src/app/graphql/resolvers/User.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserTypeDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
